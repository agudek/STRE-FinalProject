/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 12:02:49 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.checks.coding;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import com.puppycrawl.tools.checkstyle.api.SeverityLevel;
import com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EqualsAvoidNullCheck_ESTest extends EqualsAvoidNullCheck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setType(1308);
      // Undeclared exception!
      try { 
        equalsAvoidNullCheck0.visitToken(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setType(1059);
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      // Undeclared exception!
      try { 
        equalsAvoidNullCheck0.leaveToken(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      // Undeclared exception!
      try { 
        equalsAvoidNullCheck0.leaveToken(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      int[] intArray0 = equalsAvoidNullCheck0.getRequiredTokens();
      assertEquals(16, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setType(136);
      equalsAvoidNullCheck0.leaveToken(detailAST0);
      assertNull(equalsAvoidNullCheck0.getId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setType(27);
      equalsAvoidNullCheck0.leaveToken(detailAST0);
      assertEquals(0, detailAST0.getColumn());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setType(21);
      equalsAvoidNullCheck0.leaveToken(detailAST0);
      assertNull(detailAST0.getText());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setType(10);
      equalsAvoidNullCheck0.leaveToken(detailAST0);
      assertNull(detailAST0.getText());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setType(136);
      equalsAvoidNullCheck0.visitToken(detailAST0);
      assertEquals(136, detailAST0.getType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setType(27);
      // Undeclared exception!
      try { 
        equalsAvoidNullCheck0.visitToken(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setType(21);
      // Undeclared exception!
      try { 
        equalsAvoidNullCheck0.visitToken(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.initialize(7, "equalsIgnoreCase.avoid.null");
      // Undeclared exception!
      try { 
        equalsAvoidNullCheck0.visitToken(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      DetailAST detailAST0 = new DetailAST();
      equalsAvoidNullCheck0.beginTree(detailAST0);
      detailAST0.setType(10);
      equalsAvoidNullCheck0.visitToken(detailAST0);
      assertEquals(0, detailAST0.getNumberOfChildren());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setType(155);
      // Undeclared exception!
      try { 
        equalsAvoidNullCheck0.visitToken(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      DetailAST detailAST0 = new DetailAST();
      equalsAvoidNullCheck0.beginTree(detailAST0);
      equalsAvoidNullCheck0.finishTree(detailAST0);
      assertNull(equalsAvoidNullCheck0.getId());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      DetailAST detailAST0 = new DetailAST();
      equalsAvoidNullCheck0.beginTree(detailAST0);
      equalsAvoidNullCheck0.visitToken(detailAST0);
      assertEquals(SeverityLevel.ERROR, equalsAvoidNullCheck0.getSeverityLevel());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      DetailAST detailAST0 = new DetailAST();
      // Undeclared exception!
      try { 
        equalsAvoidNullCheck0.finishTree(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      equalsAvoidNullCheck0.setIgnoreEqualsIgnoreCase(false);
      assertNull(equalsAvoidNullCheck0.getId());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      DetailAST detailAST0 = new DetailAST();
      equalsAvoidNullCheck0.beginTree(detailAST0);
      equalsAvoidNullCheck0.leaveToken(detailAST0);
      assertEquals(SeverityLevel.ERROR, equalsAvoidNullCheck0.getSeverityLevel());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      int[] intArray0 = equalsAvoidNullCheck0.getAcceptableTokens();
      assertEquals(16, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EqualsAvoidNullCheck equalsAvoidNullCheck0 = new EqualsAvoidNullCheck();
      int[] intArray0 = equalsAvoidNullCheck0.getDefaultTokens();
      assertEquals(16, intArray0.length);
  }
}
