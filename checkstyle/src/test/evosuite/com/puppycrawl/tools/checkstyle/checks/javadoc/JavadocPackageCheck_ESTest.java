/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 15:03:40 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.checks.javadoc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.DefaultConfiguration;
import com.puppycrawl.tools.checkstyle.ThreadModeSettings;
import com.puppycrawl.tools.checkstyle.api.FileText;
import com.puppycrawl.tools.checkstyle.api.SeverityLevel;
import com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck;
import java.io.File;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavadocPackageCheck_ESTest extends JavadocPackageCheck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JavadocPackageCheck javadocPackageCheck0 = new JavadocPackageCheck();
      File file0 = MockFile.createTempFile("javadoc.packageInfo", ":I|7?\"PuZPn");
      Stack<String> stack0 = new Stack<String>();
      FileText fileText0 = new FileText(file0, stack0);
      try { 
        javadocPackageCheck0.processFiltered(file0, fileText0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Exception while getting canonical path to file C:\\Users\\GUDEK-~1\\AppData\\Local\\Temp\\javadoc.packageInfo0:I|7?\"PuZPn
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JavadocPackageCheck javadocPackageCheck0 = new JavadocPackageCheck();
      javadocPackageCheck0.setAllowLegacy(true);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("C:\\package.html");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      MockFile mockFile0 = new MockFile("javadoc.packageInfo", "javadoc.packageInfo");
      Stack<String> stack0 = new Stack<String>();
      FileText fileText0 = new FileText(mockFile0, stack0);
      MockFile mockFile1 = new MockFile("", "Checker");
      javadocPackageCheck0.processFiltered(mockFile1, fileText0);
      assertFalse(mockFile1.canExecute());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JavadocPackageCheck javadocPackageCheck0 = new JavadocPackageCheck();
      javadocPackageCheck0.setAllowLegacy(true);
      MockFile mockFile0 = new MockFile("javadoc.packageInfo");
      Stack<String> stack0 = new Stack<String>();
      FileText fileText0 = new FileText(mockFile0, stack0);
      // Undeclared exception!
      try { 
        javadocPackageCheck0.processFiltered(mockFile0, fileText0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JavadocPackageCheck javadocPackageCheck0 = new JavadocPackageCheck();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("C:\\package-info.java");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "general.exception");
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("C:\\package.html");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "javadoc.packageInfo");
      MockFile mockFile0 = new MockFile("javadoc.packageInfo");
      Stack<String> stack0 = new Stack<String>();
      FileText fileText0 = new FileText(mockFile0, stack0);
      MockFile mockFile1 = new MockFile("", "Checker");
      // Undeclared exception!
      try { 
        javadocPackageCheck0.processFiltered(mockFile1, fileText0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.AbstractViolationReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JavadocPackageCheck javadocPackageCheck0 = new JavadocPackageCheck();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("C:\\package-info.java");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "general.exception");
      MockFile mockFile0 = new MockFile("javadoc.packageInfo");
      Stack<String> stack0 = new Stack<String>();
      FileText fileText0 = new FileText(mockFile0, stack0);
      MockFile mockFile1 = new MockFile("", "Checker");
      javadocPackageCheck0.processFiltered(mockFile1, fileText0);
      assertEquals(0L, mockFile1.lastModified());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JavadocPackageCheck javadocPackageCheck0 = new JavadocPackageCheck();
      ThreadModeSettings threadModeSettings0 = ThreadModeSettings.SINGLE_THREAD_MODE_INSTANCE;
      DefaultConfiguration defaultConfiguration0 = new DefaultConfiguration("javadoc.packageInfo", threadModeSettings0);
      javadocPackageCheck0.configure(defaultConfiguration0);
      MockFile mockFile0 = new MockFile("javadoc.packageInfo");
      Stack<String> stack0 = new Stack<String>();
      FileText fileText0 = new FileText(mockFile0, stack0);
      javadocPackageCheck0.processFiltered(mockFile0, fileText0);
      javadocPackageCheck0.processFiltered(mockFile0, fileText0);
      assertEquals(0L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JavadocPackageCheck javadocPackageCheck0 = new JavadocPackageCheck();
      javadocPackageCheck0.beginProcessing("");
      assertEquals(SeverityLevel.ERROR, javadocPackageCheck0.getSeverityLevel());
  }
}
