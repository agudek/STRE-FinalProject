/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:02:23 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.checks.whitespace;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import antlr.BaseAST;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import com.puppycrawl.tools.checkstyle.api.FileContents;
import com.puppycrawl.tools.checkstyle.api.FileText;
import com.puppycrawl.tools.checkstyle.api.SeverityLevel;
import com.puppycrawl.tools.checkstyle.checks.whitespace.SingleSpaceSeparatorCheck;
import java.io.File;
import java.util.ArrayList;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SingleSpaceSeparatorCheck_ESTest extends SingleSpaceSeparatorCheck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      assertNull(singleSpaceSeparatorCheck0.getId());
      
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setColumnNo(3);
      // Undeclared exception!
      try { 
        singleSpaceSeparatorCheck0.beginTree(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.AbstractCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setFirstChild(detailAST0);
      singleSpaceSeparatorCheck0.getSeverity();
      singleSpaceSeparatorCheck0.clearMessages();
      singleSpaceSeparatorCheck0.getDefaultTokens();
      // Undeclared exception!
      try { 
        singleSpaceSeparatorCheck0.beginTree(detailAST0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST1.setNextSibling(detailAST0);
      detailAST0.setFirstChild(detailAST1);
      detailAST0.setColumnNo((-24));
      singleSpaceSeparatorCheck0.getSeverity();
      singleSpaceSeparatorCheck0.clearMessages();
      singleSpaceSeparatorCheck0.getDefaultTokens();
      // Undeclared exception!
      try { 
        singleSpaceSeparatorCheck0.beginTree(detailAST0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST0.setFirstChild(detailAST1);
      detailAST0.setColumnNo(0);
      singleSpaceSeparatorCheck0.getSeverity();
      singleSpaceSeparatorCheck0.clearMessages();
      singleSpaceSeparatorCheck0.getDefaultTokens();
      // Undeclared exception!
      try { 
        singleSpaceSeparatorCheck0.beginTree(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.AbstractCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      DetailAST detailAST0 = new DetailAST();
      File file0 = MockFile.createTempFile("com.puppycrawl.tools.checkstyle.checks.whitespace.SingleSpaceSeparatorCheck", "com.puppycrawl.tools.checkstyle.checks.whitespace.SingleSpaceSeparatorCheck");
      ArrayList<String> arrayList0 = new ArrayList<String>();
      Integer[] integerArray0 = new Integer[3];
      int int0 = 19;
      Integer integer0 = new Integer(19);
      integerArray0[0] = integer0;
      Integer integer1 = new Integer(int0);
      integerArray0[1] = integer1;
      Integer integer2 = new Integer(19);
      integerArray0[2] = integer2;
      arrayList0.toArray(integerArray0);
      FileText fileText0 = new FileText(file0, arrayList0);
      FileContents fileContents0 = new FileContents(fileText0);
      singleSpaceSeparatorCheck0.setFileContents(fileContents0);
      singleSpaceSeparatorCheck0.getDefaultTokens();
      // Undeclared exception!
      try { 
        singleSpaceSeparatorCheck0.beginTree(detailAST0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2147483647
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.FileText", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST1.findFirstToken(2);
      detailAST0.addNextSibling(detailAST1);
      detailAST0.setColumnNo(2);
      singleSpaceSeparatorCheck0.getAcceptableTokens();
      // Undeclared exception!
      try { 
        singleSpaceSeparatorCheck0.beginTree(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.AbstractCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      DetailAST detailAST0 = new DetailAST();
      System.setCurrentTimeMillis((-1510L));
      detailAST0.setColumnNo((-318));
      singleSpaceSeparatorCheck0.beginTree(detailAST0);
      assertEquals(0, detailAST0.getLine());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      singleSpaceSeparatorCheck0.setTabWidth((-546));
      singleSpaceSeparatorCheck0.clearMessages();
      singleSpaceSeparatorCheck0.getMessages();
      singleSpaceSeparatorCheck0.setValidateComments(true);
      Locale.getISOLanguages();
      singleSpaceSeparatorCheck0.getAcceptableTokens();
      boolean boolean0 = singleSpaceSeparatorCheck0.isCommentNodesRequired();
      assertTrue(boolean0);
      
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      singleSpaceSeparatorCheck0.setClassLoader(classLoader0);
      singleSpaceSeparatorCheck0.getAcceptableTokens();
      singleSpaceSeparatorCheck0.getAcceptableTokens();
      singleSpaceSeparatorCheck0.getRequiredTokens();
      assertTrue(singleSpaceSeparatorCheck0.isCommentNodesRequired());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      int[] intArray0 = singleSpaceSeparatorCheck0.getRequiredTokens();
      assertEquals(0, intArray0.length);
      
      boolean boolean0 = singleSpaceSeparatorCheck0.isCommentNodesRequired();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      singleSpaceSeparatorCheck0.setValidateComments(true);
      assertTrue(singleSpaceSeparatorCheck0.isCommentNodesRequired());
      
      singleSpaceSeparatorCheck0.getRequiredTokens();
      assertTrue(singleSpaceSeparatorCheck0.isCommentNodesRequired());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      singleSpaceSeparatorCheck0.getDefaultTokens();
      int[] intArray0 = singleSpaceSeparatorCheck0.getAcceptableTokens();
      assertArrayEquals(new int[] {}, intArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      int[] intArray0 = singleSpaceSeparatorCheck0.getAcceptableTokens();
      assertEquals(0, intArray0.length);
      assertArrayEquals(new int[] {}, intArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      singleSpaceSeparatorCheck0.getSeverity();
      DetailAST detailAST0 = new DetailAST();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "error";
      stringArray0[1] = "single.space.separator";
      stringArray0[2] = "single.space.separator";
      stringArray0[3] = "error";
      BaseAST.setVerboseStringConversion(false, stringArray0);
      // Undeclared exception!
      try { 
        singleSpaceSeparatorCheck0.beginTree(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.AbstractCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      boolean boolean0 = singleSpaceSeparatorCheck0.isCommentNodesRequired();
      assertFalse(boolean0);
      
      singleSpaceSeparatorCheck0.getDefaultTokens();
      DetailAST detailAST0 = new DetailAST();
      // Undeclared exception!
      try { 
        singleSpaceSeparatorCheck0.beginTree(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.AbstractCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      singleSpaceSeparatorCheck0.getDefaultTokens();
      singleSpaceSeparatorCheck0.beginTree((DetailAST) null);
      assertNull(singleSpaceSeparatorCheck0.getId());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setColumnNo(2);
      singleSpaceSeparatorCheck0.beginTree(detailAST0);
      assertEquals(SeverityLevel.ERROR, singleSpaceSeparatorCheck0.getSeverityLevel());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST0.setFirstChild(detailAST1);
      detailAST0.setColumnNo(0);
      singleSpaceSeparatorCheck0.getDefaultTokens();
      // Undeclared exception!
      try { 
        singleSpaceSeparatorCheck0.beginTree(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.AbstractCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SingleSpaceSeparatorCheck singleSpaceSeparatorCheck0 = new SingleSpaceSeparatorCheck();
      singleSpaceSeparatorCheck0.isCommentNodesRequired();
      singleSpaceSeparatorCheck0.setValidateComments(false);
      singleSpaceSeparatorCheck0.getAcceptableTokens();
      assertFalse(singleSpaceSeparatorCheck0.isCommentNodesRequired());
  }
}
