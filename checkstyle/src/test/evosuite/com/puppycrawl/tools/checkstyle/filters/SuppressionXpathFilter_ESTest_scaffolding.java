/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Apr 18 14:40:14 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.filters;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class SuppressionXpathFilter_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.puppycrawl.tools.checkstyle.filters.SuppressionXpathFilter"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "Cp1252"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\GUDEK-~1\\AppData\\Local\\Temp\\"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "C:\\Users\\Gudek-Home\\Documents\\TU\\STRE\\STRE-FinalProject\\checkstyle"); 
    java.lang.System.setProperty("user.home", "C:\\Users\\Gudek-Home"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "Gudek-Home"); 
    java.lang.System.setProperty("user.timezone", "Europe/Berlin"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SuppressionXpathFilter_ESTest_scaffolding.class.getClassLoader() ,
      "com.puppycrawl.tools.checkstyle.api.Context",
      "antlr.collections.AST",
      "com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader",
      "com.puppycrawl.tools.checkstyle.api.Filter",
      "org.apache.commons.beanutils.ConversionException",
      "com.puppycrawl.tools.checkstyle.api.Contextualizable",
      "com.puppycrawl.tools.checkstyle.api.Configurable",
      "com.puppycrawl.tools.checkstyle.api.ExternalResourceHolder",
      "org.apache.commons.beanutils.BeanUtilsBean",
      "com.puppycrawl.tools.checkstyle.utils.CommonUtils",
      "org.apache.commons.beanutils.ConvertUtilsBean",
      "com.puppycrawl.tools.checkstyle.XmlLoader",
      "com.puppycrawl.tools.checkstyle.utils.FilterUtils",
      "org.apache.commons.beanutils.Converter",
      "com.puppycrawl.tools.checkstyle.api.AutomaticBean",
      "com.puppycrawl.tools.checkstyle.api.Configuration",
      "com.puppycrawl.tools.checkstyle.filters.SuppressionXpathFilter",
      "com.puppycrawl.tools.checkstyle.TreeWalkerAuditEvent",
      "com.puppycrawl.tools.checkstyle.TreeWalkerFilter",
      "com.puppycrawl.tools.checkstyle.api.CheckstyleException"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SuppressionXpathFilter_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.puppycrawl.tools.checkstyle.api.AutomaticBean",
      "com.puppycrawl.tools.checkstyle.filters.SuppressionXpathFilter",
      "com.puppycrawl.tools.checkstyle.DefaultConfiguration",
      "com.puppycrawl.tools.checkstyle.ThreadModeSettings",
      "com.puppycrawl.tools.checkstyle.XmlLoader",
      "com.puppycrawl.tools.checkstyle.filters.SuppressionsLoader",
      "com.puppycrawl.tools.checkstyle.utils.CommonUtils",
      "com.puppycrawl.tools.checkstyle.api.CheckstyleException",
      "com.puppycrawl.tools.checkstyle.api.FileText",
      "com.puppycrawl.tools.checkstyle.DefaultContext",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.ImmutableList",
      "com.google.common.collect.ObjectArrays",
      "com.google.common.collect.RegularImmutableList",
      "com.google.common.collect.Iterators",
      "com.google.common.base.Preconditions",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.UnmodifiableListIterator",
      "com.google.common.collect.AbstractIndexedListIterator",
      "com.google.common.collect.Iterators$ArrayItr",
      "com.puppycrawl.tools.checkstyle.api.FileContents",
      "com.puppycrawl.tools.checkstyle.filters.XpathFilter",
      "net.sf.saxon.sxpath.XPathEvaluator",
      "net.sf.saxon.Configuration",
      "net.sf.saxon.lib.StandardCollationURIResolver",
      "net.sf.saxon.resource.StandardCollectionFinder",
      "net.sf.saxon.lib.StandardEnvironmentVariableResolver",
      "net.sf.saxon.lib.ParseOptions",
      "net.sf.saxon.lib.StaticQueryContextFactory",
      "net.sf.saxon.trans.CompilerInfo",
      "net.sf.saxon.lib.StandardOutputResolver",
      "net.sf.saxon.expr.instruct.GlobalParameterSet",
      "net.sf.saxon.trans.packages.PackageLibrary",
      "net.sf.saxon.tree.util.DocumentNumberAllocator",
      "net.sf.saxon.trans.DynamicLoader",
      "net.sf.saxon.om.DocumentPool",
      "net.sf.saxon.functions.IntegratedFunctionLibrary",
      "net.sf.saxon.om.NamePool",
      "net.sf.saxon.expr.parser.OptimizerOptions",
      "net.sf.saxon.lib.SerializerFactory",
      "net.sf.saxon.lib.Logger",
      "net.sf.saxon.lib.StandardLogger",
      "net.sf.saxon.java.JavaPlatform",
      "net.sf.saxon.Version",
      "net.sf.saxon.lib.StandardModuleURIResolver",
      "net.sf.saxon.lib.StandardURIResolver",
      "net.sf.saxon.lib.StandardUnparsedTextResolver",
      "net.sf.saxon.expr.parser.TypeChecker",
      "net.sf.saxon.expr.compat.TypeChecker10",
      "net.sf.saxon.Configuration$1",
      "net.sf.saxon.dom.DOMEnvelope",
      "net.sf.saxon.om.TreeModel$TinyTree",
      "net.sf.saxon.om.TreeModel$TinyTreeCondensed",
      "net.sf.saxon.om.TreeModel$LinkedTree",
      "net.sf.saxon.om.TreeModel",
      "net.sf.saxon.dom.DOMObjectModel",
      "net.sf.saxon.lib.StandardEntityResolver",
      "net.sf.saxon.resource.XmlResource$1",
      "net.sf.saxon.resource.XmlResource",
      "net.sf.saxon.resource.UnparsedTextResource$1",
      "net.sf.saxon.resource.UnparsedTextResource",
      "net.sf.saxon.resource.BinaryResource$1",
      "net.sf.saxon.resource.BinaryResource",
      "net.sf.saxon.resource.JSONResource$1",
      "net.sf.saxon.resource.JSONResource",
      "net.sf.saxon.lib.XQueryFunctionAnnotationHandler$DisallowedCombination",
      "net.sf.saxon.om.StructuredQName",
      "net.sf.saxon.query.Annotation",
      "net.sf.saxon.lib.XQueryFunctionAnnotationHandler",
      "net.sf.saxon.sxpath.AbstractStaticContext",
      "net.sf.saxon.sxpath.IndependentContext",
      "net.sf.saxon.expr.parser.ExplicitLocation",
      "net.sf.saxon.functions.FunctionLibraryList",
      "net.sf.saxon.type.AnyItemType",
      "net.sf.saxon.value.EmptySequence",
      "net.sf.saxon.functions.registry.BuiltInFunctionSet",
      "net.sf.saxon.type.NumericType",
      "net.sf.saxon.functions.registry.BuiltInFunctionSet$Entry",
      "net.sf.saxon.expr.OperandUsage",
      "net.sf.saxon.type.AnySimpleType",
      "net.sf.saxon.pattern.NodeTest",
      "net.sf.saxon.pattern.AnyNodeTest",
      "net.sf.saxon.type.Type",
      "net.sf.saxon.type.PrimitiveUType",
      "net.sf.saxon.type.UType",
      "net.sf.saxon.z.IntHashMap",
      "net.sf.saxon.type.AnyType",
      "net.sf.saxon.type.Untyped",
      "net.sf.saxon.type.ErrorType",
      "net.sf.saxon.type.BuiltInType",
      "net.sf.saxon.om.FingerprintedQName",
      "net.sf.saxon.om.StandardNames",
      "net.sf.saxon.type.BuiltInAtomicType",
      "net.sf.saxon.pattern.NodeKindTest",
      "net.sf.saxon.type.AnyFunctionType",
      "net.sf.saxon.value.SequenceType",
      "net.sf.saxon.om.AbstractItem",
      "net.sf.saxon.value.QualifiedNameValue",
      "net.sf.saxon.value.QNameValue",
      "net.sf.saxon.value.AtomicValue",
      "net.sf.saxon.value.BooleanValue",
      "net.sf.saxon.value.NumericValue",
      "net.sf.saxon.value.DecimalValue",
      "net.sf.saxon.value.Int64Value",
      "net.sf.saxon.value.IntegerValue",
      "net.sf.saxon.regex.UnicodeString",
      "net.sf.saxon.regex.LatinString",
      "net.sf.saxon.value.StringValue",
      "net.sf.saxon.value.DoubleValue",
      "net.sf.saxon.functions.registry.XPath20FunctionSet",
      "net.sf.saxon.functions.registry.XPath30FunctionSet",
      "net.sf.saxon.ma.map.MapType",
      "net.sf.saxon.functions.AbstractFunction",
      "net.sf.saxon.functions.SystemFunction",
      "net.sf.saxon.type.SpecificFunctionType",
      "net.sf.saxon.query.AnnotationList",
      "net.sf.saxon.functions.OptionsParameter",
      "net.sf.saxon.ma.json.JsonToXMLFn",
      "net.sf.saxon.ma.json.ParseJsonFn",
      "net.sf.saxon.functions.Serialize",
      "net.sf.saxon.functions.TransformFn",
      "net.sf.saxon.ma.arrays.ArrayItemType",
      "net.sf.saxon.ma.json.XMLToJsonFn",
      "net.sf.saxon.functions.registry.XPath31FunctionSet",
      "net.sf.saxon.functions.Doc_2",
      "net.sf.saxon.functions.registry.VendorFunctionSetHE",
      "net.sf.saxon.functions.MathFunctionSet",
      "net.sf.saxon.ma.map.MapFunctionSet",
      "net.sf.saxon.ma.arrays.ArrayFunctionSet",
      "net.sf.saxon.functions.registry.ExsltCommonFunctionSet",
      "net.sf.saxon.functions.registry.ConstructorFunctionLibrary",
      "net.sf.saxon.expr.PackageData",
      "net.sf.saxon.expr.instruct.SlotManager",
      "net.sf.saxon.expr.instruct.Executable",
      "net.sf.saxon.expr.parser.ExpressionTool",
      "net.sf.saxon.expr.parser.XPathParser",
      "net.sf.saxon.expr.parser.ParserExtension",
      "net.sf.saxon.om.QNameParser",
      "net.sf.saxon.Configuration$2",
      "net.sf.saxon.expr.parser.Tokenizer",
      "net.sf.saxon.value.Whitespace",
      "net.sf.saxon.om.NameChecker",
      "net.sf.saxon.serialize.charcode.UTF16CharacterSet",
      "net.sf.saxon.serialize.charcode.XMLCharacterData",
      "net.sf.saxon.lib.NamespaceConstant",
      "net.sf.saxon.pattern.NameTest",
      "net.sf.saxon.value.BigIntegerValue",
      "net.sf.saxon.functions.FormatNumber",
      "net.sf.saxon.tree.util.FastStringBuffer",
      "net.sf.saxon.value.BigDecimalValue",
      "net.sf.saxon.expr.Expression",
      "net.sf.saxon.expr.AxisExpression",
      "net.sf.saxon.expr.parser.ContextItemStaticInfo",
      "net.sf.saxon.om.AxisInfo",
      "net.sf.saxon.om.QNameException",
      "net.sf.saxon.trans.Err",
      "net.sf.saxon.trans.XPathException",
      "net.sf.saxon.expr.parser.XPathParser$NestedLocation",
      "com.puppycrawl.tools.checkstyle.utils.FilterUtils",
      "com.puppycrawl.tools.checkstyle.api.LocalizedMessage",
      "antlr.BaseAST",
      "antlr.CommonAST",
      "antlr.CommonASTWithHiddenTokens",
      "com.puppycrawl.tools.checkstyle.api.DetailAST",
      "com.puppycrawl.tools.checkstyle.filters.SuppressionCommentFilter",
      "org.apache.commons.beanutils.ConvertUtilsBean",
      "org.apache.commons.beanutils.WeakFastHashMap",
      "org.apache.commons.logging.impl.Jdk14Logger",
      "org.apache.commons.beanutils.converters.AbstractConverter",
      "org.apache.commons.beanutils.converters.BooleanConverter",
      "org.apache.commons.beanutils.ConvertUtils",
      "org.apache.commons.beanutils.converters.ConverterFacade",
      "org.apache.commons.beanutils.converters.NumberConverter",
      "org.apache.commons.beanutils.converters.ByteConverter",
      "org.apache.commons.beanutils.converters.CharacterConverter",
      "org.apache.commons.beanutils.converters.DoubleConverter",
      "org.apache.commons.beanutils.converters.FloatConverter",
      "org.apache.commons.beanutils.converters.IntegerConverter",
      "org.apache.commons.beanutils.converters.LongConverter",
      "org.apache.commons.beanutils.converters.ShortConverter",
      "org.apache.commons.beanutils.converters.BigDecimalConverter",
      "org.apache.commons.beanutils.converters.BigIntegerConverter",
      "org.apache.commons.beanutils.converters.StringConverter",
      "org.apache.commons.beanutils.converters.ClassConverter",
      "org.apache.commons.beanutils.converters.DateTimeConverter",
      "org.apache.commons.beanutils.converters.DateConverter",
      "org.apache.commons.beanutils.converters.CalendarConverter",
      "org.apache.commons.beanutils.converters.FileConverter",
      "org.apache.commons.beanutils.converters.SqlDateConverter",
      "org.apache.commons.beanutils.converters.SqlTimeConverter",
      "org.apache.commons.beanutils.converters.SqlTimestampConverter",
      "org.apache.commons.beanutils.converters.URLConverter",
      "org.apache.commons.beanutils.converters.ArrayConverter",
      "com.puppycrawl.tools.checkstyle.api.AutomaticBean$RelaxedStringArrayConverter",
      "com.puppycrawl.tools.checkstyle.api.AutomaticBean$PatternConverter",
      "com.puppycrawl.tools.checkstyle.api.AutomaticBean$SeverityLevelConverter",
      "com.puppycrawl.tools.checkstyle.api.AutomaticBean$ScopeConverter",
      "com.puppycrawl.tools.checkstyle.api.AutomaticBean$UriConverter",
      "com.puppycrawl.tools.checkstyle.api.AutomaticBean$RelaxedAccessModifierArrayConverter",
      "org.apache.commons.beanutils.ContextClassLoaderLocal",
      "org.apache.commons.beanutils.BeanUtilsBean$1",
      "org.apache.commons.beanutils.BeanUtilsBean",
      "org.apache.commons.beanutils.PropertyUtilsBean",
      "org.apache.commons.beanutils.expression.DefaultResolver",
      "org.apache.commons.beanutils.DefaultBeanIntrospector",
      "org.apache.commons.beanutils.DefaultIntrospectionContext",
      "org.apache.commons.beanutils.BeanIntrospectionData",
      "org.apache.commons.collections.FastHashMap",
      "org.apache.commons.beanutils.MappedPropertyDescriptor",
      "org.apache.commons.beanutils.MethodUtils",
      "org.apache.commons.beanutils.MethodUtils$MethodDescriptor",
      "net.sf.saxon.expr.Literal",
      "net.sf.saxon.expr.parser.RetainedStaticContext",
      "net.sf.saxon.trans.DecimalFormatManager",
      "net.sf.saxon.trans.DecimalSymbols",
      "net.sf.saxon.expr.BinaryExpression",
      "net.sf.saxon.expr.GeneralComparison",
      "net.sf.saxon.expr.GeneralComparison20",
      "net.sf.saxon.expr.Operand",
      "net.sf.saxon.expr.OperandRole",
      "net.sf.saxon.expr.parser.Token",
      "org.apache.commons.io.FilenameUtils",
      "org.apache.commons.io.IOCase",
      "com.google.common.collect.SingletonImmutableList",
      "com.google.common.collect.Iterators$9",
      "com.puppycrawl.tools.checkstyle.XmlLoader$FeaturesForVerySecureJavaInstallations",
      "com.puppycrawl.tools.checkstyle.api.FilterSet",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.Iterables",
      "com.google.common.collect.RegularImmutableMap",
      "com.puppycrawl.tools.checkstyle.filters.SuppressWithNearbyCommentFilter",
      "org.apache.commons.beanutils.PropertyUtils",
      "com.puppycrawl.tools.checkstyle.TreeWalkerAuditEvent",
      "net.sf.saxon.expr.parser.ExpressionVisitor",
      "net.sf.saxon.type.TypeHierarchy",
      "net.sf.saxon.expr.ContextItemExpression",
      "net.sf.saxon.expr.parser.RoleDiagnostic",
      "net.sf.saxon.expr.UnaryExpression",
      "net.sf.saxon.expr.ItemChecker",
      "net.sf.saxon.expr.SlashExpression",
      "net.sf.saxon.expr.SimpleStepExpression",
      "net.sf.saxon.expr.parser.Optimizer",
      "net.sf.saxon.expr.parser.LoopLifter",
      "net.sf.saxon.expr.parser.LoopLifter$ExpInfo",
      "net.sf.saxon.expr.BinaryExpression$1",
      "net.sf.saxon.expr.PairIterator",
      "net.sf.saxon.expr.UnaryExpression$1",
      "net.sf.saxon.expr.MonoIterator",
      "net.sf.saxon.sxpath.XPathExpression",
      "antlr.collections.impl.Vector",
      "com.puppycrawl.tools.checkstyle.api.LineColumn",
      "antlr.ASTNULLType",
      "net.sf.saxon.expr.instruct.Instruction",
      "net.sf.saxon.expr.instruct.Block",
      "net.sf.saxon.value.Cardinality",
      "net.sf.saxon.type.TypeHierarchy$ItemTypePair",
      "net.sf.saxon.z.IntSingletonSet",
      "net.sf.saxon.z.IntUniversalSet",
      "net.sf.saxon.pattern.NodeTest$2",
      "net.sf.saxon.expr.instruct.ForEach",
      "antlr.Token"
    );
  }
}
