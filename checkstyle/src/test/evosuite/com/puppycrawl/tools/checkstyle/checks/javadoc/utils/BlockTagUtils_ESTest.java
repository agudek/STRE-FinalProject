/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 15:11:41 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.checks.javadoc.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.checks.javadoc.utils.BlockTagUtils;
import com.puppycrawl.tools.checkstyle.checks.javadoc.utils.TagInfo;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BlockTagUtils_ESTest extends BlockTagUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        BlockTagUtils.extractBlockTags((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.javadoc.utils.BlockTagUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "G C";
      stringArray0[1] = "G C";
      List<TagInfo> list0 = BlockTagUtils.extractBlockTags(stringArray0);
      assertTrue(list0.isEmpty());
  }
}
