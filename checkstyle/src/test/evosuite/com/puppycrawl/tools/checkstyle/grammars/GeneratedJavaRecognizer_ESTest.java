/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 11:33:32 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.grammars;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import antlr.ANTLRLexer;
import antlr.ANTLRTokdefLexer;
import antlr.ASTFactory;
import antlr.ASTNULLType;
import antlr.ASTPair;
import antlr.ByteBuffer;
import antlr.CharBuffer;
import antlr.CommonAST;
import antlr.CommonASTWithHiddenTokens;
import antlr.CommonHiddenStreamToken;
import antlr.InputBuffer;
import antlr.LexerSharedInputState;
import antlr.ParseTreeRule;
import antlr.ParserSharedInputState;
import antlr.RecognitionException;
import antlr.Token;
import antlr.TokenBuffer;
import antlr.TokenStream;
import antlr.TokenStreamBasicFilter;
import antlr.TokenStreamHiddenTokenFilter;
import antlr.TokenStreamRewriteEngine;
import antlr.TokenStreamSelector;
import antlr.collections.AST;
import antlr.collections.impl.ASTArray;
import antlr.debug.ParserAdapter;
import antlr.debug.ParserReporter;
import antlr.debug.SemanticPredicateAdapter;
import antlr.debug.TraceAdapter;
import antlr.debug.TraceEvent;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer;
import com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaTokenTypes;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FilterInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedReader;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.charset.Charset;
import java.util.Enumeration;
import java.util.Hashtable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GeneratedJavaRecognizer_ESTest extends GeneratedJavaRecognizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      lexerSharedInputState0.guessing = 40;
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('\uFFFF');
      tokenBuffer0.consume();
      System.setCurrentTimeMillis(0L);
      tokenBuffer0.LA(155);
      try { 
        generatedJavaRecognizer0.forInit();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: 
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)61;
      byteArray0[0] = (byte) (-83);
      byteArray0[3] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteBuffer byteBuffer0 = new ByteBuffer(byteArrayInputStream0);
      byteBuffer0.input = (InputStream) byteArrayInputStream0;
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.resourceSpecification();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected char: 0xAD
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-69);
      byteArray0[1] = (byte) (-64);
      byteArray0[2] = (byte)13;
      byteArray0[3] = (byte)72;
      byteArray0[4] = (byte)84;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte)5;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-536), 139);
      ByteBuffer byteBuffer0 = new ByteBuffer(byteArrayInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(byteBuffer0);
      aNTLRTokdefLexer0.mark();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.ctorHead();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte) (-83);
      byteArray0[3] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteBuffer byteBuffer0 = new ByteBuffer(byteArrayInputStream0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      byteBuffer0.consume();
      try { 
        generatedJavaRecognizer0.multiCatchTypes();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected char: 0xAD
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte) (-83);
      byteArray0[3] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteBuffer byteBuffer0 = new ByteBuffer(byteArrayInputStream0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteBuffer0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      byteBuffer0.input = (InputStream) byteArrayInputStream0;
      try { 
        generatedJavaRecognizer0.implementsClause();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: =
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "2ntlr.Pa9seTreeRule";
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      aNTLRLexer0.matchNot('\uFFFF');
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      Token token0 = null;
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      generatedJavaRecognizer0.varInitializer();
      try { 
        generatedJavaRecognizer0.field();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: .
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "antlr.ParseTreeRule";
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      aNTLRLexer0.matchNot('P');
      generatedJavaRecognizer0.importDefinition();
      try { 
        generatedJavaRecognizer0.parameterDeclarationList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.annotationMemberValuePairs();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting IDENT, found 'antlr'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      sequenceInputStream0.skip((-13L));
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.LA((byte) (-53));
      aNTLRTokdefLexer0.setCaseSensitive(false);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.resourceSpecification();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting LPAREN, found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.arrayInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting LCURLY, found '2'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ByteBuffer byteBuffer0 = new ByteBuffer(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(byteBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 1855);
      try { 
        generatedJavaRecognizer0.parameterModifier();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(36);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 65536);
      try { 
        generatedJavaRecognizer0.constant();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      aSTFactory0.getASTNodeType(0);
      hashtable0.clear();
      aSTFactory0.create(0, "2ntlr.Pa9seTreeRule");
      lexerSharedInputState0.guessing = (-445);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CharBuffer charBuffer0 = new CharBuffer(stringReader0);
      LexerSharedInputState lexerSharedInputState1 = new LexerSharedInputState(charBuffer0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState1);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, (-445));
      try { 
        generatedJavaRecognizer0.enumBlock();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting LCURLY, found '2'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)84;
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte)29;
      byteArray0[4] = (byte)85;
      byteArray0[5] = (byte)41;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)97, (byte)84);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteArrayInputStream0);
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0, 24);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationMemberArrayValueInitializer();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1360);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(bufferedInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.logicalAndExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      hashtable0.clear();
      aSTFactory0.create(0, "2ntlr.Pa9seTreeRule");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      lexerSharedInputState0.guessing = (-445);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      lexerSharedInputState0.reset();
      CharBuffer charBuffer0 = new CharBuffer(stringReader0);
      LexerSharedInputState lexerSharedInputState1 = new LexerSharedInputState(charBuffer0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState1);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 0);
      try { 
        generatedJavaRecognizer0.variableLengthParameterDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: 2
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      lexerSharedInputState0.guessing = 40;
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.forInit();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: 
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      int int0 = 4203;
      parserSharedInputState0.guessing = parserSharedInputState0.guessing;
      parserSharedInputState0.guessing = parserSharedInputState0.guessing;
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteArrayInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      generatedJavaRecognizer0.matchNot(0);
      generatedJavaRecognizer0.modifiers();
      try { 
        generatedJavaRecognizer0.initializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StringReader stringReader0 = new StringReader("T($FCn0S@z[R*O");
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(stringReader0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 1);
      try { 
        generatedJavaRecognizer0.resource();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: T
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      hashtable0.clear();
      aSTFactory0.create(0, "2ntlr.Pa9seTreeRule");
      lexerSharedInputState0.guessing = (-445);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CharBuffer charBuffer0 = new CharBuffer(stringReader0);
      LexerSharedInputState lexerSharedInputState1 = new LexerSharedInputState(charBuffer0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState1);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      aNTLRTokdefLexer0.setFilename("STAR");
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.newArrayDeclarator();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: 2
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      hashtable0.clear();
      AST aST0 = aSTFactory0.create(0, "2ntlr.Pa9seTreeRule");
      lexerSharedInputState0.guessing = (-445);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CharBuffer charBuffer0 = new CharBuffer(stringReader0);
      LexerSharedInputState lexerSharedInputState1 = new LexerSharedInputState(charBuffer0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState1);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, (-445));
      try { 
        generatedJavaRecognizer0.variableDeclarator(aST0, aST0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting IDENT, found '2'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "2ntlr.Pa9seTreeRule";
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('\uFFFF');
      generatedJavaRecognizer0.importDefinition();
      try { 
        generatedJavaRecognizer0.ctorHead();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting IDENT, found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "o_c#5/G,l_");
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ByteBuffer byteBuffer0 = new ByteBuffer(sequenceInputStream0);
      PipedReader pipedReader0 = new PipedReader(169);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.conditionalExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "2ntlr.Pa9seTreeRule";
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      aNTLRLexer0.matchNot('\uFFFF');
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      generatedJavaRecognizer0.typeDefinition();
      hashtable0.clear();
      // Undeclared exception!
      try { 
        aSTFactory0.create((Token) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.ASTFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.traceIndent();
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.forEachDeclarator();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 37);
      aNTLRLexer0.newline();
      try { 
        generatedJavaRecognizer0.typeDefinition();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      tokenBuffer0.consume();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.compilationUnit();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: .
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "2ntlr.Pa9seTreeRule";
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      aNTLRLexer0.matchNot('\uFFFF');
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.additiveExpression();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      tokenStreamSelector0.getCurrentStream();
      ASTFactory aSTFactory0 = new ASTFactory();
      PipedReader pipedReader0 = new PipedReader(15);
      CharBuffer charBuffer0 = new CharBuffer(pipedReader0);
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(charBuffer0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.enumConstantBlock();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      lexerSharedInputState0.guessing = 40;
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('\uFFFF');
      try { 
        generatedJavaRecognizer0.forInit();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: 
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      CharBuffer charBuffer0 = new CharBuffer(pipedReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(charBuffer0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.handler();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F5");
      StringReader stringReader0 = new StringReader("b=WT{lWf|b");
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer((Reader) null);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 0);
      aNTLRLexer0.rewind((-2212));
      try { 
        generatedJavaRecognizer0.annotationMemberValuePair();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected char: 0x0
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" dataLength: ");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      lexerSharedInputState0.reset();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 2272);
      try { 
        generatedJavaRecognizer0.typeArgumentsOrParametersEnd();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: dataLength
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TokenBuffer tokenBuffer0 = new TokenBuffer((TokenStream) null);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 60);
      ASTNULLType aSTNULLType0 = new ASTNULLType();
      AST aST0 = aSTNULLType0.getFirstChild();
      // Undeclared exception!
      generatedJavaRecognizer0.declaratorBrackets(aST0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      hashtable0.clear();
      AST aST0 = aSTFactory0.create(0, "2ntlr.Pa9seTreeRule");
      lexerSharedInputState0.guessing = (-445);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CharBuffer charBuffer0 = new CharBuffer(stringReader0);
      LexerSharedInputState lexerSharedInputState1 = new LexerSharedInputState(charBuffer0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState1);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, (-445));
      boolean boolean0 = true;
      try { 
        generatedJavaRecognizer0.classDefinition(aST0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting \"class\", found '2'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "IyzuWYKHb]uCA");
      int int0 = (-2686);
      int int1 = 4203;
      parserSharedInputState0.guessing = (-2686);
      parserSharedInputState0.guessing = (-2686);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteArrayInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      byteArrayInputStream0.skip(4203);
      try { 
        generatedJavaRecognizer0.constant();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      RecognitionException recognitionException0 = new RecognitionException("antlr.ParseTreeRule");
      generatedJavaRecognizer0.recover(recognitionException0, aNTLRLexer0._tokenSet_3);
      try { 
        generatedJavaRecognizer0.unaryExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: .
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      int int0 = 2023;
      try { 
        generatedJavaRecognizer0.logicalAndExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: antlr
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRLexer0, 355);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.enumBlock();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // antlr.CommonToken cannot be cast to antlr.TokenWithIndex
         //
         verifyException("antlr.TokenStreamRewriteEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParserReporter parserReporter0 = new ParserReporter();
      PipedReader pipedReader0 = new PipedReader(47);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 56);
      try { 
        generatedJavaRecognizer0.enumBlock();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte) (-31);
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, 1551);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      dataInputStream0.skipBytes((byte) (-53));
      generatedJavaRecognizer0.annotations();
      try { 
        generatedJavaRecognizer0.interfaceExtends();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "2ntlr.Pa9seTreeRule";
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      aNTLRLexer0.matchNot('\uFFFF');
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      Token token0 = null;
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      generatedJavaRecognizer0.setASTFactory(aSTFactory0);
      try { 
        generatedJavaRecognizer0.builtInTypeSpec(true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: ntlr
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 44);
      try { 
        generatedJavaRecognizer0.declaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StringReader stringReader0 = new StringReader("f=6t{~");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 2272);
      try { 
        generatedJavaRecognizer0.handler();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting \"catch\", found 'f'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, 48);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      int int0 = GeneratedJavaTokenTypes.LITERAL_default;
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.multiplicativeExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "2ntlr.Pa9seTreeRule";
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      aNTLRLexer0.matchNot('\uFFFF');
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      stringReader0.reset();
      Token token0 = null;
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.field();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: 2
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      lexerSharedInputState0.guessing = 40;
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.field();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: 
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParserReporter parserReporter0 = new ParserReporter();
      PipedReader pipedReader0 = new PipedReader(55);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      pipedReader0.markSupported();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 56);
      try { 
        generatedJavaRecognizer0.throwsClause();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      RecognitionException recognitionException0 = new RecognitionException("", "", (byte)56);
      aNTLRTokdefLexer0.reportError(recognitionException0);
      Hashtable<Object, Object> hashtable0 = new Hashtable<Object, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      AST aST0 = aSTFactory0.create(128, "");
      AST aST1 = aSTFactory0.dup(aST0);
      try { 
        generatedJavaRecognizer0.typeDefinitionInternal(aST1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" dataLength: ");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      int int0 = 2272;
      aNTLRTokdefLexer0.traceIn("TYPE_ARGUMENTS");
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 0);
      ASTFactory aSTFactory0 = new ASTFactory();
      Token token0 = new Token(2628, "i% :s&aRL1fz");
      CommonAST commonAST0 = new CommonAST(token0);
      commonAST0.getFirstChild();
      aSTFactory0.create((AST) null);
      try { 
        generatedJavaRecognizer0.annotationDefinition((AST) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting AT, found 'dataLength'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(1793);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 39);
      try { 
        generatedJavaRecognizer0.forCond();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "2ntlr.Pa9seTreeRule";
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      aNTLRLexer0.matchNot('\uFFFF');
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      Token token0 = null;
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      tokenBuffer0.mark();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      generatedJavaRecognizer0.modifiers();
      try { 
        generatedJavaRecognizer0.field();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: .
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.typeParameterBounds();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting \"extends\", found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-58);
      byteArray0[2] = (byte)87;
      byteArray0[3] = (byte)107;
      byteArray0[4] = (byte) (-111);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-58), 571);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(pushbackInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeArgumentBounds(false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-83);
      byteArray0[3] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteBuffer byteBuffer0 = new ByteBuffer(byteArrayInputStream0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteArrayInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.variableLengthParameterDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected char: 0x0
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, 48);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.elseStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting \"else\", found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" dataLength: ");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 2272);
      try { 
        generatedJavaRecognizer0.lambdaParameters();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: dataLength
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      pipedInputStream0.mark(129);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 129);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(bufferedInputStream0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRTokdefLexer0, 123);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.annotationDefault();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter(tokenStreamSelector0);
      tokenStreamSelector0.select((TokenStream) tokenStreamHiddenTokenFilter0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0, 2027);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeArgument(false);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StringReader stringReader0 = new StringReader("E+<tqv#NR*2_#]#'");
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(stringReader0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.compoundStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting LCURLY, found 'E'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParserReporter parserReporter0 = new ParserReporter();
      PipedReader pipedReader0 = new PipedReader(55);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 56);
      try { 
        generatedJavaRecognizer0.forIter();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "2nlrPa9seTreeule";
      StringReader stringReader0 = new StringReader("2nlrPa9seTreeule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      aNTLRLexer0.matchNot('\uFFFF');
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      Token token0 = null;
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.field();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: nlrPa9seTreeule
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, 48);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      int int0 = 111;
      try { 
        generatedJavaRecognizer0.annotationMemberValuePair();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting IDENT, found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)56;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 156, 156);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.superClassClause();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = (-2686);
      int int1 = 4203;
      parserSharedInputState0.guessing = (-2686);
      parserSharedInputState0.guessing = (-2686);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteArrayInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.unaryExpressionNotPlusMinus();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.interfaceExtends();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      StringReader stringReader0 = new StringReader("E+<tqv#NR*2_#]#'");
      stringReader0.close();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(stringReader0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.annotationMemberArrayValueInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Stream closed
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "2ntlr.Pa9seTreeRule";
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      aNTLRLexer0.matchNot('\uFFFF');
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      aSTFactory0.create(31, "h?z(tpbK#w?");
      Token token0 = null;
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.classBlock();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting LCURLY, found 'ntlr'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 37);
      try { 
        generatedJavaRecognizer0.compoundStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      Charset charset0 = Charset.defaultCharset();
      char[] charArray0 = new char[4];
      stringReader0.markSupported();
      charArray0[0] = '[';
      charArray0[1] = '!';
      charArray0[2] = '`';
      charArray0[3] = 'Q';
      java.nio.CharBuffer charBuffer0 = java.nio.CharBuffer.wrap(charArray0);
      java.nio.ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      java.nio.CharBuffer charBuffer1 = charset0.decode(byteBuffer0);
      stringReader0.read(charBuffer1);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      lexerSharedInputState0.guessing = (int) '\uFFFF';
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('\uFFFF');
      try { 
        generatedJavaRecognizer0.resources();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: 
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      StringReader stringReader0 = new StringReader("b=WT{lWf|b");
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer((Reader) null);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationMemberValuePair();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.classOrInterfaceType(false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "<cZf3^>\"%&";
      StringReader stringReader0 = new StringReader("<cZf3^>\"%&");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('\uFFFF');
      try { 
        generatedJavaRecognizer0.resources();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting IDENT, found '>'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "IyzuWYKHb]uCA");
      int int0 = (-2686);
      int int1 = 4203;
      parserSharedInputState0.guessing = (-2686);
      parserSharedInputState0.guessing = (-2686);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteArrayInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.typeArgument(false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, 48);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      dataInputStream0.read();
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, (-191));
      try { 
        generatedJavaRecognizer0.additiveExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.typeCastParameters();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 825);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pushbackInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.typeParameter();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)61;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, 48);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.identifier();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting IDENT, found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      sequenceInputStream0.available();
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, 48);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      generatedJavaRecognizer0.typeDefinition();
      try { 
        generatedJavaRecognizer0.aCase();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte) (-83);
      byteArray0[3] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteBuffer byteBuffer0 = new ByteBuffer(byteArrayInputStream0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.annotationMemberArrayValueInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: =
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      stringReader0.reset();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.lambdaExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: antlr
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "2ntlr.Pa9seTreeRule";
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      aNTLRLexer0.matchNot('\uFFFF');
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      Token token0 = null;
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.expressionList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: ntlr
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      StringReader stringReader0 = new StringReader("E+<tqv#NR*2_#]#'");
      stringReader0.close();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(stringReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 0);
      try { 
        generatedJavaRecognizer0.caseSList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Stream closed
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "IyzuWYKHb]uCA");
      int int0 = (-2686);
      int int1 = 4203;
      parserSharedInputState0.guessing = (-2686);
      parserSharedInputState0.guessing = (-2686);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteArrayInputStream0);
      byteArrayInputStream0.reset();
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.enumConstantBlock();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting LCURLY, found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.resource();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting IDENT, found 'ParseTreeRule'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "2ntlr.Pa9seTreeRule";
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      aNTLRLexer0.matchNot('\uFFFF');
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      Token token0 = null;
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.field();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: .
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(sequenceInputStream0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRLexer0, 54);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0, 100);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.enumConstant();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // antlr.CommonToken cannot be cast to antlr.TokenWithIndex
         //
         verifyException("antlr.TokenStreamRewriteEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = " ZE(Bf/v{R'";
      StringReader stringReader0 = new StringReader(" ZE(Bf/v{R'");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('V');
      try { 
        generatedJavaRecognizer0.importDefinition();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected char: '/'
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.annotationMemberArrayInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting LCURLY, found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte) (-83);
      byteArray0[3] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteBuffer byteBuffer0 = new ByteBuffer(byteArrayInputStream0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.packageDefinition();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected char: 0xAD
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParserReporter parserReporter0 = new ParserReporter();
      PipedReader pipedReader0 = new PipedReader(55);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 56);
      try { 
        generatedJavaRecognizer0.forEachDeclarator();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "antlr.ParseTreeRule";
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('P');
      try { 
        generatedJavaRecognizer0.annotationField();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: .
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('P');
      generatedJavaRecognizer0.setASTNodeClass("antlr.ParseTreeRule");
      lexerSharedInputState0.reset();
      try { 
        generatedJavaRecognizer0.annotationField();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: .
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "antlr.ParseTreeRule";
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('P');
      try { 
        generatedJavaRecognizer0.forEachClause();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting IDENT, found 'ParseTreeRule'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      sequenceInputStream0.read(byteArray0, (int) (byte)56, (int) (byte)56);
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, 48);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.annotationExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = 45;
      int int1 = 4196;
      parserSharedInputState0.guessing = 4196;
      parserSharedInputState0.guessing = 45;
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteArrayInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      parserSharedInputState0.getInput();
      CommonHiddenStreamToken commonHiddenStreamToken0 = new CommonHiddenStreamToken(4196, "");
      CommonAST commonAST0 = new CommonAST(commonHiddenStreamToken0);
      try { 
        generatedJavaRecognizer0.interfaceDefinition(commonAST0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting \"interface\", found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "antlr.ParseTreeRule";
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('P');
      generatedJavaRecognizer0.importDefinition();
      try { 
        generatedJavaRecognizer0.conditionalExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(stringReader0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 238);
      try { 
        generatedJavaRecognizer0.finallyHandler();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting \"finally\", found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-107);
      byteArray0[1] = (byte) (-7);
      byteArray0[2] = (byte) (-90);
      byteArray0[3] = (byte) (-94);
      byteArray0[4] = (byte)64;
      byteArray0[5] = (byte)19;
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte) (-88);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-3204), (byte) (-94));
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteArrayInputStream0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 2272);
      try { 
        generatedJavaRecognizer0.logicalOrExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedReader pipedReader0 = new PipedReader(643);
      CharBuffer charBuffer0 = new CharBuffer(pipedReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(charBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 59);
      try { 
        generatedJavaRecognizer0.logicalOrExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(stringReader0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRTokdefLexer0, 149);
      stringReader0.skip(100);
      aNTLRTokdefLexer0.setLine(58);
      FileSystemHandling.shouldAllThrowIOExceptions();
      TokenBuffer tokenBuffer0 = new TokenBuffer(tokenStreamRewriteEngine0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      ParserAdapter parserAdapter0 = new ParserAdapter();
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.newExpression();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // antlr.CommonToken cannot be cast to antlr.TokenWithIndex
         //
         verifyException("antlr.TokenStreamRewriteEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "IyzuWYKHb]uCA");
      int int0 = (-2656);
      int int1 = 4203;
      parserSharedInputState0.guessing = (-2656);
      parserSharedInputState0.guessing = (-2656);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteArrayInputStream0);
      byteArrayInputStream0.mark((-1106));
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.multiCatchTypes();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      int int0 = 45;
      int int1 = 4196;
      parserSharedInputState0.guessing = 4196;
      parserSharedInputState0.guessing = 45;
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteArrayInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.shiftExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteArrayInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.unaryExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected char: 0x0
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte) (-83);
      byteArray0[3] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteBuffer byteBuffer0 = new ByteBuffer(byteArrayInputStream0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.annotation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting AT, found '='
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      StringReader stringReader0 = new StringReader("E+<tqv#NR*2_#]#'");
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(stringReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 0);
      try { 
        generatedJavaRecognizer0.caseSList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: E
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "antlr.P;r{eTreNRule";
      StringReader stringReader0 = new StringReader("antlr.P;r{eTreNRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('P');
      generatedJavaRecognizer0.importDefinition();
      try { 
        generatedJavaRecognizer0.annotationField();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting '}', found 'e'
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(stringReader0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 169);
      try { 
        generatedJavaRecognizer0.modifier();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null, 150);
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(bufferedInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      bufferedInputStream0.close();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      ASTNULLType aSTNULLType0 = new ASTNULLType();
      AST aST0 = aSTNULLType0.getNextSibling();
      try { 
        generatedJavaRecognizer0.annotationDefinition(aST0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Stream closed
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ByteBuffer byteBuffer0 = new ByteBuffer(sequenceInputStream0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 2000);
      try { 
        generatedJavaRecognizer0.explicitConstructorInvocation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "IyzuWYKHb]uCA");
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteArrayInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.unaryExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      int int0 = (-2686);
      parserSharedInputState0.guessing = (-2686);
      parserSharedInputState0.guessing = (-2686);
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteArrayInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.annotationBlock();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting LCURLY, found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      String string0 = "^NU";
      StringReader stringReader0 = new StringReader("^NU");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRTokdefLexer0, 0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      tokenStreamRewriteEngine0.delete(0, 72);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0, 0);
      tokenStreamRewriteEngine0.toOriginalString(158, 72);
      try { 
        generatedJavaRecognizer0.unaryExpressionNotPlusMinus();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected char: '^'
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "2ntlr.Pa9seTreeRule";
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('\uFFFF');
      stringReader0.close();
      try { 
        generatedJavaRecognizer0.resources();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Stream closed
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(143);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "O_zKJ7P.&a7i:K6`");
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(pipedInputStream0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRLexer0, 143);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0, 100);
      try { 
        generatedJavaRecognizer0.varInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.traditionalStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      String string0 = "ENUM";
      StringReader stringReader0 = new StringReader("ENUM");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRTokdefLexer0, 0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      tokenStreamRewriteEngine0.delete(0, 72);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0, 0);
      tokenStreamRewriteEngine0.toOriginalString(158, 72);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.unaryExpressionNotPlusMinus();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // antlr.CommonToken cannot be cast to antlr.TokenWithIndex
         //
         verifyException("antlr.TokenStreamRewriteEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer((Reader) null);
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      aNTLRLexer0.reportError("");
      boolean boolean1 = true;
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      ASTNULLType aSTNULLType0 = new ASTNULLType();
      AST aST0 = aSTNULLType0.getFirstChild();
      // Undeclared exception!
      generatedJavaRecognizer0.variableDefinitions(aST0, aST0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 129);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(bufferedInputStream0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRTokdefLexer0, 123);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0);
      SemanticPredicateAdapter semanticPredicateAdapter0 = new SemanticPredicateAdapter();
      try { 
        generatedJavaRecognizer0.classBlock();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      dataInputStream0.read();
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0, 246);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.tryBlock();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(pipedInputStream0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      pipedInputStream0.close();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.forInit();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.guessing = 1086;
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeArguments(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(pipedReader0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.interfaceExtends();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "antlr.ParseTreeRule";
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      aNTLRLexer0.matchNot('P');
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 0);
      try { 
        generatedJavaRecognizer0.expression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: ntlr
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.annotationMemberValueInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      String string0 = "antlr.ParseTreeRule";
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      aNTLRLexer0.matchNot('P');
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      Token token0 = null;
      hashtable0.clear();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.enumDefinition((AST) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting ENUM, found 'ntlr'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 129);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(bufferedInputStream0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRTokdefLexer0, 129);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0);
      try { 
        generatedJavaRecognizer0.identifierStar();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "IyzuWYKHb]uCA");
      int int0 = 45;
      int int1 = 4196;
      parserSharedInputState0.guessing = 4196;
      parserSharedInputState0.guessing = 45;
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteArrayInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.initializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParserReporter parserReporter0 = new ParserReporter();
      PipedReader pipedReader0 = new PipedReader(55);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 56);
      generatedJavaRecognizer0.consume();
      try { 
        generatedJavaRecognizer0.newArrayDeclarator();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.argList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      parserSharedInputState0.guessing = 153;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getLastChild();
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.interfaceDefinition((AST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(byteArrayInputStream0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.postfixExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.matchNot('I');
      aNTLRTokdefLexer0.setCaseSensitive(false);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, (byte)54);
      try { 
        generatedJavaRecognizer0.traditionalForClause();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      stringReader0.read();
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      RecognitionException recognitionException0 = new RecognitionException("antlr.debug.SyntacticPredicateEvent");
      aNTLRTokdefLexer0.reportError(recognitionException0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 0);
      try { 
        generatedJavaRecognizer0.typeParameters();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting LT, found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(121);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRTokdefLexer0);
      tokenStreamRewriteEngine0.toOriginalString();
      aNTLRTokdefLexer0.newline();
      tokenStreamRewriteEngine0.insertAfter(121, "n:Md:!|+i#_l^2+BFf");
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0, 121);
      try { 
        generatedJavaRecognizer0.arrayInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('P');
      generatedJavaRecognizer0.importDefinition();
      try { 
        generatedJavaRecognizer0.annotationField();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 129);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(bufferedInputStream0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRTokdefLexer0, 123);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0);
      try { 
        generatedJavaRecognizer0.forEachClause();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotations();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte) (-42);
      byteArray0[2] = (byte) (-117);
      byteArray0[3] = (byte)62;
      byteArray0[4] = (byte)113;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1949), 5);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteArrayInputStream0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0, (byte)56);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeArguments(false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "antlr.ParseTreeRule";
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('P');
      try { 
        generatedJavaRecognizer0.resources();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting IDENT, found 'ParseTreeRule'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.catchParameterDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      ASTFactory aSTFactory0 = new ASTFactory();
      DetailAST detailAST0 = new DetailAST();
      aSTFactory0.dup(detailAST0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.initializer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 129);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(bufferedInputStream0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRTokdefLexer0, 123);
      tokenStreamRewriteEngine0.toDebugString(123, 123);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0);
      DetailAST detailAST0 = new DetailAST();
      try { 
        generatedJavaRecognizer0.declaratorBrackets(detailAST0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, 159);
      CommonAST commonAST0 = new CommonAST();
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.declaratorBrackets(commonAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.inclusiveOrExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = true;
      boolean boolean1 = false;
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((ParserSharedInputState) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.logicalOrExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.LLkParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      generatedJavaRecognizer0.getASTFactory();
      ASTPair aSTPair0 = new ASTPair();
      AST aST0 = aSTPair0.root;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationDefinition((AST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.google.common.base.CharMatcher$BitSetMatcher");
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer((Reader) null);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, (-3943));
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.resourceSpecification();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      StringReader stringReader0 = new StringReader("Y");
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(stringReader0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.assignmentExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: Y
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedInputStream0);
      pipedInputStream0.mark(151);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 147);
      try { 
        generatedJavaRecognizer0.inclusiveOrExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.aCase();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.annotationDefault();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting \"default\", found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, 139);
      generatedJavaRecognizer0.setTokenBuffer((TokenBuffer) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.unaryExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.LLkParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Funnels.longFunnel()");
      ParserReporter parserReporter0 = new ParserReporter();
      int int0 = 54;
      PipedReader pipedReader0 = new PipedReader();
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      TokenStreamBasicFilter tokenStreamBasicFilter0 = new TokenStreamBasicFilter(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamBasicFilter0, 0);
      try { 
        generatedJavaRecognizer0.typeSpec(false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParserReporter parserReporter0 = new ParserReporter();
      PipedReader pipedReader0 = new PipedReader(55);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 56);
      try { 
        generatedJavaRecognizer0.explicitConstructorInvocation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      stringReader0.read();
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 0);
      try { 
        generatedJavaRecognizer0.typeArgumentBounds(true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParserReporter parserReporter0 = new ParserReporter();
      PipedReader pipedReader0 = new PipedReader(55);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      int int0 = 56;
      RecognitionException recognitionException0 = new RecognitionException("fp");
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.casesGroup();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 129);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(bufferedInputStream0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRTokdefLexer0, 123);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0);
      try { 
        generatedJavaRecognizer0.classTypeSpec(true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      pipedReader0.skip(0L);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(pipedReader0);
      aNTLRLexer0.getText();
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0);
      char[] charArray0 = null;
      int int0 = (-5);
      TraceAdapter traceAdapter0 = new TraceAdapter();
      TraceEvent traceEvent0 = new TraceEvent(generatedJavaRecognizer0);
      TraceEvent.ENTER = 143;
      traceAdapter0.enterRule(traceEvent0);
      try { 
        generatedJavaRecognizer0.annotationArguments();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState((Reader) null);
      ASTPair aSTPair0 = new ASTPair();
      aSTPair0.toString();
      ASTPair aSTPair1 = aSTPair0.copy();
      AST aST0 = aSTPair1.child;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(bufferedInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 126);
      try { 
        generatedJavaRecognizer0.resource();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Stream closed
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "";
      StringReader stringReader0 = new StringReader("");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('P');
      try { 
        generatedJavaRecognizer0.resources();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenStream) null);
      Hashtable<String, DetailAST> hashtable0 = new Hashtable<String, DetailAST>();
      ASTFactory aSTFactory0 = new ASTFactory();
      DetailAST detailAST0 = new DetailAST();
      AST aST0 = aSTFactory0.create((AST) detailAST0);
      AST aST1 = aSTFactory0.dup(aST0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.variableDefinitions(aST1, aST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer((InputBuffer) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1xMX23");
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRTokdefLexer0, 181);
      tokenStreamRewriteEngine0.toDebugString(181, 181);
      TokenBuffer tokenBuffer0 = new TokenBuffer(tokenStreamRewriteEngine0);
      tokenBuffer0.mark();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 100);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.andExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 129);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(bufferedInputStream0);
      bufferedInputStream0.close();
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRTokdefLexer0, 144);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 144);
      try { 
        generatedJavaRecognizer0.lambdaParameters();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Stream closed
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedReader pipedReader0 = new PipedReader(143);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(pipedReader0);
      TokenStreamBasicFilter tokenStreamBasicFilter0 = new TokenStreamBasicFilter(aNTLRLexer0);
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter(tokenStreamBasicFilter0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0, 143);
      CommonASTWithHiddenTokens commonASTWithHiddenTokens0 = new CommonASTWithHiddenTokens();
      try { 
        generatedJavaRecognizer0.variableDeclarator(commonASTWithHiddenTokens0, commonASTWithHiddenTokens0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer((InputBuffer) null);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.multiplicativeExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParserReporter parserReporter0 = new ParserReporter();
      PipedReader pipedReader0 = new PipedReader(55);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 56);
      try { 
        generatedJavaRecognizer0.postfixExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      CharBuffer charBuffer0 = new CharBuffer(pipedReader0);
      charBuffer0.reset();
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(charBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.traditionalStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.tryBlock();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 129);
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      tokenStreamSelector0.getCurrentStream();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenStream) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeParameterBounds();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-36);
      byteArray0[1] = (byte) (-121);
      byteArray0[2] = (byte) (-119);
      byteArray0[3] = (byte) (-10);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-1816), (byte) (-121));
      byteArrayInputStream0.read();
      byteArrayInputStream0.skip(796L);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(byteArrayInputStream0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      byteArrayInputStream0.markSupported();
      try { 
        generatedJavaRecognizer0.newExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting \"new\", found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte) (-83);
      byteArray0[2] = (byte) (-123);
      byteArray0[3] = (byte) (-108);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteBuffer byteBuffer0 = new ByteBuffer(byteArrayInputStream0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.enumConstantField();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: =
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParserReporter parserReporter0 = new ParserReporter();
      PipedReader pipedReader0 = new PipedReader(55);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 56);
      try { 
        generatedJavaRecognizer0.typeParameter();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, 118);
      generatedJavaRecognizer0.setTokenBuffer((TokenBuffer) null);
      String string0 = "fSs^:||";
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.statement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " 1qLH");
      StringReader stringReader0 = new StringReader(" 1qLH");
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(stringReader0);
      int int0 = 107;
      aNTLRTokdefLexer0.LA(107);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      aNTLRTokdefLexer0.setCommitToPath(true);
      try { 
        generatedJavaRecognizer0.wildcardType(true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected char: 0x7F
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(pipedInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      TokenStreamBasicFilter tokenStreamBasicFilter0 = new TokenStreamBasicFilter(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamBasicFilter0, 2662);
      try { 
        generatedJavaRecognizer0.constructorBody();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-86);
      byteArray0[0] = (byte) (-86);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      EvoSuiteFile evoSuiteFile1 = null;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationDefault();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((ParserSharedInputState) null);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.forStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParserReporter parserReporter0 = new ParserReporter();
      PipedReader pipedReader0 = new PipedReader(55);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      int int0 = 56;
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 56);
      try { 
        generatedJavaRecognizer0.implementsClause();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.forEachClause();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParserReporter parserReporter0 = new ParserReporter();
      PipedReader pipedReader0 = new PipedReader(55);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 56);
      try { 
        generatedJavaRecognizer0.expression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.enumBlock();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      TokenBuffer tokenBuffer0 = new TokenBuffer(tokenStreamSelector0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(sequenceInputStream0);
      aNTLRTokdefLexer0.testLiteralsTable("", (-1509));
      tokenStreamSelector0.select((TokenStream) aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.resource_assign();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting ASSIGN, found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.multiplicativeExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(stringReader0);
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.variableDeclarator((AST) null, (AST) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.throwsClause();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting \"throws\", found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.builtInType();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.LLkParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter((TokenStream) null);
      TokenBuffer tokenBuffer0 = new TokenBuffer(tokenStreamHiddenTokenFilter0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, (-3848));
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeArgumentsOrParametersEnd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer((InputBuffer) null);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, (-5));
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeParameter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      dataInputStream0.skip((byte) (-53));
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.forStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting \"for\", found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 129);
      bufferedInputStream0.mark(2805);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(bufferedInputStream0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRTokdefLexer0, 123);
      TokenBuffer tokenBuffer0 = new TokenBuffer(tokenStreamRewriteEngine0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 129);
      try { 
        generatedJavaRecognizer0.newExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, 76);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.additiveExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.LLkParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.annotationArguments();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(pipedReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, (-300));
      try { 
        generatedJavaRecognizer0.parameterModifier();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read();
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      aNTLRTokdefLexer0.rewind((byte) (-53));
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.andExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected char: 0x0
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((ParserSharedInputState) null);
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.unaryExpressionNotPlusMinus();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.typeArguments(true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting LT, found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      CharBuffer charBuffer0 = new CharBuffer(pipedReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(charBuffer0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.annotation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer((InputBuffer) null);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 0);
      boolean boolean0 = true;
      String string0 = "EXPONENT";
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.varInitializer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState((Reader) null);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 1177);
      ASTPair aSTPair0 = new ASTPair();
      generatedJavaRecognizer0.buildTokenTypeASTClassMap();
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.caseSList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      ByteBuffer byteBuffer0 = new ByteBuffer(mockFileInputStream0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.field();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState((Reader) null);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      lexerSharedInputState0.reset();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((ParserSharedInputState) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.classBlock();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(162);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(pipedInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 64);
      try { 
        generatedJavaRecognizer0.classOrInterfaceType(false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParserReporter parserReporter0 = new ParserReporter();
      PipedReader pipedReader0 = new PipedReader();
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      int int0 = 56;
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 56);
      try { 
        generatedJavaRecognizer0.relationalExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte) (-26);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      tokenStreamSelector0.getCurrentStream();
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine((TokenStream) null, 36);
      tokenStreamRewriteEngine0.delete((String) null, 0, (-138));
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.expression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.TokenStreamRewriteEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(xDF+p)4zf'H6n(Lo");
      stringReader0.ready();
      stringReader0.reset();
      CharBuffer charBuffer0 = new CharBuffer(stringReader0);
      charBuffer0.commit();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(charBuffer0);
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter(aNTLRLexer0);
      charBuffer0.rewind('\uFFFF');
      charBuffer0.rewind('\uFFFF');
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0, 1139);
      // Undeclared exception!
      generatedJavaRecognizer0.conditionalExpression();
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 129);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(bufferedInputStream0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRTokdefLexer0, 123);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0);
      try { 
        generatedJavaRecognizer0.typeParameters();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(160);
      CharBuffer charBuffer0 = new CharBuffer(pipedReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(charBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.primaryExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(pipedReader0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.parameterDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      tokenStreamSelector0.getCurrentStream();
      TokenBuffer tokenBuffer0 = new TokenBuffer((TokenStream) null);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, (-2376));
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.enumConstantField();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(130);
      CharBuffer charBuffer0 = new CharBuffer(pipedReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(charBuffer0);
      int int0 = 4016;
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 4016);
      try { 
        generatedJavaRecognizer0.superClassClause();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, (-2013));
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      dataInputStream0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.andExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(xDF+p)4zf'H6n(Lo");
      stringReader0.ready();
      stringReader0.reset();
      CharBuffer charBuffer0 = new CharBuffer(stringReader0);
      charBuffer0.commit();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(charBuffer0);
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter(aNTLRLexer0);
      charBuffer0.rewind((-747));
      charBuffer0.rewind('\uFFFF');
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0, 1147);
      // Undeclared exception!
      generatedJavaRecognizer0.lambdaExpression();
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, 118);
      generatedJavaRecognizer0.setTokenBuffer((TokenBuffer) null);
      String string0 = "fSs^:||";
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.importDefinition();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.LLkParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(pipedReader0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "oHan5h9;b{Gs(");
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 0);
      try { 
        generatedJavaRecognizer0.expressionList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(xDF+p)4zf'H6n(Lo");
      stringReader0.ready();
      stringReader0.reset();
      CharBuffer charBuffer0 = new CharBuffer(stringReader0);
      charBuffer0.commit();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(charBuffer0);
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter(aNTLRLexer0);
      charBuffer0.rewind((-747));
      charBuffer0.rewind((-747));
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0, 1147);
      try { 
        generatedJavaRecognizer0.lambdaExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected char: 0x0
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, 118);
      generatedJavaRecognizer0.setTokenBuffer((TokenBuffer) null);
      String string0 = "fSs^:|v|";
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.modifiers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K=]");
      PipedInputStream pipedInputStream0 = new PipedInputStream(1629);
      ByteBuffer byteBuffer0 = new ByteBuffer(pipedInputStream0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.resource_assign();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2926);
      pipedInputStream0.skip((-29L));
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(pipedInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 2840);
      try { 
        generatedJavaRecognizer0.ctorHead();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "vxZ,");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      parserSharedInputState0.guessing = (-552);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.type();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)58;
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, (byte)58);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.catchParameterDeclaration();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.forEachClause();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      StringReader stringReader0 = new StringReader("H");
      stringReader0.ready();
      stringReader0.ready();
      stringReader0.reset();
      CharBuffer charBuffer0 = new CharBuffer(stringReader0);
      charBuffer0.commit();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(charBuffer0);
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter(aNTLRLexer0);
      charBuffer0.rewind((-747));
      charBuffer0.rewind(0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0, 1131);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.forEachDeclarator();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      CharBuffer charBuffer0 = new CharBuffer(pipedReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(charBuffer0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.identifier();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      TokenBuffer tokenBuffer0 = null;
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, 118);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.forEachDeclarator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      tokenStreamSelector0.getCurrentStream();
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine((TokenStream) null, 36);
      tokenStreamRewriteEngine0.delete((String) null, 0, (-138));
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.resources();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.TokenStreamRewriteEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      String string0 = "(xDF+p)4zf'H6n(Lo";
      StringReader stringReader0 = new StringReader("(xDF+p)4zf'H6n(Lo");
      stringReader0.ready();
      stringReader0.reset();
      CharBuffer charBuffer0 = new CharBuffer(stringReader0);
      charBuffer0.commit();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(charBuffer0);
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter(aNTLRLexer0);
      charBuffer0.fill((-747));
      charBuffer0.rewind((-747));
      charBuffer0.rewind(0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0, 1147);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.forStatement();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      PipedReader pipedReader0 = new PipedReader();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.enumConstantField();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState((Reader) null);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 1177);
      ASTPair aSTPair0 = new ASTPair();
      generatedJavaRecognizer0.buildTokenTypeASTClassMap();
      aSTPair0.toString();
      ASTPair aSTPair1 = aSTPair0.copy();
      AST aST0 = aSTPair1.child;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeDefinitionInternal((AST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      ParserReporter parserReporter0 = new ParserReporter();
      PipedReader pipedReader0 = new PipedReader(55);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Oe'+vtD?{");
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 56);
      try { 
        generatedJavaRecognizer0.statement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.handler();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      parserSharedInputState0.guessing = 121;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeParameters();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      parserSharedInputState0.guessing = 89;
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeParameters();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.superClassClause();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter(tokenStreamSelector0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0, 52);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.equalityExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer((InputBuffer) null);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 0);
      aNTLRLexer0.setTabSize(0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.traditionalStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      EvoSuiteFile evoSuiteFile1 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      parserSharedInputState0.guessing = (-657);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      String string0 = "kzBq.*wBvN9-kP";
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.lambdaBody();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(stringReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 57);
      try { 
        generatedJavaRecognizer0.lambdaBody();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(2757);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 2757);
      aNTLRTokdefLexer0.setLine(2757);
      try { 
        generatedJavaRecognizer0.elseStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer((Reader) null);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.newArrayDeclarator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      tokenStreamSelector0.getCurrentStream();
      TokenBuffer tokenBuffer0 = new TokenBuffer((TokenStream) null);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.arrayInitializer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.guessing = 1;
      parserSharedInputState0.getInput();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-4);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte)43;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, 1);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.compilationUnit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParserReporter parserReporter0 = new ParserReporter();
      PipedReader pipedReader0 = new PipedReader(55);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 56);
      try { 
        generatedJavaRecognizer0.argList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      mockFileInputStream0.release();
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(mockFileInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      ASTFactory aSTFactory0 = new ASTFactory((Hashtable) null);
      ASTArray aSTArray0 = new ASTArray(3892);
      aSTFactory0.make(aSTArray0);
      try { 
        generatedJavaRecognizer0.enumDefinition((AST) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(2757);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 2757);
      try { 
        generatedJavaRecognizer0.enumConstant();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)58;
      byteArray0[1] = (byte) (-87);
      byteArray0[2] = (byte) (-47);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      byteArray0[3] = (byte)35;
      byteArray0[4] = (byte)50;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 54, 55);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(byteArrayInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      byteArrayInputStream0.close();
      try { 
        generatedJavaRecognizer0.assertStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting ASSERT, found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2926);
      pipedInputStream0.skip(0L);
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(pipedInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 2840);
      try { 
        generatedJavaRecognizer0.assertStatement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenStream) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.throwsClause();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      parserSharedInputState0.guessing = 175;
      parserSharedInputState0.guessing = 175;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.parameterDeclaration();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, 118);
      generatedJavaRecognizer0.setTokenBuffer((TokenBuffer) null);
      String string0 = "fSs^:||";
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeArguments(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-87);
      byteArray0[1] = (byte) (-108);
      byteArray0[2] = (byte)95;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteBuffer byteBuffer0 = new ByteBuffer(byteArrayInputStream0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.initializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected char: 0xA9
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[1];
      File file0 = MockFile.createTempFile("1Pz|.", "");
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(mockFileInputStream0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.newArrayDeclarator();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // antlr.CommonToken cannot be cast to antlr.TokenWithIndex
         //
         verifyException("antlr.TokenStreamRewriteEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine((TokenStream) null, 2181);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.argList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.TokenStreamRewriteEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(sequenceInputStream0);
      aNTLRTokdefLexer0.consumeUntil((-862048943));
      int int0 = 1;
      sequenceInputStream0.markSupported();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      try { 
        generatedJavaRecognizer0.constructorBody();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting LCURLY, found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      CommonAST commonAST0 = new CommonAST();
      AST[] aSTArray0 = new AST[2];
      aSTArray0[0] = (AST) commonAST0;
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getPreviousSibling();
      aSTArray0[1] = (AST) null;
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, (-3252));
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.classDefinition(aSTArray0[1]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer((InputStream) null);
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0, 1794);
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.parameterModifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      CharBuffer charBuffer0 = new CharBuffer((Reader) null);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(charBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeArgumentBounds(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(pipedInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 42);
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)20;
      try { 
        generatedJavaRecognizer0.builtInTypeSpec(false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0, 0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.forIter();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, (-2431));
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.packageDefinition();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)114;
      byteArray0[1] = (byte) (-48);
      byteArray0[2] = (byte) (-71);
      byteArray0[3] = (byte) (-75);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-27);
      byteArray0[6] = (byte) (-45);
      byteArray0[7] = (byte)92;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(byteArrayInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.logicalAndExpression();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      parserSharedInputState0.guessing = 0;
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, 0);
      AST aST0 = null;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationBlock();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, 2111);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.enumConstantBlock();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.resource();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      tokenStreamSelector0.getCurrentStream();
      TokenBuffer tokenBuffer0 = new TokenBuffer((TokenStream) null);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      generatedJavaRecognizer0.getAST();
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.declaratorBrackets((AST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer((InputBuffer) null);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeArgument(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.constant();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(pipedReader0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.typeParameterBounds();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.guessing = (-1448);
      parserSharedInputState0.guessing = 675;
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationMemberValueInitializer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(pipedInputStream0);
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0);
      ParseTreeRule parseTreeRule0 = new ParseTreeRule("", 0);
      try { 
        generatedJavaRecognizer0.classDefinition(parseTreeRule0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.guessing = (-1448);
      parserSharedInputState0.guessing = parserSharedInputState0.guessing;
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationMemberValueInitializer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.constructorBody();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      String string0 = "NULL_TREE_LOOKAHEAD";
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.expressionList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.assertStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeSpec(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.LLkParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenStream) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.lambdaExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      int int0 = 1654;
      tokenStreamSelector0.getEntireText();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamSelector0, 1654);
      generatedJavaRecognizer0.reportError((String) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.shiftExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState((Reader) null);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 1177);
      ASTPair aSTPair0 = new ASTPair();
      ASTPair aSTPair1 = aSTPair0.copy();
      AST aST0 = aSTPair1.child;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeDefinitionInternal((AST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test279()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamSelector0, 0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.ctorHead();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test280()  throws Throwable  {
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState((Reader) null);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.field();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test281()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.aCase();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test282()  throws Throwable  {
      TokenBuffer tokenBuffer0 = new TokenBuffer((TokenStream) null);
      tokenBuffer0.reset();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.resource_assign();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test283()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ByteBuffer byteBuffer0 = new ByteBuffer(pipedInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(byteBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 0);
      try { 
        generatedJavaRecognizer0.equalityExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test284()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      TokenBuffer tokenBuffer0 = new TokenBuffer(tokenStreamSelector0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      CommonHiddenStreamToken commonHiddenStreamToken0 = new CommonHiddenStreamToken();
      tokenStreamSelector0.getOffsetInfo(commonHiddenStreamToken0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.inclusiveOrExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test285()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      tokenStreamSelector0.getCurrentStream();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenStream) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.multiCatchTypes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test286()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.logicalAndExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.LLkParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test287()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">");
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(stringReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 823);
      try { 
        generatedJavaRecognizer0.lambdaBody();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected char: '>'
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test288()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      tokenStreamSelector0.getCurrentStream();
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter((TokenStream) null);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0, (-862048943));
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.declaration();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test289()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      tokenStreamSelector0.getCurrentStream();
      TokenStreamBasicFilter tokenStreamBasicFilter0 = new TokenStreamBasicFilter((TokenStream) null);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamBasicFilter0, 98);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationField();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.TokenStreamBasicFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test290()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.wildcardType(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test291()  throws Throwable  {
      StringReader stringReader0 = new StringReader("u'");
      CharBuffer charBuffer0 = new CharBuffer(stringReader0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(charBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      RecognitionException recognitionException0 = new RecognitionException("u'", "u'", 725);
      recognitionException0.toString();
      aNTLRTokdefLexer0.reportError(recognitionException0);
      aNTLRTokdefLexer0.testLiteralsTable(2102);
      try { 
        generatedJavaRecognizer0.wildcardType(false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting QUESTION, found 'u'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test292()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.guessing = 49;
      parserSharedInputState0.guessing = (-1061);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.identifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test293()  throws Throwable  {
      CharBuffer charBuffer0 = new CharBuffer((Reader) null);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(charBuffer0);
      aNTLRTokdefLexer0.setLine((-2597));
      charBuffer0.fill(0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, (-2597));
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.forInit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test294()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.traditionalForClause();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test295()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.elseStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test296()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.compoundStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test297()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, 0);
      int int0 = 2742;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.modifier();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.LLkParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test298()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenStream) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.explicitConstructorInvocation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test299()  throws Throwable  {
      StringReader stringReader0 = new StringReader("&4(8Xa}");
      CharBuffer charBuffer0 = new CharBuffer(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(charBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.annotationMemberArrayInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected char: '&'
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test300()  throws Throwable  {
      LexerSharedInputState lexerSharedInputState0 = null;
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer((LexerSharedInputState) null);
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0, (-637));
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.classOrInterfaceType(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test301()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((ParserSharedInputState) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.assignmentExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.LLkParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test302()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      CharBuffer charBuffer0 = new CharBuffer(pipedReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(charBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 114);
      try { 
        generatedJavaRecognizer0.typeCastParameters();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test303()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.forCond();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test304()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((ParserSharedInputState) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.parameterIdent();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test305()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2926);
      pipedInputStream0.skip(0L);
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(pipedInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 2840);
      generatedJavaRecognizer0.consume();
      try { 
        generatedJavaRecognizer0.typeArguments(true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test306()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenStream) null, 1518);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.implementsClause();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test307()  throws Throwable  {
      StringReader stringReader0 = new StringReader("(xDF+p)4zf'H6n(Lo");
      stringReader0.ready();
      stringReader0.reset();
      CharBuffer charBuffer0 = new CharBuffer(stringReader0);
      charBuffer0.commit();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(charBuffer0);
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter(aNTLRLexer0);
      charBuffer0.rewind((-747));
      charBuffer0.rewind(0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0, 1147);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.lambdaExpression();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test308()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      ParserAdapter parserAdapter0 = new ParserAdapter();
      parserSharedInputState0.guessing = (-1404);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.conditionalExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.LLkParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test309()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((ParserSharedInputState) null);
      ASTPair aSTPair0 = new ASTPair();
      ASTPair aSTPair1 = aSTPair0.copy();
      aSTPair1.toString();
      aSTPair0.toString();
      AST aST0 = aSTPair1.root;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.enumDefinition((AST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test310()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.enumConstant();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test311()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      parserSharedInputState0.guessing = 889;
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, (-3849));
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.builtInTypeSpec(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.LLkParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test312()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((ParserSharedInputState) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.builtInTypeSpec(false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.LLkParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test313()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-38);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (byte) (-38));
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(byteArrayInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.typeSpec(true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test314()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(stringReader0);
      stringReader0.read();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 745);
      try { 
        generatedJavaRecognizer0.identifierStar();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting IDENT, found 'null'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test315()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.finallyHandler();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test316()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      ASTNULLType aSTNULLType0 = new ASTNULLType();
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.variableDeclarator(aSTNULLType0, aSTNULLType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test317()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      int int0 = (-1460);
      int int1 = 0;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.relationalExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.LLkParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test318()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeDefinition();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test319()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((ParserSharedInputState) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.newExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test320()  throws Throwable  {
      CharBuffer charBuffer0 = new CharBuffer((Reader) null);
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(charBuffer0);
      charBuffer0.getMarkedChars();
      lexerSharedInputState0.guessing = 0;
      lexerSharedInputState0.guessing = 2;
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 2);
      lexerSharedInputState0.guessing = 0;
      lexerSharedInputState0.reset();
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.exclusiveOrExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test321()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(1073741824);
      CharBuffer charBuffer0 = new CharBuffer(pipedReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(charBuffer0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      ASTFactory aSTFactory0 = new ASTFactory();
      ASTNULLType aSTNULLType0 = new ASTNULLType();
      AST aST0 = aSTFactory0.dup(aSTNULLType0);
      try { 
        generatedJavaRecognizer0.typeDefinitionInternal(aST0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test322()  throws Throwable  {
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer((LexerSharedInputState) null);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      int int0 = 0;
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, 0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.casesGroup();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test323()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.identifierStar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test324()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenStream) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.classTypeSpec(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test325()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.LLkParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test326()  throws Throwable  {
      TokenStreamBasicFilter tokenStreamBasicFilter0 = new TokenStreamBasicFilter((TokenStream) null);
      TokenBuffer tokenBuffer0 = new TokenBuffer(tokenStreamBasicFilter0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      generatedJavaRecognizer0.traceIndent();
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.lambdaParameters();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.TokenStreamBasicFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test327()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, 0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeCastParameters();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test328()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenStream) null, (-1862));
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test329()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.lambdaExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test330()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, 0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationMemberArrayInitializer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test331()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamSelector0, 174);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationMemberValuePairs();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test332()  throws Throwable  {
      TokenStreamHiddenTokenFilter tokenStreamHiddenTokenFilter0 = new TokenStreamHiddenTokenFilter((TokenStream) null);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamHiddenTokenFilter0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.variableLengthParameterDeclaration();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test333()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.forIter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test334()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      parserSharedInputState0.guessing = (-1480);
      parserSharedInputState0.guessing = (-1480);
      parserSharedInputState0.guessing = (-1480);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.interfaceExtends();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test335()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      int int0 = 0;
      parserSharedInputState0.guessing = 0;
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.primaryExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test336()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.parameterDeclarationList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test337()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      parserSharedInputState0.guessing = 121;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeParameters();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test338()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(pipedReader0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.assignmentExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test339()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.postfixExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test340()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((ParserSharedInputState) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.parameterDeclarationList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test341()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationArguments();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test342()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      StringReader stringReader0 = new StringReader("E+<tqv#NR*2_#]#'");
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(stringReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 0);
      ASTFactory aSTFactory0 = new ASTFactory();
      generatedJavaRecognizer0.packageDefinition();
      AST aST0 = aSTFactory0.create(0);
      try { 
        generatedJavaRecognizer0.enumDefinition(aST0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting ENUM, found 'tqv'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test343()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationMemberValuePairs();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test344()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte) (-83);
      byteArray0[3] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteBuffer byteBuffer0 = new ByteBuffer(byteArrayInputStream0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      byteBuffer0.input = (InputStream) byteArrayInputStream0;
      try { 
        generatedJavaRecognizer0.parameterDeclaration();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: =
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test345()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("*IL;");
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(stringReader0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.annotationBlock();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting LCURLY, found '*'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test346()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, 0);
      // Undeclared exception!
      try { 
        parserSharedInputState0.reset();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.ParserSharedInputState", e);
      }
  }

  @Test(timeout = 4000)
  public void test347()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      hashtable0.clear();
      AST aST0 = aSTFactory0.create(0, "2ntlr.Pa9seTreeRule");
      lexerSharedInputState0.guessing = (-445);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CharBuffer charBuffer0 = new CharBuffer(stringReader0);
      LexerSharedInputState lexerSharedInputState1 = new LexerSharedInputState(charBuffer0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState1);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, (-445));
      boolean boolean0 = false;
      try { 
        generatedJavaRecognizer0.classDefinition(aST0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting \"class\", found '2'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test348()  throws Throwable  {
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer((LexerSharedInputState) null);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, (-2206));
      ASTPair aSTPair0 = new ASTPair();
      ASTPair aSTPair1 = aSTPair0.copy();
      AST aST0 = aSTPair1.child;
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.declaratorBrackets((AST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test349()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      FileSystemHandling.shouldAllThrowIOExceptions();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(parserSharedInputState0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeArgumentsOrParametersEnd();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test350()  throws Throwable  {
      Enumeration<FilterInputStream> enumeration0 = (Enumeration<FilterInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ByteBuffer byteBuffer0 = new ByteBuffer(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(byteBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 1855);
      try { 
        generatedJavaRecognizer0.type();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test351()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeCastParameters();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test352()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      CharBuffer charBuffer0 = new CharBuffer(pipedReader0);
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(charBuffer0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      lexerSharedInputState0.guessing = 12;
      aNTLRLexer0.traceIndent();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 12);
      try { 
        generatedJavaRecognizer0.lambdaBody();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test353()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 37);
      try { 
        generatedJavaRecognizer0.explicitConstructorInvocation();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test354()  throws Throwable  {
      StringReader stringReader0 = new StringReader(" dataLength: ");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 2272);
      try { 
        generatedJavaRecognizer0.statement();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: dataLength
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test355()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)61;
      byteArray0[1] = (byte) (-83);
      byteArray0[3] = (byte)61;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ByteBuffer byteBuffer0 = new ByteBuffer(byteArrayInputStream0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteBuffer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.enumConstantField();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: =
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test356()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, 142);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.compoundStatement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test357()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      sequenceInputStream0.read(byteArray0, 48, 48);
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      aNTLRTokdefLexer0.setCaseSensitive(false);
      int int0 = GeneratedJavaTokenTypes.LITERAL_default;
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.expression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test358()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      int int0 = 4203;
      parserSharedInputState0.guessing = parserSharedInputState0.guessing;
      parserSharedInputState0.guessing = parserSharedInputState0.guessing;
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(byteArrayInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0);
      try { 
        generatedJavaRecognizer0.initializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test359()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "2ntlr.Pa9seTreeRule";
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      aNTLRLexer0.matchNot('\uFFFF');
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      Token token0 = null;
      hashtable0.clear();
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.enumBlock();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting LCURLY, found 'ntlr'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test360()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      tokenStreamSelector0.getCurrentStream();
      TokenStreamRewriteEngine tokenStreamRewriteEngine0 = new TokenStreamRewriteEngine((TokenStream) null, 35);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenStreamRewriteEngine0, 100);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.enumConstant();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.TokenStreamRewriteEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test361()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "2ntlr.Pa9seTreeRule";
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('\uFFFF');
      try { 
        generatedJavaRecognizer0.resources();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // expecting IDENT, found 'Pa9seTreeRule'
         //
         verifyException("antlr.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test362()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      Hashtable<FilterInputStream, Object> hashtable0 = new Hashtable<FilterInputStream, Object>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      hashtable0.clear();
      aSTFactory0.create(0, "2ntlr.Pa9seTreeRule");
      lexerSharedInputState0.guessing = (-445);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CharBuffer charBuffer0 = new CharBuffer(stringReader0);
      LexerSharedInputState lexerSharedInputState1 = new LexerSharedInputState(charBuffer0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState1);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRTokdefLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0, (-445));
      try { 
        generatedJavaRecognizer0.varInitializer();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: 2
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test363()  throws Throwable  {
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      lexerSharedInputState0.guessing = 40;
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('\uFFFF');
      tokenBuffer0.LA(155);
      try { 
        generatedJavaRecognizer0.forInit();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: 
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test364()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("2ntlr.Pa9seTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.unaryExpressionNotPlusMinus();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: 2
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test365()  throws Throwable  {
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.compilationUnit();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: antlr
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test366()  throws Throwable  {
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      try { 
        generatedJavaRecognizer0.unaryExpression();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: antlr
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test367()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "antlr.ParseTreeRule";
      StringReader stringReader0 = new StringReader("antlr.ParseTreeRule");
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState(stringReader0);
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(lexerSharedInputState0);
      TokenBuffer tokenBuffer0 = new TokenBuffer(aNTLRLexer0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(tokenBuffer0);
      aNTLRLexer0.matchNot('P');
      generatedJavaRecognizer0.importDefinition();
      try { 
        generatedJavaRecognizer0.annotationField();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test368()  throws Throwable  {
      TokenStreamSelector tokenStreamSelector0 = new TokenStreamSelector();
      tokenStreamSelector0.getCurrentStream();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenStream) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationMemberValueInitializer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test369()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-116);
      byteArray0[1] = (byte)123;
      byteArray0[2] = (byte) (-122);
      byteArray0[3] = (byte)26;
      byteArray0[4] = (byte) (-128);
      byteArray0[5] = (byte) (-113);
      byteArray0[6] = (byte) (-107);
      byteArray0[7] = (byte) (-97);
      byteArray0[8] = (byte)21;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      parserSharedInputState0.getInput();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null, 0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationExpression();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.LLkParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test370()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((ParserSharedInputState) null);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.classBlock();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test371()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)56;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-53);
      int int0 = GeneratedJavaTokenTypes.SINGLE_LINE_COMMENT;
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(dataInputStream0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      try { 
        generatedJavaRecognizer0.forIter();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: null
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test372()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenStream) null);
      Hashtable<String, DetailAST> hashtable0 = new Hashtable<String, DetailAST>();
      ASTFactory aSTFactory0 = new ASTFactory(hashtable0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationMemberArrayValueInitializer();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test373()  throws Throwable  {
      ParserSharedInputState parserSharedInputState0 = new ParserSharedInputState();
      StringReader stringReader0 = new StringReader("eE+<tqv#NR*2_#]#'");
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(stringReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 0);
      try { 
        generatedJavaRecognizer0.caseSList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // unexpected token: eE
         //
         verifyException("com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test374()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ParserReporter parserReporter0 = new ParserReporter();
      PipedReader pipedReader0 = new PipedReader(64);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(pipedReader0);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0, 56);
      try { 
        generatedJavaRecognizer0.argList();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("antlr.ANTLRTokdefLexer", e);
      }
  }

  @Test(timeout = 4000)
  public void test375()  throws Throwable  {
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer((TokenBuffer) null);
      generatedJavaRecognizer0.setTokenBuffer((TokenBuffer) null);
      String string0 = "fSs^:||";
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.typeArguments(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test376()  throws Throwable  {
      LexerSharedInputState lexerSharedInputState0 = new LexerSharedInputState((Reader) null);
      ANTLRTokdefLexer aNTLRTokdefLexer0 = new ANTLRTokdefLexer(lexerSharedInputState0);
      lexerSharedInputState0.reset();
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRTokdefLexer0);
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.annotationArguments();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test377()  throws Throwable  {
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer((Reader) null);
      GeneratedJavaRecognizer generatedJavaRecognizer0 = new GeneratedJavaRecognizer(aNTLRLexer0, 1174);
      generatedJavaRecognizer0.buildTokenTypeASTClassMap();
      // Undeclared exception!
      try { 
        generatedJavaRecognizer0.parameterDeclarationList();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
