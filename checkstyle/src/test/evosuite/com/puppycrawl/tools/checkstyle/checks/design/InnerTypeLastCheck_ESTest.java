/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 15:03:14 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.checks.design;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import antlr.BaseAST;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import com.puppycrawl.tools.checkstyle.api.FileContents;
import com.puppycrawl.tools.checkstyle.api.SeverityLevel;
import com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheck;
import java.io.CharArrayWriter;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InnerTypeLastCheck_ESTest extends InnerTypeLastCheck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      InnerTypeLastCheck innerTypeLastCheck0 = new InnerTypeLastCheck();
      assertEquals(SeverityLevel.ERROR, innerTypeLastCheck0.getSeverityLevel());
      
      DetailAST detailAST0 = new DetailAST();
      innerTypeLastCheck0.leaveToken(detailAST0);
      innerTypeLastCheck0.getFileContents();
      innerTypeLastCheck0.setId((String) null);
      innerTypeLastCheck0.getAcceptableTokens();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      innerTypeLastCheck0.getMessages();
      innerTypeLastCheck0.getDefaultTokens();
      innerTypeLastCheck0.visitToken(detailAST0);
      detailAST0.initialize(962, "r!sxotBh8LLnj'[");
      detailAST0.addNextSibling(detailAST0);
      innerTypeLastCheck0.getAcceptableTokens();
      // Undeclared exception!
      innerTypeLastCheck0.visitToken(detailAST0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      InnerTypeLastCheck innerTypeLastCheck0 = new InnerTypeLastCheck();
      DetailAST detailAST0 = new DetailAST();
      innerTypeLastCheck0.leaveToken(detailAST0);
      innerTypeLastCheck0.getFileContents();
      innerTypeLastCheck0.setId((String) null);
      innerTypeLastCheck0.getAcceptableTokens();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      innerTypeLastCheck0.getDefaultTokens();
      innerTypeLastCheck0.visitToken(detailAST0);
      detailAST0.addNextSibling(detailAST0);
      innerTypeLastCheck0.getAcceptableTokens();
      // Undeclared exception!
      innerTypeLastCheck0.visitToken(detailAST0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      InnerTypeLastCheck innerTypeLastCheck0 = new InnerTypeLastCheck();
      int[] intArray0 = innerTypeLastCheck0.getAcceptableTokens();
      assertArrayEquals(new int[] {14, 15}, intArray0);
      
      DetailAST detailAST0 = new DetailAST();
      innerTypeLastCheck0.leaveToken(detailAST0);
      DetailAST detailAST1 = new DetailAST();
      detailAST0.setFirstChild(detailAST1);
      detailAST0.getParent();
      innerTypeLastCheck0.setId((String) null);
      innerTypeLastCheck0.getAcceptableTokens();
      innerTypeLastCheck0.getDefaultTokens();
      innerTypeLastCheck0.visitToken(detailAST0);
      detailAST1.addNextSibling((DetailAST) null);
      detailAST1.setType(10);
      detailAST0.addNextSibling(detailAST1);
      innerTypeLastCheck0.getAcceptableTokens();
      innerTypeLastCheck0.leaveToken(detailAST1);
      // Undeclared exception!
      try { 
        innerTypeLastCheck0.visitToken(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.AbstractCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      InnerTypeLastCheck innerTypeLastCheck0 = new InnerTypeLastCheck();
      innerTypeLastCheck0.getAcceptableTokens();
      DetailAST detailAST0 = new DetailAST();
      innerTypeLastCheck0.leaveToken(detailAST0);
      DetailAST detailAST1 = new DetailAST();
      detailAST0.setFirstChild(detailAST1);
      detailAST0.getParent();
      innerTypeLastCheck0.setId((String) null);
      innerTypeLastCheck0.getAcceptableTokens();
      innerTypeLastCheck0.getRequiredTokens();
      innerTypeLastCheck0.getDefaultTokens();
      innerTypeLastCheck0.visitToken(detailAST0);
      innerTypeLastCheck0.visitToken(detailAST0);
      detailAST1.addNextSibling((DetailAST) null);
      detailAST0.addNextSibling(detailAST1);
      innerTypeLastCheck0.getAcceptableTokens();
      innerTypeLastCheck0.leaveToken(detailAST1);
      innerTypeLastCheck0.visitToken(detailAST0);
      int[] intArray0 = innerTypeLastCheck0.getAcceptableTokens();
      assertArrayEquals(new int[] {14, 15}, intArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      InnerTypeLastCheck innerTypeLastCheck0 = new InnerTypeLastCheck();
      innerTypeLastCheck0.getMessages();
      innerTypeLastCheck0.getAcceptableTokens();
      DetailAST detailAST0 = new DetailAST();
      innerTypeLastCheck0.leaveToken(detailAST0);
      innerTypeLastCheck0.getFileContents();
      innerTypeLastCheck0.setFileContents((FileContents) null);
      DetailAST detailAST1 = new DetailAST();
      detailAST0.setFirstChild(detailAST1);
      detailAST0.getParent();
      detailAST0.findAllPartial(detailAST1);
      innerTypeLastCheck0.setId((String) null);
      detailAST0.setLineNo(8233);
      innerTypeLastCheck0.getAcceptableTokens();
      innerTypeLastCheck0.getRequiredTokens();
      innerTypeLastCheck0.getDefaultTokens();
      innerTypeLastCheck0.visitToken(detailAST0);
      innerTypeLastCheck0.leaveToken(detailAST0);
      innerTypeLastCheck0.visitToken(detailAST0);
      detailAST1.addNextSibling((DetailAST) null);
      innerTypeLastCheck0.getAcceptableTokens();
      innerTypeLastCheck0.leaveToken(detailAST1);
      innerTypeLastCheck0.visitToken(detailAST0);
      assertEquals(0, detailAST0.getType());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      InnerTypeLastCheck innerTypeLastCheck0 = new InnerTypeLastCheck();
      innerTypeLastCheck0.getMessages();
      innerTypeLastCheck0.getAcceptableTokens();
      DetailAST detailAST0 = new DetailAST();
      innerTypeLastCheck0.leaveToken(detailAST0);
      innerTypeLastCheck0.getFileContents();
      innerTypeLastCheck0.setFileContents((FileContents) null);
      DetailAST detailAST1 = new DetailAST();
      detailAST0.setFirstChild(detailAST1);
      detailAST0.findFirstToken((-778));
      detailAST0.findAllPartial(detailAST1);
      innerTypeLastCheck0.setId((String) null);
      detailAST0.setLineNo(8233);
      innerTypeLastCheck0.getAcceptableTokens();
      innerTypeLastCheck0.getRequiredTokens();
      innerTypeLastCheck0.getDefaultTokens();
      innerTypeLastCheck0.visitToken(detailAST0);
      innerTypeLastCheck0.leaveToken(detailAST0);
      innerTypeLastCheck0.visitToken(detailAST0);
      innerTypeLastCheck0.getAcceptableTokens();
      innerTypeLastCheck0.leaveToken(detailAST1);
      assertFalse(innerTypeLastCheck0.isCommentNodesRequired());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      InnerTypeLastCheck innerTypeLastCheck0 = new InnerTypeLastCheck();
      innerTypeLastCheck0.getMessages();
      innerTypeLastCheck0.getDefaultTokens();
      innerTypeLastCheck0.getAcceptableTokens();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.findFirstToken(7);
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream((File) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      InnerTypeLastCheck innerTypeLastCheck0 = new InnerTypeLastCheck();
      int[] intArray0 = innerTypeLastCheck0.getDefaultTokens();
      assertArrayEquals(new int[] {14, 15}, intArray0);
      
      innerTypeLastCheck0.getRequiredTokens();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(0);
      innerTypeLastCheck0.getRequiredTokens();
      int[] intArray1 = innerTypeLastCheck0.getDefaultTokens();
      assertArrayEquals(new int[] {14, 15}, intArray1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      InnerTypeLastCheck innerTypeLastCheck0 = new InnerTypeLastCheck();
      String[] stringArray0 = new String[2];
      DetailAST detailAST0 = new DetailAST();
      Object object0 = new Object();
      stringArray0[1] = "";
      innerTypeLastCheck0.setTokens(stringArray0);
      innerTypeLastCheck0.getDefaultTokens();
      innerTypeLastCheck0.visitToken(detailAST0);
      innerTypeLastCheck0.leaveToken(detailAST0);
      innerTypeLastCheck0.leaveToken(detailAST0);
      innerTypeLastCheck0.getDefaultTokens();
      innerTypeLastCheck0.getAcceptableTokens();
      detailAST0.getNextSibling();
      innerTypeLastCheck0.visitToken((DetailAST) null);
      innerTypeLastCheck0.getAcceptableTokens();
      int[] intArray0 = innerTypeLastCheck0.getDefaultTokens();
      assertArrayEquals(new int[] {14, 15}, intArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      InnerTypeLastCheck innerTypeLastCheck0 = new InnerTypeLastCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getPreviousSibling();
      innerTypeLastCheck0.visitToken((DetailAST) null);
      // Undeclared exception!
      try { 
        innerTypeLastCheck0.visitToken((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      InnerTypeLastCheck innerTypeLastCheck0 = new InnerTypeLastCheck();
      innerTypeLastCheck0.visitToken((DetailAST) null);
      assertFalse(innerTypeLastCheck0.isCommentNodesRequired());
      
      innerTypeLastCheck0.getDefaultTokens();
      innerTypeLastCheck0.getRequiredTokens();
      innerTypeLastCheck0.getAcceptableTokens();
      // Undeclared exception!
      try { 
        innerTypeLastCheck0.visitToken((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      InnerTypeLastCheck innerTypeLastCheck0 = new InnerTypeLastCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getChildCount();
      detailAST0.getFirstChild();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "arrangement.members.before.inner";
      stringArray0[1] = "arrangement.members.before.inner";
      stringArray0[2] = "arrangement.members.before.inner";
      stringArray0[3] = "arrangement.members.before.inner";
      stringArray0[4] = "arrangement.members.before.inner";
      stringArray0[5] = "arrangement.members.before.inner";
      stringArray0[6] = "arrangement.members.before.inner";
      stringArray0[7] = "arrangement.members.before.inner";
      BaseAST.setVerboseStringConversion(true, stringArray0);
      // Undeclared exception!
      try { 
        innerTypeLastCheck0.leaveToken((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      InnerTypeLastCheck innerTypeLastCheck0 = new InnerTypeLastCheck();
      // Undeclared exception!
      try { 
        innerTypeLastCheck0.leaveToken((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.design.InnerTypeLastCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      InnerTypeLastCheck innerTypeLastCheck0 = new InnerTypeLastCheck();
      int[] intArray0 = innerTypeLastCheck0.getRequiredTokens();
      assertArrayEquals(new int[] {14, 15}, intArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      InnerTypeLastCheck innerTypeLastCheck0 = new InnerTypeLastCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getLastChild();
      DetailAST detailAST1 = new DetailAST();
      detailAST0.setFirstChild(detailAST1);
      innerTypeLastCheck0.visitToken(detailAST0);
      detailAST0.addNextSibling(detailAST1);
      innerTypeLastCheck0.leaveToken(detailAST1);
      innerTypeLastCheck0.visitToken(detailAST0);
      assertNull(innerTypeLastCheck0.getId());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      InnerTypeLastCheck innerTypeLastCheck0 = new InnerTypeLastCheck();
      DetailAST detailAST0 = new DetailAST();
      innerTypeLastCheck0.leaveToken(detailAST0);
      DetailAST detailAST1 = new DetailAST();
      innerTypeLastCheck0.setId("arrangement.members.before.inner");
      innerTypeLastCheck0.getAcceptableTokens();
      innerTypeLastCheck0.visitToken(detailAST0);
      detailAST0.addNextSibling(detailAST1);
      innerTypeLastCheck0.visitToken(detailAST0);
      int[] intArray0 = innerTypeLastCheck0.getDefaultTokens();
      assertArrayEquals(new int[] {14, 15}, intArray0);
  }
}
