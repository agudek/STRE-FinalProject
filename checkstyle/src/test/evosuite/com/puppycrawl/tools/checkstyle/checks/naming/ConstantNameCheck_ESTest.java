/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:27:13 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.checks.naming;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConstantNameCheck_ESTest extends ConstantNameCheck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ConstantNameCheck constantNameCheck0 = new ConstantNameCheck();
      DetailAST detailAST0 = new DetailAST();
      // Undeclared exception!
      try { 
        constantNameCheck0.mustCheckName(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ConstantNameCheck constantNameCheck0 = new ConstantNameCheck();
      int[] intArray0 = constantNameCheck0.getRequiredTokens();
      assertArrayEquals(new int[] {10}, intArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ConstantNameCheck constantNameCheck0 = new ConstantNameCheck();
      int[] intArray0 = constantNameCheck0.getAcceptableTokens();
      assertArrayEquals(new int[] {10}, intArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ConstantNameCheck constantNameCheck0 = new ConstantNameCheck();
      int[] intArray0 = constantNameCheck0.getDefaultTokens();
      assertArrayEquals(new int[] {10}, intArray0);
  }
}
