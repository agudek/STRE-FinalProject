/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:31:24 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.gui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.gui.MainFrameModel;
import java.io.File;
import java.nio.file.InvalidPathException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MainFrameModel_ESTest extends MainFrameModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        MainFrameModel.shouldAcceptFile((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.gui.MainFrameModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MainFrameModel mainFrameModel0 = new MainFrameModel();
      File file0 = MockFile.createTempFile("o,*m", "o,*m");
      // Undeclared exception!
      try { 
        mainFrameModel0.openFile(file0);
        fail("Expecting exception: InvalidPathException");
      
      } catch(InvalidPathException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MainFrameModel mainFrameModel0 = new MainFrameModel();
      mainFrameModel0.setParseMode((MainFrameModel.ParseMode) null);
      MockFile mockFile0 = new MockFile("PLAIN_JAVA", "PLAIN_JAVA");
      // Undeclared exception!
      try { 
        mainFrameModel0.openFile(mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.gui.MainFrameModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MainFrameModel mainFrameModel0 = new MainFrameModel();
      MainFrameModel.ParseMode mainFrameModel_ParseMode0 = MainFrameModel.ParseMode.JAVA_WITH_COMMENTS;
      mainFrameModel0.setParseMode(mainFrameModel_ParseMode0);
      MockFile mockFile0 = new MockFile(".java");
      try { 
        mainFrameModel0.openFile(mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // FileNotFoundException occurred while opening file .java.
         //
         verifyException("com.puppycrawl.tools.checkstyle.gui.MainFrameModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      File file0 = MockFile.createTempFile("EEV", "rfBh!O,29]$I}A.java", (File) null);
      MainFrameModel mainFrameModel0 = new MainFrameModel();
      MainFrameModel.ParseMode mainFrameModel_ParseMode0 = MainFrameModel.ParseMode.JAVA_WITH_JAVADOC_AND_COMMENTS;
      mainFrameModel0.setParseMode(mainFrameModel_ParseMode0);
      try { 
        mainFrameModel0.openFile(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // NoSuchFileException occurred while opening file C:\\Users\\GUDEK-~1\\AppData\\Local\\Temp\\EEV0rfBh!O,29]$I}A.java.
         //
         verifyException("com.puppycrawl.tools.checkstyle.gui.MainFrameModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MainFrameModel mainFrameModel0 = new MainFrameModel();
      mainFrameModel0.openFile((File) null);
      assertEquals("Checkstyle GUI", mainFrameModel0.getTitle());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MainFrameModel mainFrameModel0 = new MainFrameModel();
      mainFrameModel0.getLastDirectory();
      assertEquals("Checkstyle GUI", mainFrameModel0.getTitle());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("PLAIN_JAVA", "PLAIN_JAVA");
      boolean boolean0 = MainFrameModel.shouldAcceptFile(mockFile0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      File file0 = MockFile.createTempFile("EEV", "rfBh!O,29]$I}A.java", (File) null);
      boolean boolean0 = MainFrameModel.shouldAcceptFile(file0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile((File) null, "");
      boolean boolean0 = MainFrameModel.shouldAcceptFile(mockFile0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MainFrameModel.ParseMode mainFrameModel_ParseMode0 = MainFrameModel.ParseMode.JAVA_WITH_JAVADOC_AND_COMMENTS;
      String string0 = mainFrameModel_ParseMode0.toString();
      assertEquals("Java with comments and Javadocs", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MainFrameModel mainFrameModel0 = new MainFrameModel();
      mainFrameModel0.getParseTreeTableModel();
      assertEquals("Checkstyle GUI", mainFrameModel0.getTitle());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MainFrameModel mainFrameModel0 = new MainFrameModel();
      mainFrameModel0.getLinesToPosition();
      assertEquals("Checkstyle GUI", mainFrameModel0.getTitle());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MainFrameModel mainFrameModel0 = new MainFrameModel();
      mainFrameModel0.getCurrentFile();
      assertEquals("Checkstyle GUI", mainFrameModel0.getTitle());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MainFrameModel mainFrameModel0 = new MainFrameModel();
      mainFrameModel0.isReloadActionEnabled();
      assertEquals("Checkstyle GUI", mainFrameModel0.getTitle());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MainFrameModel mainFrameModel0 = new MainFrameModel();
      String string0 = mainFrameModel0.getTitle();
      assertEquals("Checkstyle GUI", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MainFrameModel mainFrameModel0 = new MainFrameModel();
      mainFrameModel0.getText();
      assertEquals("Checkstyle GUI", mainFrameModel0.getTitle());
  }
}
