/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:42:06 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.checks.imports;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import com.puppycrawl.tools.checkstyle.api.FileContents;
import com.puppycrawl.tools.checkstyle.api.FileText;
import com.puppycrawl.tools.checkstyle.api.SeverityLevel;
import com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck;
import java.net.URI;
import java.util.Vector;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ImportControlCheck_ESTest extends ImportControlCheck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImportControlCheck importControlCheck0 = new ImportControlCheck();
      MockFile mockFile0 = new MockFile("com.google.common.collect.IndexedImmutableSet", "import.control.disallowed");
      Vector<String> vector0 = new Vector<String>();
      FileText fileText0 = new FileText(mockFile0, vector0);
      FileContents fileContents0 = new FileContents(fileText0);
      importControlCheck0.setFileContents(fileContents0);
      importControlCheck0.beginTree((DetailAST) null);
      assertFalse(importControlCheck0.isCommentNodesRequired());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImportControlCheck importControlCheck0 = new ImportControlCheck();
      URI uRI0 = MockURI.aFileURI;
      // Undeclared exception!
      try { 
        importControlCheck0.setFile(uRI0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImportControlCheck importControlCheck0 = new ImportControlCheck();
      int[] intArray0 = importControlCheck0.getRequiredTokens();
      assertArrayEquals(new int[] {16, 30, 152}, intArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImportControlCheck importControlCheck0 = new ImportControlCheck();
      URI uRI0 = MockURI.URI("import.control.missing.file", "import.control.missing.file", "import.control.unknown.pkg");
      // Undeclared exception!
      try { 
        importControlCheck0.setFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unable to load import.control.missing.file:import.control.missing.file#import.control.unknown.pkg
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImportControlCheck importControlCheck0 = new ImportControlCheck();
      importControlCheck0.setFile((URI) null);
      assertNull(importControlCheck0.getId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImportControlCheck importControlCheck0 = new ImportControlCheck();
      DetailAST detailAST0 = new DetailAST();
      importControlCheck0.visitToken(detailAST0);
      assertEquals(SeverityLevel.ERROR, importControlCheck0.getSeverityLevel());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImportControlCheck importControlCheck0 = new ImportControlCheck();
      // Undeclared exception!
      try { 
        importControlCheck0.beginTree((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.imports.ImportControlCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImportControlCheck importControlCheck0 = new ImportControlCheck();
      // Undeclared exception!
      try { 
        importControlCheck0.getExternalResourceLocations();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImportControlCheck importControlCheck0 = new ImportControlCheck();
      Pattern pattern0 = Pattern.compile("import.control.unknown.pkg");
      importControlCheck0.setPath(pattern0);
      assertEquals(SeverityLevel.ERROR, importControlCheck0.getSeverityLevel());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImportControlCheck importControlCheck0 = new ImportControlCheck();
      int[] intArray0 = importControlCheck0.getAcceptableTokens();
      assertArrayEquals(new int[] {16, 30, 152}, intArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImportControlCheck importControlCheck0 = new ImportControlCheck();
      int[] intArray0 = importControlCheck0.getDefaultTokens();
      assertArrayEquals(new int[] {16, 30, 152}, intArray0);
  }
}
