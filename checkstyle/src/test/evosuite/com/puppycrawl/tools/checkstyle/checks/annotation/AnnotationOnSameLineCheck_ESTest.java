/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:38:22 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.checks.annotation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import com.puppycrawl.tools.checkstyle.api.SeverityLevel;
import com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationOnSameLineCheck;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AnnotationOnSameLineCheck_ESTest extends AnnotationOnSameLineCheck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AnnotationOnSameLineCheck annotationOnSameLineCheck0 = new AnnotationOnSameLineCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setType(5143);
      annotationOnSameLineCheck0.visitToken(detailAST0);
      assertEquals(SeverityLevel.ERROR, annotationOnSameLineCheck0.getSeverityLevel());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AnnotationOnSameLineCheck annotationOnSameLineCheck0 = new AnnotationOnSameLineCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.initialize(23, "annotation.same.line");
      // Undeclared exception!
      try { 
        annotationOnSameLineCheck0.visitToken(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationOnSameLineCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AnnotationOnSameLineCheck annotationOnSameLineCheck0 = new AnnotationOnSameLineCheck();
      DetailAST detailAST0 = new DetailAST();
      annotationOnSameLineCheck0.visitToken(detailAST0);
      assertEquals(SeverityLevel.ERROR, annotationOnSameLineCheck0.getSeverityLevel());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AnnotationOnSameLineCheck annotationOnSameLineCheck0 = new AnnotationOnSameLineCheck();
      int[] intArray0 = annotationOnSameLineCheck0.getRequiredTokens();
      assertArrayEquals(new int[] {}, intArray0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AnnotationOnSameLineCheck annotationOnSameLineCheck0 = new AnnotationOnSameLineCheck();
      int[] intArray0 = annotationOnSameLineCheck0.getDefaultTokens();
      assertArrayEquals(new int[] {14, 15, 154, 9, 8, 10}, intArray0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AnnotationOnSameLineCheck annotationOnSameLineCheck0 = new AnnotationOnSameLineCheck();
      int[] intArray0 = annotationOnSameLineCheck0.getAcceptableTokens();
      assertEquals(15, intArray0.length);
  }
}
