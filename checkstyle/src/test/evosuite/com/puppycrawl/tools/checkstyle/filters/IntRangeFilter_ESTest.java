/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:51:09 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.filters;

import org.junit.Test;
import static org.junit.Assert.*;
import com.puppycrawl.tools.checkstyle.filters.IntRangeFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IntRangeFilter_ESTest extends IntRangeFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IntRangeFilter intRangeFilter0 = new IntRangeFilter((-278), 1195);
      boolean boolean0 = intRangeFilter0.accept(590);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IntRangeFilter intRangeFilter0 = new IntRangeFilter((-278), (-278));
      IntRangeFilter intRangeFilter1 = new IntRangeFilter((-278), (-278));
      boolean boolean0 = intRangeFilter0.equals(intRangeFilter1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IntRangeFilter intRangeFilter0 = new IntRangeFilter(0, 0);
      IntRangeFilter intRangeFilter1 = new IntRangeFilter(1681, 2729);
      boolean boolean0 = intRangeFilter0.equals(intRangeFilter1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IntRangeFilter intRangeFilter0 = new IntRangeFilter((-278), (-278));
      IntRangeFilter intRangeFilter1 = new IntRangeFilter((-278), 1195);
      boolean boolean0 = intRangeFilter0.equals(intRangeFilter1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IntRangeFilter intRangeFilter0 = new IntRangeFilter(0, 1043);
      boolean boolean0 = intRangeFilter0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IntRangeFilter intRangeFilter0 = new IntRangeFilter(0, 0);
      boolean boolean0 = intRangeFilter0.equals(intRangeFilter0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IntRangeFilter intRangeFilter0 = new IntRangeFilter(0, 0);
      boolean boolean0 = intRangeFilter0.equals("PV,");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IntRangeFilter intRangeFilter0 = new IntRangeFilter(0, 0);
      boolean boolean0 = intRangeFilter0.accept(1107);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IntRangeFilter intRangeFilter0 = new IntRangeFilter(0, 0);
      boolean boolean0 = intRangeFilter0.accept(0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IntRangeFilter intRangeFilter0 = new IntRangeFilter(0, 0);
      boolean boolean0 = intRangeFilter0.accept((-987));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IntRangeFilter intRangeFilter0 = new IntRangeFilter((-278), (-278));
      intRangeFilter0.hashCode();
  }
}
