/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Apr 18 11:33:33 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.grammars;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class GeneratedJavaRecognizer_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "Cp1252"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\GUDEK-~1\\AppData\\Local\\Temp\\"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "C:\\Users\\Gudek-Home\\Documents\\TU\\STRE\\STRE-FinalProject\\checkstyle"); 
    java.lang.System.setProperty("user.home", "C:\\Users\\Gudek-Home"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "Gudek-Home"); 
    java.lang.System.setProperty("user.timezone", "Europe/Berlin"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(GeneratedJavaRecognizer_ESTest_scaffolding.class.getClassLoader() ,
      "antlr.collections.AST",
      "antlr.TokenStreamRewriteEngine$ReplaceOp",
      "antlr.TokenStreamRewriteEngine$1",
      "antlr.DefaultFileLineFormatter",
      "antlr.collections.impl.LList",
      "antlr.TokenStreamRetryException",
      "org.hsqldb.jdbc.JDBCDriver",
      "antlr.TokenStreamException",
      "antlr.TokenStreamRewriteEngine$RewriteOperation",
      "antlr.collections.impl.Vector",
      "org.hsqldb.jdbc.JDBCDriver$1",
      "antlr.ParseTree",
      "antlr.debug.ParserMatchAdapter",
      "antlr.ANTLRStringBuffer",
      "antlr.Utils",
      "antlr.ParseTreeRule",
      "antlr.ANTLRHashString",
      "antlr.ParseTreeToken",
      "antlr.TokenQueue",
      "antlr.CommonASTWithHiddenTokens",
      "antlr.debug.SemanticPredicateListener",
      "com.puppycrawl.tools.checkstyle.api.DetailAST",
      "antlr.collections.impl.LLCell",
      "antlr.TokenStream",
      "antlr.collections.impl.BitSet",
      "antlr.Token",
      "antlr.ASdebug.TokenOffsetInfo",
      "antlr.FileLineFormatter",
      "antlr.ASTFactory",
      "antlr.TokenStreamRecognitionException",
      "antlr.collections.List",
      "antlr.debug.TraceEvent",
      "com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaTokenTypes",
      "antlr.MismatchedCharException",
      "antlr.TokenStreamIOException",
      "antlr.debug.SyntacticPredicateAdapter",
      "antlr.ASdebug.ASDebugStream",
      "antlr.MismatchedTokenException",
      "antlr.CharStreamException",
      "antlr.TokenStreamBasicFilter",
      "antlr.TokenStreamRewriteEngine$InsertBeforeOp",
      "antlr.TokenBuffer",
      "antlr.TokenStreamSelector",
      "antlr.ASTPair",
      "antlr.BaseAST",
      "antlr.debug.Event",
      "antlr.debug.TraceAdapter",
      "antlr.ByteBuffer",
      "antlr.ANTLRTokenTypes",
      "antlr.collections.impl.ASTArray",
      "antlr.debug.ParserTokenEvent",
      "antlr.collections.Stack",
      "antlr.debug.Tracer",
      "antlr.collections.impl.ASTEnumerator",
      "antlr.debug.ParserListener",
      "antlr.debug.ParserTokenListener",
      "antlr.debug.ParserTokenAdapter",
      "antlr.CharBuffer",
      "antlr.debug.MessageAdapter",
      "antlr.RecognitionException",
      "antlr.LexerSharedInputState",
      "antlr.TokenStreamRewriteEngine$DeleteOp",
      "antlr.NoViableAltForCharException",
      "antlr.ANTLRTokdefParserTokenTypes",
      "antlr.CharQueue",
      "antlr.debug.ParserReporter",
      "antlr.CharStreamIOException",
      "antlr.debug.ParserMatchListener",
      "antlr.CommonToken",
      "antlr.ASTNULLType",
      "antlr.InputBuffer",
      "antlr.CharScanner",
      "com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer",
      "antlr.ANTLRException",
      "antlr.SemanticException",
      "antlr.debug.ListenerBase",
      "antlr.Parser",
      "antlr.TokenStreamRewriteEngine",
      "antlr.LLkParser",
      "antlr.ASdebug.IASDebugStream",
      "antlr.TokenWithIndex",
      "antlr.CommonAST",
      "antlr.collections.impl.VectorEnumerator",
      "antlr.debug.MessageListener",
      "antlr.debug.MessageEvent",
      "antlr.debug.SyntacticPredicateListener",
      "antlr.debug.TraceListener",
      "antlr.CommonHiddenStreamToken",
      "antlr.debug.ParserMatchEvent",
      "antlr.ANTLRTokdefLexer",
      "antlr.debug.SemanticPredicateEvent",
      "antlr.ANTLRLexer",
      "antlr.debug.SyntacticPredicateEvent",
      "antlr.NoViableAltException",
      "antlr.ParserSharedInputState",
      "antlr.debug.ParserAdapter",
      "antlr.debug.SemanticPredicateAdapter",
      "antlr.debug.GuessingEvent",
      "antlr.collections.ASTEnumeration",
      "antlr.CharFormatter",
      "antlr.TokenStreamHiddenTokenFilter"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("java.util.Enumeration", false, GeneratedJavaRecognizer_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(GeneratedJavaRecognizer_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "antlr.Parser",
      "antlr.LLkParser",
      "antlr.collections.impl.BitSet",
      "com.puppycrawl.tools.checkstyle.grammars.GeneratedJavaRecognizer",
      "antlr.ParserSharedInputState",
      "antlr.ASTFactory",
      "antlr.ASTPair",
      "antlr.CharScanner",
      "antlr.ANTLRLexer",
      "antlr.InputBuffer",
      "antlr.CharBuffer",
      "antlr.CharQueue",
      "antlr.LexerSharedInputState",
      "antlr.ANTLRStringBuffer",
      "antlr.ANTLRHashString",
      "antlr.Utils",
      "antlr.TokenBuffer",
      "antlr.TokenQueue",
      "antlr.ANTLRException",
      "antlr.CharStreamException",
      "antlr.CharStreamIOException",
      "antlr.TokenStreamException",
      "antlr.TokenStreamIOException",
      "antlr.TokenStreamSelector",
      "antlr.collections.impl.LList",
      "antlr.TokenStreamBasicFilter",
      "antlr.debug.ParserAdapter",
      "antlr.ASTNULLType",
      "antlr.debug.ParserMatchAdapter",
      "antlr.TokenStreamHiddenTokenFilter",
      "antlr.ByteBuffer",
      "antlr.ANTLRTokdefLexer",
      "antlr.Token",
      "antlr.CommonToken",
      "antlr.BaseAST",
      "antlr.CommonAST",
      "antlr.RecognitionException",
      "antlr.MismatchedTokenException",
      "antlr.ASdebug.ASDebugStream",
      "antlr.CommonASTWithHiddenTokens",
      "com.puppycrawl.tools.checkstyle.api.DetailAST",
      "antlr.NoViableAltException",
      "antlr.TokenStreamRewriteEngine",
      "antlr.debug.ParserTokenAdapter",
      "antlr.TokenStreamRewriteEngine$RewriteOperation",
      "antlr.TokenStreamRewriteEngine$ReplaceOp",
      "antlr.TokenStreamRewriteEngine$1",
      "antlr.NoViableAltForCharException",
      "antlr.TokenStreamRecognitionException",
      "antlr.collections.impl.LLCell",
      "antlr.debug.SemanticPredicateAdapter",
      "antlr.CommonHiddenStreamToken",
      "antlr.TokenStreamRetryException",
      "antlr.DefaultFileLineFormatter",
      "antlr.FileLineFormatter",
      "antlr.ParseTree",
      "antlr.ParseTreeRule",
      "antlr.debug.TraceAdapter",
      "antlr.debug.Tracer",
      "antlr.debug.ParserReporter",
      "antlr.collections.impl.ASTArray",
      "org.hsqldb.jdbc.JDBCDriver",
      "antlr.ParseTreeToken",
      "antlr.debug.SyntacticPredicateAdapter",
      "antlr.TokenStreamRewriteEngine$InsertBeforeOp",
      "antlr.debug.Event",
      "antlr.debug.GuessingEvent",
      "antlr.debug.TraceEvent",
      "antlr.debug.MessageEvent",
      "antlr.MismatchedCharException",
      "antlr.collections.impl.Vector",
      "antlr.collections.impl.ASTEnumerator",
      "antlr.collections.impl.VectorEnumerator",
      "antlr.debug.ParserTokenEvent",
      "antlr.debug.MessageAdapter",
      "antlr.debug.SemanticPredicateEvent",
      "antlr.debug.SyntacticPredicateEvent"
    );
  }
}
