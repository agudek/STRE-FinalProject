/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:18:58 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.checks.javadoc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.api.DetailNode;
import com.puppycrawl.tools.checkstyle.api.SeverityLevel;
import com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocNodeImpl;
import com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTagContinuationIndentationCheck;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavadocTagContinuationIndentationCheck_ESTest extends JavadocTagContinuationIndentationCheck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JavadocTagContinuationIndentationCheck javadocTagContinuationIndentationCheck0 = new JavadocTagContinuationIndentationCheck();
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      JavadocNodeImpl javadocNodeImpl1 = new JavadocNodeImpl();
      javadocNodeImpl1.setType(10074);
      javadocTagContinuationIndentationCheck0.getRequiredJavadocTokens();
      javadocNodeImpl0.setParent(javadocNodeImpl1);
      // Undeclared exception!
      try { 
        javadocTagContinuationIndentationCheck0.visitJavadocToken(javadocNodeImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JavadocTagContinuationIndentationCheck javadocTagContinuationIndentationCheck0 = new JavadocTagContinuationIndentationCheck();
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      JavadocNodeImpl javadocNodeImpl1 = new JavadocNodeImpl();
      javadocNodeImpl1.setType(10072);
      javadocTagContinuationIndentationCheck0.getRequiredJavadocTokens();
      javadocNodeImpl0.setParent(javadocNodeImpl1);
      javadocTagContinuationIndentationCheck0.visitJavadocToken(javadocNodeImpl0);
      javadocTagContinuationIndentationCheck0.getRequiredJavadocTokens();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JavadocTagContinuationIndentationCheck javadocTagContinuationIndentationCheck0 = new JavadocTagContinuationIndentationCheck();
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[8];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.getParent();
      detailNodeArray0[1] = null;
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[3] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[4] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[5] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[6] = (DetailNode) javadocNodeImpl0;
      JavadocNodeImpl javadocNodeImpl1 = new JavadocNodeImpl();
      detailNodeArray0[7] = (DetailNode) javadocNodeImpl1;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      javadocNodeImpl0.setIndex((-1674));
      JavadocNodeImpl javadocNodeImpl2 = new JavadocNodeImpl();
      javadocNodeImpl0.setParent(javadocNodeImpl2);
      // Undeclared exception!
      try { 
        javadocTagContinuationIndentationCheck0.visitJavadocToken(javadocNodeImpl0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1673
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JavadocTagContinuationIndentationCheck javadocTagContinuationIndentationCheck0 = new JavadocTagContinuationIndentationCheck();
      javadocTagContinuationIndentationCheck0.getDefaultJavadocTokens();
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[4];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[1] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[3] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      javadocTagContinuationIndentationCheck0.visitJavadocToken(javadocNodeImpl0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JavadocTagContinuationIndentationCheck javadocTagContinuationIndentationCheck0 = new JavadocTagContinuationIndentationCheck();
      javadocTagContinuationIndentationCheck0.getRequiredJavadocTokens();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JavadocTagContinuationIndentationCheck javadocTagContinuationIndentationCheck0 = new JavadocTagContinuationIndentationCheck();
      javadocTagContinuationIndentationCheck0.setViolateExecutionOnNonTightHtml(true);
      javadocTagContinuationIndentationCheck0.getRequiredJavadocTokens();
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      javadocNodeImpl0.setColumnNumber((-453));
      DetailNode[] detailNodeArray0 = new DetailNode[1];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      javadocNodeImpl0.setLineNumber(127);
      javadocNodeImpl0.setChildren(detailNodeArray0);
      javadocTagContinuationIndentationCheck0.setOffset(10065);
      javadocNodeImpl0.setParent(detailNodeArray0[0]);
      javadocNodeImpl0.setLineNumber((-107));
      javadocNodeImpl0.setLineNumber((-453));
      DetailNode detailNode0 = javadocNodeImpl0.getParent();
      // Undeclared exception!
      javadocTagContinuationIndentationCheck0.visitJavadocToken(detailNode0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JavadocTagContinuationIndentationCheck javadocTagContinuationIndentationCheck0 = new JavadocTagContinuationIndentationCheck();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "javadoc.parse.rule.error";
      stringArray0[1] = "javadoc.parse.rule.error";
      stringArray0[2] = "javadoc.wrong.singleton.html.tag";
      stringArray0[3] = "javadoc.missed.html.close";
      stringArray0[4] = "javadoc.missed.html.close";
      stringArray0[5] = "javadoc.wrong.singleton.html.tag";
      javadocTagContinuationIndentationCheck0.setViolateExecutionOnNonTightHtml(true);
      javadocTagContinuationIndentationCheck0.setTokens(stringArray0);
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      javadocNodeImpl0.setText("javadoc.missed.html.close");
      JavadocNodeImpl javadocNodeImpl1 = new JavadocNodeImpl();
      javadocTagContinuationIndentationCheck0.getRequiredJavadocTokens();
      int int0 = 10072;
      javadocNodeImpl1.setIndex(10072);
      javadocNodeImpl0.setChildren(javadocNodeImpl1.EMPTY_DETAIL_NODE_ARRAY);
      javadocNodeImpl0.setParent(javadocNodeImpl1);
      // Undeclared exception!
      try { 
        javadocTagContinuationIndentationCheck0.visitJavadocToken(javadocNodeImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JavadocTagContinuationIndentationCheck javadocTagContinuationIndentationCheck0 = new JavadocTagContinuationIndentationCheck();
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      javadocTagContinuationIndentationCheck0.getBlockCommentAst();
      JavadocNodeImpl javadocNodeImpl1 = new JavadocNodeImpl();
      javadocNodeImpl0.setParent(javadocNodeImpl1);
      JavadocNodeImpl javadocNodeImpl2 = new JavadocNodeImpl();
      javadocNodeImpl0.setParent(javadocNodeImpl2);
      javadocNodeImpl0.getChildren();
      javadocNodeImpl0.setText("javadoc.wrong.singleton.html.tag");
      // Undeclared exception!
      try { 
        javadocTagContinuationIndentationCheck0.visitJavadocToken(javadocNodeImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JavadocTagContinuationIndentationCheck javadocTagContinuationIndentationCheck0 = new JavadocTagContinuationIndentationCheck();
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      // Undeclared exception!
      try { 
        javadocTagContinuationIndentationCheck0.visitJavadocToken(javadocNodeImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JavadocTagContinuationIndentationCheck javadocTagContinuationIndentationCheck0 = new JavadocTagContinuationIndentationCheck();
      // Undeclared exception!
      try { 
        javadocTagContinuationIndentationCheck0.visitJavadocToken((DetailNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTagContinuationIndentationCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JavadocTagContinuationIndentationCheck javadocTagContinuationIndentationCheck0 = new JavadocTagContinuationIndentationCheck();
      javadocTagContinuationIndentationCheck0.setOffset(1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JavadocTagContinuationIndentationCheck javadocTagContinuationIndentationCheck0 = new JavadocTagContinuationIndentationCheck();
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      javadocNodeImpl0.setType(10072);
      javadocNodeImpl0.setParent(javadocNodeImpl0);
      javadocTagContinuationIndentationCheck0.visitJavadocToken(javadocNodeImpl0);
      javadocTagContinuationIndentationCheck0.getRequiredJavadocTokens();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JavadocTagContinuationIndentationCheck javadocTagContinuationIndentationCheck0 = new JavadocTagContinuationIndentationCheck();
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      javadocNodeImpl0.setParent(javadocNodeImpl0);
      // Undeclared exception!
      javadocTagContinuationIndentationCheck0.visitJavadocToken(javadocNodeImpl0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JavadocTagContinuationIndentationCheck javadocTagContinuationIndentationCheck0 = new JavadocTagContinuationIndentationCheck();
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[2];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[1] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      javadocTagContinuationIndentationCheck0.visitJavadocToken(javadocNodeImpl0);
      javadocTagContinuationIndentationCheck0.visitJavadocToken(javadocNodeImpl0);
      javadocTagContinuationIndentationCheck0.setOffset(0);
      assertEquals(SeverityLevel.ERROR, javadocTagContinuationIndentationCheck0.getSeverityLevel());
  }
}
