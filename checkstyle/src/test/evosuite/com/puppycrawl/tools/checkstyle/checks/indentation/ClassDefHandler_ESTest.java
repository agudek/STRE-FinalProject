/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:44:18 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.checks.indentation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler;
import com.puppycrawl.tools.checkstyle.checks.indentation.BlockParentHandler;
import com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler;
import com.puppycrawl.tools.checkstyle.checks.indentation.ImportHandler;
import com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck;
import com.puppycrawl.tools.checkstyle.checks.indentation.MemberDefHandler;
import com.puppycrawl.tools.checkstyle.checks.indentation.PrimordialHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassDefHandler_ESTest extends ClassDefHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST1.initialize(5, (String) null);
      detailAST0.setFirstChild(detailAST1);
      detailAST0.setType(206);
      IndentationCheck indentationCheck0 = new IndentationCheck();
      ClassDefHandler classDefHandler0 = new ClassDefHandler(indentationCheck0, detailAST0, (AbstractExpressionHandler) null);
      // Undeclared exception!
      try { 
        classDefHandler0.checkIndentation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IndentationCheck indentationCheck0 = new IndentationCheck();
      DetailAST detailAST0 = new DetailAST();
      PrimordialHandler primordialHandler0 = new PrimordialHandler(indentationCheck0);
      BlockParentHandler blockParentHandler0 = new BlockParentHandler(indentationCheck0, "9U)n9W=*G0DT>", (DetailAST) null, primordialHandler0);
      ImportHandler importHandler0 = new ImportHandler(indentationCheck0, detailAST0, blockParentHandler0);
      MemberDefHandler memberDefHandler0 = new MemberDefHandler(indentationCheck0, (DetailAST) null, importHandler0);
      ClassDefHandler classDefHandler0 = null;
      try {
        classDefHandler0 = new ClassDefHandler(indentationCheck0, (DetailAST) null, memberDefHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IndentationCheck indentationCheck0 = new IndentationCheck();
      DetailAST detailAST0 = new DetailAST();
      BlockParentHandler blockParentHandler0 = new BlockParentHandler(indentationCheck0, "indentation.child.error.multi", detailAST0, (AbstractExpressionHandler) null);
      detailAST0.initialize(154, "indentation.child.error.multi");
      ClassDefHandler classDefHandler0 = new ClassDefHandler(indentationCheck0, detailAST0, blockParentHandler0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IndentationCheck indentationCheck0 = new IndentationCheck();
      DetailAST detailAST0 = new DetailAST();
      BlockParentHandler blockParentHandler0 = new BlockParentHandler(indentationCheck0, "indentation.child.error.multi", detailAST0, (AbstractExpressionHandler) null);
      detailAST0.initialize(14, "indentation.child.error.multi");
      ClassDefHandler classDefHandler0 = new ClassDefHandler(indentationCheck0, detailAST0, blockParentHandler0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST1.initialize(5, (String) null);
      detailAST0.setFirstChild(detailAST1);
      IndentationCheck indentationCheck0 = new IndentationCheck();
      ClassDefHandler classDefHandler0 = new ClassDefHandler(indentationCheck0, detailAST0, (AbstractExpressionHandler) null);
      // Undeclared exception!
      try { 
        classDefHandler0.checkIndentation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.indentation.AbstractExpressionHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.initialize(5, (String) null);
      detailAST0.setFirstChild(detailAST0);
      IndentationCheck indentationCheck0 = new IndentationCheck();
      ClassDefHandler classDefHandler0 = new ClassDefHandler(indentationCheck0, detailAST0, (AbstractExpressionHandler) null);
      // Undeclared exception!
      classDefHandler0.checkIndentation();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IndentationCheck indentationCheck0 = new IndentationCheck();
      DetailAST detailAST0 = new DetailAST();
      BlockParentHandler blockParentHandler0 = new BlockParentHandler(indentationCheck0, "indentation.child.error.multi", detailAST0, (AbstractExpressionHandler) null);
      ClassDefHandler classDefHandler0 = new ClassDefHandler(indentationCheck0, detailAST0, blockParentHandler0);
      int[] intArray0 = classDefHandler0.getCheckedChildren();
      assertArrayEquals(new int[] {28, 6, 86, 88, 90, 87}, intArray0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IndentationCheck indentationCheck0 = new IndentationCheck();
      DetailAST detailAST0 = new DetailAST();
      PrimordialHandler primordialHandler0 = new PrimordialHandler(indentationCheck0);
      ClassDefHandler classDefHandler0 = new ClassDefHandler(indentationCheck0, detailAST0, primordialHandler0);
      // Undeclared exception!
      try { 
        classDefHandler0.getLeftCurly();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IndentationCheck indentationCheck0 = new IndentationCheck();
      DetailAST detailAST0 = new DetailAST();
      ClassDefHandler classDefHandler0 = new ClassDefHandler(indentationCheck0, detailAST0, (AbstractExpressionHandler) null);
      DetailAST detailAST1 = classDefHandler0.getTopLevelAst();
      assertNull(detailAST1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IndentationCheck indentationCheck0 = new IndentationCheck();
      DetailAST detailAST0 = new DetailAST();
      PrimordialHandler primordialHandler0 = new PrimordialHandler(indentationCheck0);
      ClassDefHandler classDefHandler0 = new ClassDefHandler(indentationCheck0, detailAST0, primordialHandler0);
      DetailAST detailAST1 = classDefHandler0.getListChild();
      assertNull(detailAST1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IndentationCheck indentationCheck0 = new IndentationCheck();
      DetailAST detailAST0 = new DetailAST();
      BlockParentHandler blockParentHandler0 = new BlockParentHandler(indentationCheck0, "indentation.child.error.multi", detailAST0, (AbstractExpressionHandler) null);
      ClassDefHandler classDefHandler0 = new ClassDefHandler(indentationCheck0, detailAST0, blockParentHandler0);
      // Undeclared exception!
      try { 
        classDefHandler0.getRightCurly();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.indentation.ClassDefHandler", e);
      }
  }
}
