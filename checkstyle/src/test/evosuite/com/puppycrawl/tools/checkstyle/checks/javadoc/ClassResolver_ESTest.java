/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 13:41:39 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.checks.javadoc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.checks.javadoc.ClassResolver;
import java.time.ZoneId;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Set;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassResolver_ESTest extends ClassResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      ClassResolver classResolver0 = new ClassResolver(classLoader0, (String) null, treeSet0);
      classResolver0.resolve("com.google.common.base.Functions$IdentityFunction", "~vV:=D-0");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Locale locale0 = Locale.forLanguageTag(".*");
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      ClassResolver classResolver0 = new ClassResolver(classLoader0, "", set0);
      classResolver0.resolve("com.google.common.collect.FilteredEntryMultimap", "");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Locale locale0 = new Locale("", "com.google.common.primitives.Ints$IntConverter");
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      ClassResolver classResolver0 = new ClassResolver(classLoader0, "com.google.common.primitives.Ints$IntConverter", set0);
      classResolver0.isLoadable("com.google.common.primitives.Ints$IntConverter");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      HashSet<String> hashSet0 = new HashSet<String>(46);
      ClassResolver classResolver0 = new ClassResolver(classLoader0, "\u0000\u00AD\u0600\u061C\u06DD\u070F\u08E2\u1680\u180E\u2000\u2028\u205F\u2066\u3000\uD800\uFEFF\uFFF9", hashSet0);
      // Undeclared exception!
      try { 
        classResolver0.resolve("\u0000\u00AD\u0600\u061C\u06DD\u070F\u08E2\u1680\u180E\u2000\u2028\u205F\u2066\u3000\uD800\uFEFF\uFFF9", "\u0000\u00AD\u0600\u061C\u06DD\u070F\u08E2\u1680\u180E\u2000\u2028\u205F\u2066\u3000\uD800\uFEFF\uFFF9");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // MALFORMED
         //
         verifyException("java.util.zip.ZipCoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(729);
      ClassResolver classResolver0 = new ClassResolver(classLoader0, (String) null, linkedHashSet0);
      // Undeclared exception!
      try { 
        classResolver0.isLoadable((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      ClassResolver classResolver0 = new ClassResolver(classLoader0, "?Fmhv#I7xp&", set0);
      // Undeclared exception!
      try { 
        classResolver0.isLoadable("\u0000\u00AD\u0600\u061C\u06DD\u070F\u08E2\u1680\u180E\u2000\u2028\u205F\u2066\u3000\uD800\uFEFF\uFFF9");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // MALFORMED
         //
         verifyException("java.util.zip.ZipCoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassResolver classResolver0 = null;
      try {
        classResolver0 = new ClassResolver(classLoader0, (String) null, (Set<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Locale locale0 = Locale.CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      ClassResolver classResolver0 = new ClassResolver(classLoader0, "INSTANCE", set0);
      try { 
        classResolver0.resolve("INSTANCE", "(Xx}BX@s0rl00");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // INSTANCE
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.javadoc.ClassResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      ClassResolver classResolver0 = new ClassResolver(classLoader0, "]", set0);
      classResolver0.isLoadable("]");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HashSet<String> hashSet0 = new HashSet<String>(46);
      hashSet0.add(".");
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      ClassResolver classResolver0 = new ClassResolver(classLoader0, ". [V", hashSet0);
      try { 
        classResolver0.resolve("", "");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // 
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.javadoc.ClassResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      HashSet<String> hashSet0 = new HashSet<String>();
      ClassResolver classResolver0 = new ClassResolver(classLoader0, "", hashSet0);
      try { 
        classResolver0.resolve("6", "6");
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
         //
         // 6
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.javadoc.ClassResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      ClassResolver classResolver0 = new ClassResolver(classLoader0, (String) null, set0);
      // Undeclared exception!
      try { 
        classResolver0.resolve("Kj&qC", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
