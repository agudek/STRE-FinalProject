/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 12:45:03 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import antlr.ASTNULLType;
import antlr.BaseAST;
import antlr.ParseTreeRule;
import antlr.collections.AST;
import com.puppycrawl.tools.checkstyle.api.Comment;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import com.puppycrawl.tools.checkstyle.api.DetailNode;
import com.puppycrawl.tools.checkstyle.api.TextBlock;
import com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocNodeImpl;
import com.puppycrawl.tools.checkstyle.utils.JavadocUtils;
import java.io.StringWriter;
import java.io.Writer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavadocUtils_ESTest extends JavadocUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JavadocUtils.escapeAllControlChars("F$SemZ9Z:$");
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[3];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[1] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      JavadocUtils.findFirstToken(javadocNodeImpl0, 464);
      JavadocUtils.getPreviousSibling(javadocNodeImpl0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "F$SemZ9Z:$";
      stringArray0[1] = "F$SemZ9Z:$";
      stringArray0[2] = "F$SemZ9Z:$";
      javadocNodeImpl0.setType(464);
      stringArray0[3] = "F$SemZ9Z:$";
      stringArray0[4] = "F$SemZ9Z:$";
      stringArray0[5] = "F$SemZ9Z:$";
      stringArray0[6] = "F$SemZ9Z:$";
      Comment comment0 = new Comment(stringArray0, 464, 0, 0);
      comment0.toString();
      JavadocUtils.JavadocTagType javadocUtils_JavadocTagType0 = JavadocUtils.JavadocTagType.ALL;
      JavadocUtils.getJavadocTags(comment0, javadocUtils_JavadocTagType0);
      JavadocUtils.containsInBranch(javadocNodeImpl0, 464);
      JavadocUtils.JavadocTagType.values();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JavadocUtils.escapeAllControlChars("F$SemZ9Z:$");
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[3];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[1] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      JavadocUtils.findFirstToken(javadocNodeImpl0, 464);
      JavadocUtils.getPreviousSibling(javadocNodeImpl0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "F$SemZ9Z:$";
      stringArray0[1] = "F$SemZ9Z:$";
      stringArray0[2] = "F$SemZ9Z:$";
      stringArray0[3] = "F$SemZ9Z:$";
      stringArray0[4] = "F$SemZ9Z:$";
      stringArray0[5] = "F$SemZ9Z:$";
      stringArray0[6] = "F$SemZ9Z:$";
      Comment comment0 = new Comment(stringArray0, 464, 0, 0);
      JavadocUtils.JavadocTagType javadocUtils_JavadocTagType0 = JavadocUtils.JavadocTagType.ALL;
      JavadocUtils.getJavadocTags(comment0, javadocUtils_JavadocTagType0);
      JavadocUtils.containsInBranch(javadocNodeImpl0, 464);
      JavadocUtils.containsInBranch(detailNodeArray0[1], 0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JavadocUtils.escapeAllControlChars("\\n");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "\\n";
      stringArray0[1] = "\\n";
      stringArray0[2] = "\\n";
      stringArray0[3] = "\\n";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "\\n";
      stringArray0[7] = "\\n";
      Comment comment0 = new Comment(stringArray0, (-884), (-884), (-884));
      JavadocUtils.JavadocTagType javadocUtils_JavadocTagType0 = JavadocUtils.JavadocTagType.BLOCK;
      JavadocUtils.getJavadocTags(comment0, javadocUtils_JavadocTagType0);
      JavadocUtils.getTokenId("EOF");
      // Undeclared exception!
      try { 
        JavadocUtils.getFirstChild((DetailNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JavadocUtils.getTokenName(10072);
      JavadocUtils.escapeAllControlChars("JAVADOC_INLINE_TAG");
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      JavadocNodeImpl javadocNodeImpl1 = new JavadocNodeImpl();
      javadocNodeImpl0.setIndex(10072);
      javadocNodeImpl1.setParent(javadocNodeImpl0);
      javadocNodeImpl0.setParent(javadocNodeImpl1);
      DetailNode detailNode0 = javadocNodeImpl0.getParent();
      int int0 = (-1875);
      // Undeclared exception!
      JavadocUtils.containsInBranch(detailNode0, (-1875));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "F$SemZ9Z:$";
      JavadocUtils.escapeAllControlChars("F$SemZ9Z:$");
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[3];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setParent(detailNodeArray0[0]);
      detailNodeArray0[1] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      // Undeclared exception!
      JavadocUtils.getNextSibling(detailNodeArray0[2], 464);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "F$SemZ9Z:$";
      JavadocUtils.escapeAllControlChars("F$SemZ9Z:$");
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      javadocNodeImpl0.setIndex((-1570));
      DetailNode[] detailNodeArray0 = new DetailNode[3];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setParent(detailNodeArray0[0]);
      detailNodeArray0[1] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      JavadocUtils.getPreviousSibling(detailNodeArray0[0]);
      // Undeclared exception!
      try { 
        JavadocUtils.findFirstToken(javadocNodeImpl0, 464);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1569
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "F$SemZ9Z:$";
      JavadocUtils.escapeAllControlChars("F$SemZ9Z:$");
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[3];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setParent(detailNodeArray0[0]);
      detailNodeArray0[1] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      // Undeclared exception!
      JavadocUtils.findFirstToken(javadocNodeImpl0, 464);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JavadocUtils.escapeAllControlChars("F$SemZ9Z:$");
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[3];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[1] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      JavadocUtils.findFirstToken(javadocNodeImpl0, 464);
      JavadocUtils.getPreviousSibling(javadocNodeImpl0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "F$SemZ9Z:$";
      stringArray0[1] = "F$SemZ9Z:$";
      stringArray0[2] = "F$SemZ9Z:$";
      stringArray0[3] = "F$SemZ9Z:$";
      stringArray0[4] = "F$SemZ9Z:$";
      stringArray0[5] = "F$SemZ9Z:$";
      stringArray0[6] = "F$SemZ9Z:$";
      Comment comment0 = new Comment(stringArray0, 464, 0, 0);
      JavadocUtils.JavadocTagType javadocUtils_JavadocTagType0 = JavadocUtils.JavadocTagType.ALL;
      JavadocUtils.getJavadocTags(comment0, javadocUtils_JavadocTagType0);
      JavadocUtils.containsInBranch(javadocNodeImpl0, 464);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[6];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setIndex(42);
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[3] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      detailNodeArray0[4] = (DetailNode) javadocNodeImpl0;
      DetailNode detailNode0 = javadocNodeImpl0.getParent();
      detailNodeArray0[5] = null;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      int int0 = 0;
      javadocNodeImpl0.setText(" 7^2}");
      JavadocNodeImpl javadocNodeImpl1 = new JavadocNodeImpl();
      JavadocUtils.getTagName(javadocNodeImpl0);
      javadocNodeImpl0.getChildren();
      // Undeclared exception!
      try { 
        JavadocUtils.getNextSibling(detailNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        JavadocUtils.getTokenName(2147483610);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown javadoc token id. Given id: 2147483610
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[6];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setColumnNumber(1160);
      javadocNodeImpl0.setIndex(42);
      detailNodeArray0[1] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[3] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      detailNodeArray0[4] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.getParent();
      detailNodeArray0[5] = null;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      JavadocUtils.findFirstToken(javadocNodeImpl0, 0);
      JavadocUtils.getTagName(javadocNodeImpl0);
      javadocNodeImpl0.getChildren();
      JavadocUtils.getNextSibling(detailNodeArray0[1]);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      Comment comment0 = new Comment(stringArray0, 0, 0, (-1517));
      JavadocUtils.JavadocTagType javadocUtils_JavadocTagType0 = JavadocUtils.JavadocTagType.BLOCK;
      JavadocUtils.getJavadocTags(comment0, javadocUtils_JavadocTagType0);
      // Undeclared exception!
      try { 
        JavadocUtils.JavadocTagType.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.puppycrawl.tools.checkstyle.utils.JavadocUtils.JavadocTagType.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[6];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setIndex(42);
      detailNodeArray0[1] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[3] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[4] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.getParent();
      detailNodeArray0[5] = null;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      JavadocUtils.findFirstToken(javadocNodeImpl0, (-36));
      JavadocUtils.getTagName(javadocNodeImpl0);
      javadocNodeImpl0.getChildren();
      JavadocUtils.getNextSibling(detailNodeArray0[1]);
      // Undeclared exception!
      try { 
        JavadocUtils.JavadocTagType.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.puppycrawl.tools.checkstyle.utils.JavadocUtils.JavadocTagType.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[6];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setIndex(42);
      detailNodeArray0[1] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[3] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[4] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.getParent();
      detailNodeArray0[5] = null;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      JavadocUtils.getTagName(javadocNodeImpl0);
      javadocNodeImpl0.getChildren();
      JavadocUtils.getFirstChild(detailNodeArray0[1]);
      // Undeclared exception!
      try { 
        JavadocUtils.JavadocTagType.valueOf("_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.puppycrawl.tools.checkstyle.utils.JavadocUtils.JavadocTagType._
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "S=U%IOdQBybb@iNI";
      JavadocUtils.isJavadocComment("S=U%IOdQBybb@iNI");
      int int0 = (-1);
      JavadocUtils.getTokenName((-1));
      // Undeclared exception!
      try { 
        JavadocUtils.JavadocTagType.valueOf("S=U%IOdQBybb@iNI");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.puppycrawl.tools.checkstyle.utils.JavadocUtils.JavadocTagType.S=U%IOdQBybb@iNI
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[6];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[1] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[3] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[4] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.getParent();
      detailNodeArray0[5] = null;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      JavadocUtils.findFirstToken(javadocNodeImpl0, 0);
      JavadocUtils.getTagName(javadocNodeImpl0);
      javadocNodeImpl0.getChildren();
      JavadocUtils.getNextSibling(detailNodeArray0[1]);
      // Undeclared exception!
      try { 
        JavadocUtils.JavadocTagType.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.puppycrawl.tools.checkstyle.utils.JavadocUtils.JavadocTagType.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JavadocUtils.JavadocTagType.values();
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[0];
      javadocNodeImpl0.setChildren(detailNodeArray0);
      javadocNodeImpl0.getChildren();
      JavadocUtils.getPreviousSibling(javadocNodeImpl0);
      int int0 = 3;
      JavadocUtils.getTokenName(3);
      String string0 = "D(&{";
      // Undeclared exception!
      try { 
        JavadocUtils.JavadocTagType.valueOf("CDATA");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.puppycrawl.tools.checkstyle.utils.JavadocUtils.JavadocTagType.CDATA
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "R-cM6iAD<5k2";
      stringArray0[2] = "";
      stringArray0[3] = "\n";
      stringArray0[4] = "value";
      stringArray0[5] = "";
      Comment comment0 = new Comment(stringArray0, 70, 70, 70);
      JavadocUtils.JavadocTagType javadocUtils_JavadocTagType0 = JavadocUtils.JavadocTagType.ALL;
      // Undeclared exception!
      try { 
        JavadocUtils.getJavadocTags(comment0, javadocUtils_JavadocTagType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      javadocNodeImpl0.setLineNumber(496);
      javadocNodeImpl0.setIndex(7);
      // Undeclared exception!
      try { 
        JavadocUtils.getPreviousSibling(javadocNodeImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "R-cM6iAD<5k2";
      stringArray0[2] = "";
      stringArray0[3] = "\n";
      stringArray0[4] = "value";
      stringArray0[5] = "";
      stringArray0[6] = "]G4OfYEfE}?~Jk";
      Comment comment0 = new Comment(stringArray0, 70, 70, 70);
      JavadocUtils.JavadocTagType javadocUtils_JavadocTagType0 = JavadocUtils.JavadocTagType.ALL;
      // Undeclared exception!
      try { 
        JavadocUtils.getJavadocTags(comment0, javadocUtils_JavadocTagType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // comment lines cannot contain newlines
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.javadoc.utils.InlineTagUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JavadocUtils.JavadocTagType.values();
      JavadocUtils.escapeAllControlChars("com.puppycrawl.tools.checkstyle.api.tokentypes");
      JavadocUtils.isJavadocComment("\t");
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      JavadocUtils.getNextSibling((DetailNode) javadocNodeImpl0);
      // Undeclared exception!
      try { 
        JavadocUtils.getFirstChild((DetailNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.findFirstToken(1936);
      ASTNULLType aSTNULLType0 = new ASTNULLType();
      AST aST0 = aSTNULLType0.getFirstChild();
      detailAST0.findAll(aST0);
      detailAST0.getFirstChild();
      // Undeclared exception!
      try { 
        JavadocUtils.isJavadocComment((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try { 
        JavadocUtils.isJavadocComment((DetailAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "_b";
      stringArray0[1] = "la4";
      stringArray0[2] = "\\r";
      stringArray0[3] = "@throws";
      stringArray0[4] = "param";
      stringArray0[5] = "\" type=\"";
      stringArray0[6] = "754^&)|vi8O";
      stringArray0[7] = "";
      stringArray0[8] = "";
      Comment comment0 = new Comment(stringArray0, 10006, 10006, 10006);
      comment0.toString();
      JavadocUtils.JavadocTagType javadocUtils_JavadocTagType0 = JavadocUtils.JavadocTagType.INLINE;
      JavadocUtils.getJavadocTags(comment0, javadocUtils_JavadocTagType0);
      JavadocUtils.getTokenName(10006);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JavadocUtils.escapeAllControlChars("Q<");
      // Undeclared exception!
      try { 
        JavadocUtils.getNextSibling((DetailNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      JavadocUtils.getNextSibling((DetailNode) javadocNodeImpl0, 2347);
      // Undeclared exception!
      try { 
        JavadocUtils.getNextSibling((DetailNode) null, 2347);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JavadocUtils.isJavadocComment(",YL12c");
      // Undeclared exception!
      try { 
        JavadocUtils.getTokenName(42);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown javadoc token id. Given id: 42
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JavadocUtils.isJavadocComment("");
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "\t";
      stringArray0[1] = ",V>F5";
      stringArray0[2] = "K,G`}hm";
      Comment comment0 = new Comment(stringArray0, 153, 153, 2905);
      JavadocUtils.JavadocTagType javadocUtils_JavadocTagType0 = JavadocUtils.JavadocTagType.INLINE;
      JavadocUtils.getJavadocTags(comment0, javadocUtils_JavadocTagType0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      int int0 = (-1244);
      JavadocUtils.findFirstToken(javadocNodeImpl0, (-1244));
      // Undeclared exception!
      try { 
        JavadocUtils.getPreviousSibling((DetailNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        JavadocUtils.isJavadocComment((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DetailNode detailNode0 = null;
      int int0 = 3193;
      // Undeclared exception!
      try { 
        JavadocUtils.containsInBranch((DetailNode) null, 3193);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      String string0 = "antlr.ParseTree";
      JavadocUtils.escapeAllControlChars("antlr.ParseTree");
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      javadocNodeImpl0.setType((-1380));
      javadocNodeImpl0.setLineNumber((-1608));
      javadocNodeImpl0.setIndex((-874));
      javadocNodeImpl0.getChildren();
      int int0 = (-3557);
      javadocNodeImpl0.setType((-3557));
      javadocNodeImpl0.setLineNumber(144);
      javadocNodeImpl0.setText((String) null);
      // Undeclared exception!
      try { 
        JavadocUtils.getTagName(javadocNodeImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      JavadocUtils.getFirstChild(javadocNodeImpl0);
      DetailNode[] detailNodeArray0 = new DetailNode[4];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[1] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[3] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      // Undeclared exception!
      try { 
        JavadocUtils.containsInBranch((DetailNode) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "iraY5r";
      stringArray0[1] = "dZ%,MZn";
      stringArray0[2] = "";
      Comment comment0 = new Comment(stringArray0, 0, 0, 0);
      JavadocUtils.JavadocTagType javadocUtils_JavadocTagType0 = JavadocUtils.JavadocTagType.BLOCK;
      JavadocUtils.getJavadocTags(comment0, javadocUtils_JavadocTagType0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JavadocUtils.JavadocTagType.values();
      int int0 = (-2988);
      // Undeclared exception!
      try { 
        JavadocUtils.getTokenName((-2988));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      String string0 = "A]py<d016mJa31\\5";
      JavadocUtils.isJavadocComment("A]py<d016mJa31\u0005");
      int int0 = 0;
      // Undeclared exception!
      try { 
        JavadocUtils.findFirstToken((DetailNode) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      javadocNodeImpl0.getParent();
      int int0 = (-110);
      // Undeclared exception!
      try { 
        JavadocUtils.getNextSibling((DetailNode) null, (-110));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      // Undeclared exception!
      try { 
        JavadocUtils.getTokenId("ufvuIJ|J2_O##Yn3");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown javadoc token name. Given name ufvuIJ|J2_O##Yn3
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      int int0 = 10061;
      JavadocUtils.findFirstToken(javadocNodeImpl0, 10061);
      // Undeclared exception!
      try { 
        JavadocUtils.getFirstChild((DetailNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      String string0 = "";
      JavadocUtils.escapeAllControlChars("");
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      JavadocUtils.getPreviousSibling(javadocNodeImpl0);
      // Undeclared exception!
      try { 
        JavadocUtils.getNextSibling((DetailNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[6];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setIndex(42);
      detailNodeArray0[1] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[3] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[4] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.getParent();
      detailNodeArray0[5] = null;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      JavadocUtils.findFirstToken(javadocNodeImpl0, 0);
      JavadocUtils.getTagName(javadocNodeImpl0);
      javadocNodeImpl0.getChildren();
      JavadocUtils.getNextSibling(detailNodeArray0[1]);
      String string0 = "";
      // Undeclared exception!
      try { 
        JavadocUtils.JavadocTagType.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.puppycrawl.tools.checkstyle.utils.JavadocUtils.JavadocTagType.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JavadocUtils.escapeAllControlChars("");
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[3];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[1] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      JavadocUtils.findFirstToken(javadocNodeImpl0, 464);
      JavadocUtils.getPreviousSibling(javadocNodeImpl0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      stringArray0[6] = "";
      Comment comment0 = new Comment(stringArray0, 464, 0, 0);
      JavadocUtils.JavadocTagType javadocUtils_JavadocTagType0 = JavadocUtils.JavadocTagType.ALL;
      JavadocUtils.getJavadocTags(comment0, javadocUtils_JavadocTagType0);
      JavadocUtils.isJavadocComment("a_Q;n0 VS_9MDhz%h$t");
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
      try { 
        JavadocUtils.getTokenId("PARAM");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown javadoc token name. Given name PARAM
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      int int0 = 0;
      JavadocUtils.findFirstToken(javadocNodeImpl0, 0);
      // Undeclared exception!
      try { 
        JavadocUtils.getNextSibling((DetailNode) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      JavadocUtils.getNextSibling((DetailNode) javadocNodeImpl0);
      // Undeclared exception!
      try { 
        JavadocUtils.findFirstToken((DetailNode) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = "";
      JavadocUtils.escapeAllControlChars("");
      // Undeclared exception!
      try { 
        JavadocUtils.getNextSibling((DetailNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      // Undeclared exception!
      try { 
        JavadocUtils.escapeAllControlChars((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      JavadocUtils.getPreviousSibling(javadocNodeImpl0);
      // Undeclared exception!
      try { 
        JavadocUtils.getFirstChild((DetailNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        JavadocUtils.getPreviousSibling((DetailNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      javadocNodeImpl0.getParent();
      // Undeclared exception!
      try { 
        JavadocUtils.getNextSibling((DetailNode) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      javadocNodeImpl0.setLineNumber(2153);
      // Undeclared exception!
      try { 
        javadocNodeImpl0.toString();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown javadoc token id. Given id: 0
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      JavadocUtils.JavadocTagType.values();
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      int int0 = 185;
      JavadocUtils.getNextSibling((DetailNode) javadocNodeImpl0, 185);
      DetailAST detailAST0 = new DetailAST();
      // Undeclared exception!
      try { 
        JavadocUtils.isJavadocComment(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      JavadocUtils.isJavadocComment("A]py<d016mJa31\u0005");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "A]py<d016mJa31\u0005";
      // Undeclared exception!
      try { 
        JavadocUtils.getTokenId("A]py<d016mJa31\u0005");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown javadoc token name. Given name A]py<d016mJa31\u0005
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      JavadocUtils.JavadocTagType.values();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getLineNo();
      // Undeclared exception!
      try { 
        JavadocUtils.getJavadocCommentContent(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[6];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setIndex(42);
      detailNodeArray0[1] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[3] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      detailNodeArray0[4] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.getParent();
      detailNodeArray0[2] = null;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      JavadocUtils.findFirstToken(javadocNodeImpl0, 0);
      JavadocUtils.getTagName(javadocNodeImpl0);
      javadocNodeImpl0.getChildren();
      JavadocUtils.getNextSibling(detailNodeArray0[1]);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      Comment comment0 = new Comment(stringArray0, 0, 0, (-1517));
      JavadocUtils.JavadocTagType javadocUtils_JavadocTagType0 = JavadocUtils.JavadocTagType.BLOCK;
      JavadocUtils.getJavadocTags(comment0, javadocUtils_JavadocTagType0);
      // Undeclared exception!
      try { 
        JavadocUtils.JavadocTagType.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.puppycrawl.tools.checkstyle.utils.JavadocUtils.JavadocTagType.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      javadocNodeImpl0.setParent(javadocNodeImpl0);
      javadocNodeImpl0.setChildren(javadocNodeImpl0.EMPTY_DETAIL_NODE_ARRAY);
      JavadocUtils.findFirstToken(javadocNodeImpl0, 464);
      JavadocUtils.getPreviousSibling(javadocNodeImpl0);
      String[] stringArray0 = new String[7];
      javadocNodeImpl0.getChildren();
      // Undeclared exception!
      JavadocUtils.containsInBranch(javadocNodeImpl0, (-688));
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      JavadocUtils.escapeAllControlChars("F$SemZ9Z:$");
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      DetailNode[] detailNodeArray0 = new DetailNode[3];
      detailNodeArray0[0] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[1] = (DetailNode) javadocNodeImpl0;
      detailNodeArray0[2] = (DetailNode) javadocNodeImpl0;
      javadocNodeImpl0.setChildren(detailNodeArray0);
      DetailNode detailNode0 = JavadocUtils.findFirstToken(javadocNodeImpl0, 464);
      assertNull(detailNode0);
      
      DetailNode detailNode1 = JavadocUtils.getPreviousSibling(javadocNodeImpl0);
      assertNull(detailNode1);
      
      String[] stringArray0 = new String[7];
      stringArray0[0] = "F$SemZ9Z:$";
      stringArray0[1] = "F$SemZ9Z:$";
      javadocNodeImpl0.getChildren();
      stringArray0[2] = "F$SemZ9Z:$";
      stringArray0[3] = "F$SemZ9Z:$";
      stringArray0[4] = "F$SemZ9Z:$";
      stringArray0[5] = "F$SemZ9Z:$";
      stringArray0[6] = "F$SemZ9Z:$";
      Comment comment0 = new Comment(stringArray0, 464, 0, 0);
      JavadocUtils.JavadocTagType javadocUtils_JavadocTagType0 = JavadocUtils.JavadocTagType.ALL;
      JavadocUtils.getJavadocTags(comment0, javadocUtils_JavadocTagType0);
      boolean boolean0 = JavadocUtils.containsInBranch(javadocNodeImpl0, 464);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getPreviousSibling();
      StringWriter stringWriter0 = new StringWriter(0);
      stringWriter0.write(0);
      stringWriter0.append('T');
      // Undeclared exception!
      try { 
        JavadocUtils.getTokenName(3464);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown javadoc token id. Given id: 3464
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      JavadocUtils.escapeAllControlChars("");
      JavadocNodeImpl javadocNodeImpl0 = new JavadocNodeImpl();
      JavadocUtils.findFirstToken(javadocNodeImpl0, 182);
      JavadocUtils.isJavadocComment("");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      Comment comment0 = new Comment(stringArray0, 42, 103, 1);
      JavadocUtils.JavadocTagType javadocUtils_JavadocTagType0 = JavadocUtils.JavadocTagType.INLINE;
      JavadocUtils.getJavadocTags(comment0, javadocUtils_JavadocTagType0);
      // Undeclared exception!
      try { 
        JavadocUtils.getTagName(javadocNodeImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.JavadocUtils", e);
      }
  }
}
