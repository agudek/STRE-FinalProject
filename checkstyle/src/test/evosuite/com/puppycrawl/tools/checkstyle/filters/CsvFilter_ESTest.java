/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:52:03 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.filters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.filters.CsvFilter;
import com.puppycrawl.tools.checkstyle.filters.IntFilter;
import com.puppycrawl.tools.checkstyle.filters.IntMatchFilter;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CsvFilter_ESTest extends CsvFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CsvFilter csvFilter0 = new CsvFilter("8");
      Set<IntFilter> set0 = csvFilter0.getFilters();
      assertEquals(1, set0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CsvFilter csvFilter0 = null;
      try {
        csvFilter0 = new CsvFilter("2-+T#=jfu41mD]:,;");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"+T#=jfu41mD]:\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CsvFilter csvFilter0 = new CsvFilter("");
      csvFilter0.addFilter((IntFilter) null);
      // Undeclared exception!
      try { 
        csvFilter0.accept(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.filters.CsvFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CsvFilter csvFilter0 = null;
      try {
        csvFilter0 = new CsvFilter((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.StringTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CsvFilter csvFilter0 = new CsvFilter("8");
      csvFilter0.hashCode();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CsvFilter csvFilter0 = new CsvFilter("");
      CsvFilter csvFilter1 = new CsvFilter("");
      boolean boolean0 = csvFilter0.equals(csvFilter1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CsvFilter csvFilter0 = new CsvFilter("8");
      boolean boolean0 = csvFilter0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CsvFilter csvFilter0 = new CsvFilter("");
      boolean boolean0 = csvFilter0.equals(csvFilter0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CsvFilter csvFilter0 = new CsvFilter("8");
      Object object0 = new Object();
      boolean boolean0 = csvFilter0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CsvFilter csvFilter0 = new CsvFilter("");
      IntMatchFilter intMatchFilter0 = new IntMatchFilter(0);
      csvFilter0.addFilter(intMatchFilter0);
      boolean boolean0 = csvFilter0.accept(311);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CsvFilter csvFilter0 = new CsvFilter("");
      IntMatchFilter intMatchFilter0 = new IntMatchFilter(0);
      csvFilter0.addFilter(intMatchFilter0);
      boolean boolean0 = csvFilter0.accept(0);
      assertTrue(boolean0);
  }
}
