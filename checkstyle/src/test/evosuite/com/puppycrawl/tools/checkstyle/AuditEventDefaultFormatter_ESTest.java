/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:59:10 GMT 2018
 */

package com.puppycrawl.tools.checkstyle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.AuditEventDefaultFormatter;
import com.puppycrawl.tools.checkstyle.api.AuditEvent;
import com.puppycrawl.tools.checkstyle.api.LocalizedMessage;
import com.puppycrawl.tools.checkstyle.api.SeverityLevel;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AuditEventDefaultFormatter_ESTest extends AuditEventDefaultFormatter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AuditEventDefaultFormatter auditEventDefaultFormatter0 = new AuditEventDefaultFormatter();
      Class<Object> class0 = Object.class;
      LocalizedMessage localizedMessage0 = new LocalizedMessage(303, "False positive probability (%s) must be > 0.0", (String) null, (Object[]) null, "False positive probability (%s) must be > 0.0", class0, "+");
      AuditEvent auditEvent0 = new AuditEvent(auditEventDefaultFormatter0, "False positive probability (%s) must be > 0.0", localizedMessage0);
      String string0 = auditEventDefaultFormatter0.format(auditEvent0);
      assertEquals("[ERROR] False positive probability (%s) must be > 0.0:303: + [False positive probability (%s) must be > 0.0]", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AuditEventDefaultFormatter auditEventDefaultFormatter0 = new AuditEventDefaultFormatter();
      AuditEvent auditEvent0 = new AuditEvent(auditEventDefaultFormatter0);
      // Undeclared exception!
      try { 
        auditEventDefaultFormatter0.format(auditEvent0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.AuditEvent", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AuditEventDefaultFormatter auditEventDefaultFormatter0 = new AuditEventDefaultFormatter();
      Object object0 = new Object();
      Object[] objectArray0 = new Object[5];
      SeverityLevel severityLevel0 = SeverityLevel.IGNORE;
      Class<Integer> class0 = Integer.class;
      LocalizedMessage localizedMessage0 = new LocalizedMessage(979, 1233, 979, "", "", objectArray0, severityLevel0, "", class0, "/jbonw#7_{");
      AuditEvent auditEvent0 = new AuditEvent(object0, "", localizedMessage0);
      // Undeclared exception!
      try { 
        auditEventDefaultFormatter0.format(auditEvent0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unmatched braces in the pattern.
         //
         verifyException("java.text.MessageFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AuditEventDefaultFormatter auditEventDefaultFormatter0 = new AuditEventDefaultFormatter();
      Object[] objectArray0 = new Object[7];
      SeverityLevel severityLevel0 = SeverityLevel.WARNING;
      Class<Integer> class0 = Integer.TYPE;
      LocalizedMessage localizedMessage0 = new LocalizedMessage(91, 91, 91, "Oe7", "Oe7", objectArray0, severityLevel0, (String) null, class0, "Oe7");
      AuditEvent auditEvent0 = new AuditEvent(auditEventDefaultFormatter0, "Oe7", localizedMessage0);
      String string0 = auditEventDefaultFormatter0.format(auditEvent0);
      assertEquals("[WARN] Oe7:91:91: Oe7 [int]", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AuditEventDefaultFormatter auditEventDefaultFormatter0 = new AuditEventDefaultFormatter();
      Object object0 = new Object();
      Object[] objectArray0 = new Object[6];
      SeverityLevel severityLevel0 = SeverityLevel.ERROR;
      Class<Locale.LanguageRange> class0 = Locale.LanguageRange.class;
      LocalizedMessage localizedMessage0 = new LocalizedMessage((-1451), (-1451), "com.google.common.hash.BloomFilter$SerialForm", "com.google.common.hash.BloomFilter$SerialForm", objectArray0, severityLevel0, "com.google.common.hash.BloomFilter$SerialForm", class0, "com.google.common.hash.BloomFilter$SerialForm");
      AuditEvent auditEvent0 = new AuditEvent(object0, "com.google.common.hash.BloomFilter$SerialForm", localizedMessage0);
      String string0 = auditEventDefaultFormatter0.format(auditEvent0);
      assertEquals("[ERROR] com.google.common.hash.BloomFilter$SerialForm:-1451: com.google.common.hash.BloomFilter$SerialForm [com.google.common.hash.BloomFilter$SerialForm]", string0);
  }
}
