/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 15:18:24 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.gui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import com.puppycrawl.tools.checkstyle.gui.ParseTreeTableModel;
import com.puppycrawl.tools.checkstyle.gui.TreeTable;
import com.puppycrawl.tools.checkstyle.gui.TreeTableCellRenderer;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.text.AttributedCharacterIterator;
import javax.swing.DebugGraphics;
import javax.swing.JTable;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreeNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TreeTableCellRenderer_ESTest extends TreeTableCellRenderer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      ParseTreeTableModel parseTreeTableModel0 = new ParseTreeTableModel(detailAST0);
      TreeTable treeTable0 = new TreeTable(parseTreeTableModel0);
      TreeTableCellRenderer treeTableCellRenderer0 = new TreeTableCellRenderer(treeTable0, parseTreeTableModel0);
      DefaultTreeCellRenderer defaultTreeCellRenderer0 = new DefaultTreeCellRenderer();
      TreeTableCellRenderer treeTableCellRenderer1 = (TreeTableCellRenderer)treeTableCellRenderer0.getTableCellRendererComponent(treeTable0, defaultTreeCellRenderer0, true, true, 334, 0);
      assertFalse(treeTableCellRenderer1.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ParseTreeTableModel parseTreeTableModel0 = new ParseTreeTableModel((DetailAST) null);
      TreeTableCellRenderer treeTableCellRenderer0 = new TreeTableCellRenderer((TreeTable) null, parseTreeTableModel0);
      // Undeclared exception!
      try { 
        treeTableCellRenderer0.getTableCellRendererComponent((JTable) null, parseTreeTableModel0, false, true, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.gui.TreeTableCellRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ParseTreeTableModel parseTreeTableModel0 = new ParseTreeTableModel((DetailAST) null);
      TreeTable treeTable0 = new TreeTable(parseTreeTableModel0);
      TreeTableCellRenderer treeTableCellRenderer0 = new TreeTableCellRenderer(treeTable0, parseTreeTableModel0);
      treeTableCellRenderer0.setBounds(1, 2018, 1796, 1796);
      assertFalse(treeTableCellRenderer0.isFocusTraversalPolicyProvider());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      ParseTreeTableModel parseTreeTableModel0 = new ParseTreeTableModel(detailAST0);
      TreeTable treeTable0 = new TreeTable(parseTreeTableModel0);
      TreeTableCellRenderer treeTableCellRenderer0 = new TreeTableCellRenderer(treeTable0, parseTreeTableModel0);
      treeTableCellRenderer0.setBounds(0, 0, 0, (-356));
      assertFalse(treeTableCellRenderer0.isFocusCycleRoot());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ParseTreeTableModel parseTreeTableModel0 = new ParseTreeTableModel((DetailAST) null);
      TreeTable treeTable0 = new TreeTable(parseTreeTableModel0);
      TreeTableCellRenderer treeTableCellRenderer0 = new TreeTableCellRenderer(treeTable0, parseTreeTableModel0);
      BufferedImage bufferedImage0 = new BufferedImage(1, 475, 1);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      treeTableCellRenderer0.paint(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.transformState);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      ParseTreeTableModel parseTreeTableModel0 = new ParseTreeTableModel(detailAST0);
      TreeTable treeTable0 = new TreeTable(parseTreeTableModel0);
      TreeTableCellRenderer treeTableCellRenderer0 = new TreeTableCellRenderer(treeTable0, parseTreeTableModel0);
      DetailAST detailAST1 = detailAST0.getParent();
      detailAST0.setNextSibling(detailAST1);
      // Undeclared exception!
      treeTableCellRenderer0.updateUI();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ParseTreeTableModel parseTreeTableModel0 = new ParseTreeTableModel((DetailAST) null);
      TreeTable treeTable0 = new TreeTable(parseTreeTableModel0);
      TreeNode treeNode0 = mock(TreeNode.class, new ViolatedAssumptionAnswer());
      doReturn("9({%", "", (String) null, (String) null).when(treeNode0).toString();
      doReturn((-355), 0).when(treeNode0).getChildCount();
      doReturn(false, false, true, true, false).when(treeNode0).isLeaf();
      DefaultTreeModel defaultTreeModel0 = new DefaultTreeModel(treeNode0, false);
      TreeTableCellRenderer treeTableCellRenderer0 = new TreeTableCellRenderer(treeTable0, defaultTreeModel0);
      treeTableCellRenderer0.updateUI();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TreeNode treeNode0 = mock(TreeNode.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(treeNode0).toString();
      doReturn(0).when(treeNode0).getChildCount();
      doReturn(false, false, false, false, false).when(treeNode0).isLeaf();
      DefaultTreeModel defaultTreeModel0 = new DefaultTreeModel(treeNode0, false);
      TreeTableCellRenderer treeTableCellRenderer0 = new TreeTableCellRenderer((TreeTable) null, defaultTreeModel0);
      // Undeclared exception!
      try { 
        treeTableCellRenderer0.setBounds(0, 0, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.gui.TreeTableCellRenderer", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TreeNode treeNode0 = mock(TreeNode.class, new ViolatedAssumptionAnswer());
      doReturn("nlXsuWJ<2g8R: ", "com.puppycrawl.tools.checkstyle.gui.TreeTableCellRenderer").when(treeNode0).toString();
      doReturn((TreeNode) null).when(treeNode0).getChildAt(anyInt());
      doReturn(730).when(treeNode0).getChildCount();
      doReturn(false, false, false, false).when(treeNode0).isLeaf();
      DefaultTreeModel defaultTreeModel0 = new DefaultTreeModel(treeNode0, false);
      TreeTableCellRenderer treeTableCellRenderer0 = null;
      try {
        treeTableCellRenderer0 = new TreeTableCellRenderer((TreeTable) null, defaultTreeModel0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null child not allowed
         //
         verifyException("javax.swing.tree.TreePath", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      ParseTreeTableModel parseTreeTableModel0 = new ParseTreeTableModel(detailAST0);
      TreeTable treeTable0 = new TreeTable(parseTreeTableModel0);
      TreeTableCellRenderer treeTableCellRenderer0 = new TreeTableCellRenderer(treeTable0, parseTreeTableModel0);
      treeTableCellRenderer0.setRowHeight(1);
      treeTableCellRenderer0.setRowHeight(1);
      assertFalse(treeTableCellRenderer0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      ParseTreeTableModel parseTreeTableModel0 = new ParseTreeTableModel(detailAST0);
      TreeTable treeTable0 = new TreeTable(parseTreeTableModel0);
      TreeTableCellRenderer treeTableCellRenderer0 = new TreeTableCellRenderer(treeTable0, parseTreeTableModel0);
      treeTableCellRenderer0.setRowHeight((-1));
      assertTrue(treeTableCellRenderer0.getFocusTraversalKeysEnabled());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TreeTableCellRenderer treeTableCellRenderer0 = new TreeTableCellRenderer((TreeTable) null, (TreeModel) null);
      treeTableCellRenderer0.updateUI();
      assertFalse(treeTableCellRenderer0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      ParseTreeTableModel parseTreeTableModel0 = new ParseTreeTableModel(detailAST0);
      TreeTable treeTable0 = new TreeTable(parseTreeTableModel0);
      TreeTableCellRenderer treeTableCellRenderer0 = new TreeTableCellRenderer(treeTable0, parseTreeTableModel0);
      AttributedCharacterIterator.Attribute attributedCharacterIterator_Attribute0 = AttributedCharacterIterator.Attribute.LANGUAGE;
      treeTableCellRenderer0.getTableCellRendererComponent(treeTable0, attributedCharacterIterator_Attribute0, true, true, 1980, 1980);
      DebugGraphics debugGraphics0 = new DebugGraphics((Graphics) null, treeTable0);
      // Undeclared exception!
      try { 
        treeTableCellRenderer0.paint(debugGraphics0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.swing.DebugGraphics", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      ParseTreeTableModel parseTreeTableModel0 = new ParseTreeTableModel(detailAST0);
      TreeTable treeTable0 = new TreeTable(parseTreeTableModel0);
      TreeTableCellRenderer treeTableCellRenderer0 = new TreeTableCellRenderer(treeTable0, parseTreeTableModel0);
      treeTableCellRenderer0.setRowHeight(2685);
      assertFalse(treeTableCellRenderer0.isFocusTraversalPolicySet());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultTreeModel defaultTreeModel0 = new DefaultTreeModel((TreeNode) null, true);
      TreeTableCellRenderer treeTableCellRenderer0 = new TreeTableCellRenderer((TreeTable) null, defaultTreeModel0);
      treeTableCellRenderer0.setRowHeight(4398);
      assertFalse(treeTableCellRenderer0.getIgnoreRepaint());
  }
}
