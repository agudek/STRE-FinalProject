/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 15:05:29 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.checks.whitespace;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import com.puppycrawl.tools.checkstyle.api.FileContents;
import com.puppycrawl.tools.checkstyle.api.FileText;
import com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EmptyForIteratorPadCheck_ESTest extends EmptyForIteratorPadCheck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EmptyForIteratorPadCheck emptyForIteratorPadCheck0 = new EmptyForIteratorPadCheck();
      MockFile mockFile0 = new MockFile("ws.notFollowed", "ws.notFollowed");
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) null);
      FileText fileText0 = new FileText(mockFile0, list0);
      FileContents fileContents0 = new FileContents(fileText0);
      emptyForIteratorPadCheck0.setFileContents(fileContents0);
      DetailAST detailAST0 = new DetailAST();
      detailAST0.addPreviousSibling(detailAST0);
      // Undeclared exception!
      try { 
        emptyForIteratorPadCheck0.visitToken(detailAST0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EmptyForIteratorPadCheck emptyForIteratorPadCheck0 = new EmptyForIteratorPadCheck();
      MockFile mockFile0 = new MockFile("ws.followed");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      FileText fileText0 = new FileText(mockFile0, linkedList0);
      FileContents fileContents0 = new FileContents(fileText0);
      emptyForIteratorPadCheck0.setFileContents(fileContents0);
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST0.addPreviousSibling(detailAST1);
      // Undeclared exception!
      try { 
        emptyForIteratorPadCheck0.visitToken(detailAST0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2147483647
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EmptyForIteratorPadCheck emptyForIteratorPadCheck0 = new EmptyForIteratorPadCheck();
      // Undeclared exception!
      try { 
        emptyForIteratorPadCheck0.setOption((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EmptyForIteratorPadCheck emptyForIteratorPadCheck0 = new EmptyForIteratorPadCheck();
      int[] intArray0 = emptyForIteratorPadCheck0.getRequiredTokens();
      assertArrayEquals(new int[] {37}, intArray0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EmptyForIteratorPadCheck emptyForIteratorPadCheck0 = new EmptyForIteratorPadCheck();
      DetailAST detailAST0 = new DetailAST();
      // Undeclared exception!
      try { 
        emptyForIteratorPadCheck0.visitToken(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.AbstractCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.addChild(detailAST0);
      EmptyForIteratorPadCheck emptyForIteratorPadCheck0 = new EmptyForIteratorPadCheck();
      emptyForIteratorPadCheck0.visitToken(detailAST0);
      assertEquals(0, detailAST0.getLine());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EmptyForIteratorPadCheck emptyForIteratorPadCheck0 = new EmptyForIteratorPadCheck();
      int[] intArray0 = emptyForIteratorPadCheck0.getAcceptableTokens();
      assertArrayEquals(new int[] {37}, intArray0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EmptyForIteratorPadCheck emptyForIteratorPadCheck0 = new EmptyForIteratorPadCheck();
      // Undeclared exception!
      try { 
        emptyForIteratorPadCheck0.setOption("ws.followed");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unable to parse ws.followed
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      EmptyForIteratorPadCheck emptyForIteratorPadCheck0 = new EmptyForIteratorPadCheck();
      int[] intArray0 = emptyForIteratorPadCheck0.getDefaultTokens();
      assertArrayEquals(new int[] {37}, intArray0);
  }
}
