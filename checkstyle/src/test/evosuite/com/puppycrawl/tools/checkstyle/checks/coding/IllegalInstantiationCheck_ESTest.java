/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 13:02:49 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.checks.coding;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import antlr.BaseAST;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IllegalInstantiationCheck_ESTest extends IllegalInstantiationCheck_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IllegalInstantiationCheck illegalInstantiationCheck0 = new IllegalInstantiationCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.addChild(detailAST0);
      detailAST0.setType(16);
      illegalInstantiationCheck0.visitToken(detailAST0);
      assertFalse(illegalInstantiationCheck0.isCommentNodesRequired());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IllegalInstantiationCheck illegalInstantiationCheck0 = new IllegalInstantiationCheck();
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST1.setNextSibling(detailAST0);
      detailAST0.addChild(detailAST1);
      // Undeclared exception!
      try { 
        illegalInstantiationCheck0.visitToken(detailAST0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IllegalInstantiationCheck illegalInstantiationCheck0 = new IllegalInstantiationCheck();
      DetailAST detailAST0 = new DetailAST();
      String[] stringArray0 = new String[3];
      BaseAST.setVerboseStringConversion(true, stringArray0);
      detailAST0.initialize(71, "zI|Ydg8UJbx");
      // Undeclared exception!
      try { 
        illegalInstantiationCheck0.visitToken(detailAST0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 71
         //
         verifyException("antlr.BaseAST", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IllegalInstantiationCheck illegalInstantiationCheck0 = new IllegalInstantiationCheck();
      // Undeclared exception!
      try { 
        illegalInstantiationCheck0.setClasses((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Arrays", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IllegalInstantiationCheck illegalInstantiationCheck0 = new IllegalInstantiationCheck();
      int[] intArray0 = illegalInstantiationCheck0.getAcceptableTokens();
      assertArrayEquals(new int[] {30, 136, 16, 14}, intArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IllegalInstantiationCheck illegalInstantiationCheck0 = new IllegalInstantiationCheck();
      DetailAST detailAST0 = new DetailAST();
      // Undeclared exception!
      try { 
        illegalInstantiationCheck0.visitToken(detailAST0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown type null[-2147483648x-2147483648]
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setType(136);
      IllegalInstantiationCheck illegalInstantiationCheck0 = new IllegalInstantiationCheck();
      // Undeclared exception!
      try { 
        illegalInstantiationCheck0.visitToken(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IllegalInstantiationCheck illegalInstantiationCheck0 = new IllegalInstantiationCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.initialize(14, "instantiation.avoid");
      // Undeclared exception!
      try { 
        illegalInstantiationCheck0.visitToken(detailAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.checks.coding.IllegalInstantiationCheck", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IllegalInstantiationCheck illegalInstantiationCheck0 = new IllegalInstantiationCheck();
      DetailAST detailAST0 = new DetailAST();
      illegalInstantiationCheck0.beginTree(detailAST0);
      assertNull(detailAST0.getText());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IllegalInstantiationCheck illegalInstantiationCheck0 = new IllegalInstantiationCheck();
      int[] intArray0 = illegalInstantiationCheck0.getDefaultTokens();
      assertArrayEquals(new int[] {30, 136, 16, 14}, intArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IllegalInstantiationCheck illegalInstantiationCheck0 = new IllegalInstantiationCheck();
      int[] intArray0 = illegalInstantiationCheck0.getRequiredTokens();
      assertArrayEquals(new int[] {30, 136, 16}, intArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IllegalInstantiationCheck illegalInstantiationCheck0 = new IllegalInstantiationCheck();
      String[] stringArray0 = new String[1];
      illegalInstantiationCheck0.setClasses(stringArray0);
      assertNull(illegalInstantiationCheck0.getId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IllegalInstantiationCheck illegalInstantiationCheck0 = new IllegalInstantiationCheck();
      DetailAST detailAST0 = new DetailAST();
      illegalInstantiationCheck0.finishTree(detailAST0);
      assertEquals(0, detailAST0.getNumberOfChildren());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IllegalInstantiationCheck illegalInstantiationCheck0 = new IllegalInstantiationCheck();
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setType(30);
      illegalInstantiationCheck0.visitToken(detailAST0);
      assertNull(illegalInstantiationCheck0.getId());
  }
}
