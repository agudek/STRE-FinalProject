/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 12:28:32 GMT 2018
 */

package com.puppycrawl.tools.checkstyle;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.puppycrawl.tools.checkstyle.DefaultConfiguration;
import com.puppycrawl.tools.checkstyle.PackageObjectFactory;
import com.puppycrawl.tools.checkstyle.ThreadModeSettings;
import com.puppycrawl.tools.checkstyle.TreeWalker;
import com.puppycrawl.tools.checkstyle.api.FileText;
import com.puppycrawl.tools.checkstyle.api.SeverityLevel;
import java.io.File;
import java.util.LinkedList;
import java.util.Set;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TreeWalker_ESTest extends TreeWalker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TreeWalker treeWalker0 = new TreeWalker();
      DefaultConfiguration defaultConfiguration0 = new DefaultConfiguration("*d?B ");
      // Undeclared exception!
      try { 
        treeWalker0.setupChild(defaultConfiguration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.TreeWalker", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TreeWalker treeWalker0 = new TreeWalker();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      FileText fileText0 = new FileText((File) null, linkedList0);
      // Undeclared exception!
      try { 
        treeWalker0.processFiltered((File) null, fileText0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.utils.CommonUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TreeWalker treeWalker0 = new TreeWalker();
      String[] stringArray0 = new String[0];
      treeWalker0.setFileExtensions(stringArray0);
      File file0 = MockFile.createTempFile("error", "error", (File) null);
      Stack<String> stack0 = new Stack<String>();
      FileText fileText0 = new FileText((File) null, stack0);
      treeWalker0.processFiltered(file0, fileText0);
      assertFalse(file0.isDirectory());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TreeWalker treeWalker0 = new TreeWalker();
      MockFile mockFile0 = new MockFile("G.~rc");
      treeWalker0.processFiltered(mockFile0, (FileText) null);
      assertFalse(mockFile0.exists());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TreeWalker treeWalker0 = new TreeWalker();
      treeWalker0.finishLocalSetup();
      assertNull(treeWalker0.getId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TreeWalker treeWalker0 = new TreeWalker();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      treeWalker0.setClassLoader(classLoader0);
      assertNull(treeWalker0.getId());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TreeWalker treeWalker0 = new TreeWalker();
      Set<String> set0 = treeWalker0.getExternalResourceLocations();
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TreeWalker treeWalker0 = new TreeWalker();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      PackageObjectFactory packageObjectFactory0 = new PackageObjectFactory("G.~rc", classLoader0);
      treeWalker0.setModuleFactory(packageObjectFactory0);
      ThreadModeSettings threadModeSettings0 = new ThreadModeSettings(3058, 3058);
      DefaultConfiguration defaultConfiguration0 = new DefaultConfiguration("com.puppycrawl.tools.checkstyle.TreeWalker", threadModeSettings0);
      try { 
        treeWalker0.setupChild(defaultConfiguration0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // TreeWalker is not allowed as a parent of com.puppycrawl.tools.checkstyle.TreeWalker Please review 'Parent Module' section for this Check in web documentation if Check is standard.
         //
         verifyException("com.puppycrawl.tools.checkstyle.TreeWalker", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TreeWalker treeWalker0 = new TreeWalker();
      treeWalker0.destroy();
      assertEquals(SeverityLevel.ERROR, treeWalker0.getSeverityLevel());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TreeWalker treeWalker0 = new TreeWalker();
      treeWalker0.setTabWidth(3058);
      assertNull(treeWalker0.getId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TreeWalker treeWalker0 = new TreeWalker();
      treeWalker0.setCacheFile("error");
      assertEquals(SeverityLevel.ERROR, treeWalker0.getSeverityLevel());
  }
}
