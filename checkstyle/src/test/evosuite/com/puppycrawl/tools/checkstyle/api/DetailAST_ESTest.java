/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 12:54:56 GMT 2018
 */

package com.puppycrawl.tools.checkstyle.api;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import antlr.ASTNULLType;
import antlr.BaseAST;
import antlr.CommonAST;
import antlr.CommonASTWithHiddenTokens;
import antlr.ParseTreeToken;
import antlr.Token;
import antlr.collections.AST;
import com.puppycrawl.tools.checkstyle.api.DetailAST;
import java.io.StringWriter;
import java.io.Writer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DetailAST_ESTest extends DetailAST_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST0.setFirstChild((AST) null);
      detailAST0.setNextSibling(detailAST1);
      detailAST0.setColumnNo(80);
      detailAST1.addChild(detailAST0);
      detailAST1.getChildCount();
      detailAST1.getColumnNo();
      // Undeclared exception!
      detailAST1.addNextSibling(detailAST0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.toString();
      detailAST0.setColumnNo(0);
      BaseAST.encode("");
      detailAST0.getChildCount();
      detailAST0.setText("");
      detailAST0.toStringList();
      detailAST0.getChildCount();
      detailAST0.getParent();
      detailAST0.addPreviousSibling((DetailAST) null);
      detailAST0.setNextSibling(detailAST0);
      detailAST0.getChildCount();
      detailAST0.getNextSibling();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setLineNo(0);
      DetailAST detailAST1 = new DetailAST();
      detailAST0.toStringTree();
      detailAST0.setColumnNo((-19));
      detailAST0.addChild(detailAST1);
      detailAST0.setLineNo((-19));
      detailAST1.addNextSibling(detailAST0);
      // Undeclared exception!
      detailAST0.setNextSibling(detailAST1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      int int0 = 473;
      detailAST0.setType(473);
      DetailAST detailAST1 = new DetailAST();
      detailAST0.addChild(detailAST1);
      detailAST0.addNextSibling(detailAST1);
      detailAST0.initialize((AST) detailAST1);
      int int1 = 0;
      // Undeclared exception!
      try { 
        detailAST0.branchContains((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // bitIndex < 0: -1
         //
         verifyException("java.util.BitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST0.addPreviousSibling(detailAST1);
      detailAST1.setFirstChild((AST) null);
      detailAST0.setNextSibling(detailAST1);
      int int0 = (-1);
      detailAST0.setColumnNo((-1));
      // Undeclared exception!
      detailAST1.addChild(detailAST0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setFirstChild((AST) null);
      detailAST0.setColumnNo((-1));
      detailAST0.findAll((AST) null);
      detailAST0.addChild(detailAST0);
      detailAST0.getChildCount();
      detailAST0.getColumnNo();
      detailAST0.setLineNo(117);
      // Undeclared exception!
      detailAST0.addNextSibling(detailAST0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST0.setFirstChild((AST) null);
      detailAST0.setNextSibling(detailAST1);
      detailAST0.setColumnNo((-1));
      detailAST1.addChild(detailAST0);
      detailAST1.getChildCount();
      BaseAST.decode("xa~n");
      detailAST1.getColumnNo();
      detailAST0.setLineNo(117);
      // Undeclared exception!
      detailAST1.addPreviousSibling(detailAST0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST1.setNextSibling(detailAST1);
      detailAST0.setColumnNo((-1));
      detailAST0.setLineNo(117);
      detailAST1.addNextSibling(detailAST0);
      detailAST1.getNextSibling();
      detailAST1.getFirstChild();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      int int0 = 473;
      detailAST0.setType(473);
      DetailAST detailAST1 = new DetailAST();
      detailAST0.addChild(detailAST1);
      detailAST0.addNextSibling(detailAST1);
      detailAST0.initialize((AST) detailAST1);
      detailAST1.branchContains(0);
      detailAST1.initialize((AST) detailAST0);
      detailAST0.getColumnNo();
      detailAST1.removeChildren();
      detailAST0.getChildCount((-1));
      // Undeclared exception!
      try { 
        detailAST1.branchContains(Integer.MIN_VALUE);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // bitIndex < 0: -2147483648
         //
         verifyException("java.util.BitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setLineNo(0);
      DetailAST detailAST1 = new DetailAST();
      detailAST0.toStringTree();
      detailAST0.setNextSibling(detailAST1);
      detailAST0.setColumnNo((-1));
      detailAST0.setLineNo((-1));
      detailAST1.addNextSibling(detailAST0);
      detailAST0.setNextSibling(detailAST1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.toString();
      detailAST0.setColumnNo(0);
      detailAST0.setText("");
      detailAST0.toStringList();
      detailAST0.getChildCount();
      detailAST0.setNextSibling(detailAST0);
      detailAST0.findFirstToken((-1));
      detailAST0.getChildCount();
      detailAST0.getPreviousSibling();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      int int0 = 473;
      detailAST0.setType(473);
      DetailAST detailAST1 = new DetailAST();
      detailAST0.addChild(detailAST1);
      detailAST0.addNextSibling(detailAST1);
      detailAST0.initialize((AST) detailAST1);
      detailAST1.branchContains(0);
      detailAST0.getColumnNo();
      // Undeclared exception!
      try { 
        detailAST1.branchContains(Integer.MIN_VALUE);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // bitIndex < 0: -2147483648
         //
         verifyException("java.util.BitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setNextSibling(detailAST0);
      detailAST0.setColumnNo((-1));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "0d!m9_lD1B0%|+[A0E7";
      stringArray0[1] = ">\n";
      BaseAST.setVerboseStringConversion(true, stringArray0);
      detailAST0.setLineNo((-1));
      detailAST0.addNextSibling(detailAST0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      int int0 = 473;
      detailAST0.setType(473);
      detailAST0.getParent();
      detailAST0.addChild((AST) null);
      detailAST0.addNextSibling((DetailAST) null);
      // Undeclared exception!
      try { 
        detailAST0.initialize((AST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.DetailAST", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST0.setNextSibling(detailAST1);
      detailAST0.toString();
      Token token0 = new Token(122, (String) null);
      detailAST0.getPreviousSibling();
      // Undeclared exception!
      try { 
        detailAST1.initialize(token0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // antlr.Token cannot be cast to antlr.CommonHiddenStreamToken
         //
         verifyException("antlr.CommonASTWithHiddenTokens", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST0.setNextSibling(detailAST1);
      detailAST1.setFirstChild(detailAST0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      int int0 = 473;
      detailAST0.setType(473);
      DetailAST detailAST1 = new DetailAST();
      detailAST0.addChild(detailAST1);
      detailAST0.addNextSibling(detailAST1);
      detailAST0.equalsListPartial(detailAST1);
      detailAST0.initialize((AST) detailAST1);
      detailAST1.branchContains(0);
      Token token0 = new Token(473);
      ParseTreeToken parseTreeToken0 = new ParseTreeToken(token0);
      detailAST1.findAllPartial(parseTreeToken0);
      detailAST1.getColumnNo();
      detailAST1.getNextSibling();
      // Undeclared exception!
      detailAST1.addNextSibling(detailAST0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST0.setNextSibling(detailAST1);
      detailAST0.setColumnNo((-1));
      detailAST0.getChildCount((-1));
      detailAST1.getChildCount(Integer.MIN_VALUE);
      detailAST0.setLineNo(96);
      detailAST1.addNextSibling(detailAST0);
      detailAST1.getColumnNo();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.setLineNo(0);
      DetailAST detailAST1 = new DetailAST();
      detailAST1.toStringTree();
      detailAST0.setNextSibling(detailAST1);
      detailAST0.setColumnNo((-1));
      detailAST0.addChild(detailAST1);
      detailAST0.setLineNo(117);
      // Undeclared exception!
      detailAST1.addNextSibling(detailAST0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      int int0 = 473;
      detailAST0.setType(473);
      DetailAST detailAST1 = new DetailAST();
      detailAST0.addChild(detailAST1);
      detailAST0.addNextSibling(detailAST1);
      detailAST0.initialize((AST) detailAST1);
      detailAST1.branchContains(473);
      Token token0 = new Token(473);
      ParseTreeToken parseTreeToken0 = new ParseTreeToken(token0);
      detailAST1.getColumnNo();
      // Undeclared exception!
      try { 
        detailAST1.branchContains(Integer.MIN_VALUE);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // bitIndex < 0: -2147483648
         //
         verifyException("java.util.BitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.toString();
      detailAST0.setColumnNo(0);
      detailAST0.setText("");
      detailAST0.toStringList();
      detailAST0.getChildCount();
      detailAST0.setNextSibling(detailAST0);
      detailAST0.getChildCount();
      detailAST0.getNextSibling();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.findFirstToken((-1));
      detailAST0.equalsTree((AST) null);
      detailAST0.toString();
      detailAST0.setText("");
      detailAST0.setNextSibling(detailAST0);
      detailAST0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST0.setNextSibling(detailAST1);
      detailAST0.addChild(detailAST1);
      detailAST0.getChildCount(82);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getParent();
      detailAST0.getLineNo();
      // Undeclared exception!
      try { 
        detailAST0.initialize((AST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.DetailAST", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST0.setNextSibling(detailAST1);
      detailAST0.setColumnNo((-1));
      detailAST0.setLineNo(117);
      detailAST1.addNextSibling(detailAST0);
      detailAST0.addPreviousSibling(detailAST1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST0.setNextSibling(detailAST1);
      detailAST1.toStringList();
      Token token0 = new Token(122, "uv[C?n");
      detailAST0.getPreviousSibling();
      // Undeclared exception!
      try { 
        detailAST1.initialize(token0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // antlr.Token cannot be cast to antlr.CommonHiddenStreamToken
         //
         verifyException("antlr.CommonASTWithHiddenTokens", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getLastChild();
      detailAST0.addNextSibling((DetailAST) null);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getFirstChild();
      detailAST0.setNextSibling((AST) null);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      int int0 = 473;
      detailAST0.setType(473);
      DetailAST detailAST1 = new DetailAST();
      detailAST0.addNextSibling(detailAST1);
      detailAST0.initialize((AST) detailAST1);
      detailAST1.branchContains(0);
      detailAST1.getColumnNo();
      // Undeclared exception!
      try { 
        detailAST1.branchContains(Integer.MIN_VALUE);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // bitIndex < 0: -2147483648
         //
         verifyException("java.util.BitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.toString();
      detailAST0.setText("");
      detailAST0.setNextSibling(detailAST0);
      detailAST0.getChildCount();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      Token token0 = new Token();
      detailAST0.getChildCount(Integer.MIN_VALUE);
      token0.setText("");
      CommonASTWithHiddenTokens commonASTWithHiddenTokens0 = null;
      try {
        commonASTWithHiddenTokens0 = new CommonASTWithHiddenTokens(token0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // antlr.Token cannot be cast to antlr.CommonHiddenStreamToken
         //
         verifyException("antlr.CommonASTWithHiddenTokens", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getPreviousSibling();
      detailAST0.setNextSibling((AST) null);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.equalsTree(detailAST0);
      ASTNULLType aSTNULLType0 = new ASTNULLType();
      detailAST0.getChildCount();
      detailAST0.getFirstChild();
      // Undeclared exception!
      try { 
        detailAST0.initialize((AST) aSTNULLType0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // antlr.ASTNULLType cannot be cast to com.puppycrawl.tools.checkstyle.api.DetailAST
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.DetailAST", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getNextSibling();
      detailAST0.findAllPartial((AST) null);
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append('p');
      detailAST0.xmlSerializeRootClose(stringWriter1);
      detailAST0.setColumnNo(0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getFirstChild();
      detailAST0.setFirstChild((AST) null);
      detailAST0.getParent();
      detailAST0.equalsTreePartial((AST) null);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "<missing token>";
      stringArray0[1] = ".FDZ";
      stringArray0[2] = "CC_";
      stringArray0[3] = "AU}d.%=35}c[`6@";
      detailAST0.findAllPartial((AST) null);
      stringArray0[4] = "&!P.3W6-9r ";
      BaseAST.setVerboseStringConversion(true, stringArray0);
      detailAST0.getChildCount();
      detailAST0.getLastChild();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getChildCount();
      BaseAST.setVerboseStringConversion(true, (String[]) null);
      DetailAST detailAST1 = new DetailAST();
      detailAST0.addNextSibling(detailAST1);
      detailAST1.addChild(detailAST0);
      // Undeclared exception!
      detailAST1.addChild(detailAST0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      int int0 = 473;
      detailAST0.setType(473);
      DetailAST detailAST1 = new DetailAST();
      detailAST1.equalsListPartial(detailAST0);
      detailAST0.addNextSibling(detailAST1);
      detailAST0.initialize((AST) detailAST1);
      detailAST1.branchContains(0);
      detailAST1.getColumnNo();
      // Undeclared exception!
      try { 
        detailAST1.branchContains(Integer.MIN_VALUE);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // bitIndex < 0: -2147483648
         //
         verifyException("java.util.BitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      ASTNULLType aSTNULLType0 = new ASTNULLType();
      AST aST0 = aSTNULLType0.getFirstChild();
      // Undeclared exception!
      try { 
        detailAST0.setFirstChild(aST0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // antlr.ASTNULLType cannot be cast to antlr.BaseAST
         //
         verifyException("antlr.BaseAST", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.initialize(0, "");
      detailAST0.getChildCount();
      CommonASTWithHiddenTokens commonASTWithHiddenTokens0 = new CommonASTWithHiddenTokens();
      detailAST0.equalsTreePartial(commonASTWithHiddenTokens0);
      detailAST0.setColumnNo(0);
      detailAST0.getChildCount(0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.write(0);
      detailAST0.toString();
      // Undeclared exception!
      try { 
        stringWriter0.append((CharSequence) "null[-2147483648x-2147483648]", 3422, 3422);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getLineNo();
      int int0 = 15;
      CommonAST commonAST0 = new CommonAST();
      StringWriter stringWriter0 = null;
      try {
        stringWriter0 = new StringWriter(Integer.MIN_VALUE);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative buffer size
         //
         verifyException("java.io.StringWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getPreviousSibling();
      // Undeclared exception!
      try { 
        detailAST0.xmlSerializeNode((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.BaseAST", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.toStringTree();
      detailAST0.getFirstChild();
      int int0 = 0;
      StringWriter stringWriter0 = new StringWriter(0);
      StringWriter stringWriter1 = stringWriter0.append('5');
      // Undeclared exception!
      try { 
        stringWriter1.append((CharSequence) " null[-2147483648x-2147483648]", Integer.MIN_VALUE, (-357));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getFirstChild();
      // Undeclared exception!
      try { 
        detailAST0.initialize((AST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.DetailAST", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      CommonASTWithHiddenTokens commonASTWithHiddenTokens0 = new CommonASTWithHiddenTokens();
      // Undeclared exception!
      try { 
        detailAST0.setNextSibling(commonASTWithHiddenTokens0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // antlr.CommonASTWithHiddenTokens cannot be cast to com.puppycrawl.tools.checkstyle.api.DetailAST
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.DetailAST", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      Token token0 = new Token();
      detailAST0.findFirstToken(0);
      Token.badToken = token0;
      token0.setText("");
      Token.badToken = token0;
      // Undeclared exception!
      try { 
        detailAST0.initialize(token0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // antlr.Token cannot be cast to antlr.CommonHiddenStreamToken
         //
         verifyException("antlr.CommonASTWithHiddenTokens", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.branchContains(169);
      detailAST0.getHiddenBefore();
      detailAST0.findFirstToken(2754);
      detailAST0.equalsTree((AST) null);
      CommonASTWithHiddenTokens commonASTWithHiddenTokens0 = null;
      try {
        commonASTWithHiddenTokens0 = new CommonASTWithHiddenTokens((Token) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.CommonAST", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getChildCount();
      detailAST0.getHiddenAfter();
      // Undeclared exception!
      try { 
        detailAST0.initialize((Token) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("antlr.CommonAST", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      Token token0 = new Token((-3892), "");
      ParseTreeToken parseTreeToken0 = new ParseTreeToken(token0);
      parseTreeToken0.findAllPartial(detailAST0);
      // Undeclared exception!
      try { 
        detailAST0.addChild(parseTreeToken0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // antlr.ParseTreeToken cannot be cast to com.puppycrawl.tools.checkstyle.api.DetailAST
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.DetailAST", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      int int0 = 473;
      detailAST0.setType(473);
      DetailAST detailAST1 = new DetailAST();
      detailAST0.addChild(detailAST1);
      detailAST0.addNextSibling(detailAST1);
      detailAST0.initialize((AST) detailAST1);
      detailAST1.branchContains(0);
      detailAST1.initialize((AST) detailAST0);
      detailAST0.getColumnNo();
      detailAST1.removeChildren();
      detailAST0.getChildCount((-1));
      detailAST1.getNextSibling();
      detailAST0.addNextSibling((DetailAST) null);
      detailAST1.equalsTreePartial((AST) null);
      // Undeclared exception!
      try { 
        detailAST1.branchContains(Integer.MIN_VALUE);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // bitIndex < 0: -2147483648
         //
         verifyException("java.util.BitSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      detailAST0.getParent();
      // Undeclared exception!
      try { 
        detailAST0.initialize((AST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.puppycrawl.tools.checkstyle.api.DetailAST", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DetailAST detailAST0 = new DetailAST();
      DetailAST detailAST1 = new DetailAST();
      detailAST0.setFirstChild((AST) null);
      detailAST0.setNextSibling(detailAST1);
      detailAST0.setColumnNo((-1));
      detailAST1.addChild(detailAST0);
      detailAST1.getChildCount();
      detailAST1.getColumnNo();
      detailAST0.setLineNo(117);
      // Undeclared exception!
      detailAST1.addNextSibling(detailAST0);
  }
}
