/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:48:23 GMT 2018
 */

package com.jfinal.ext.kit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.ext.kit.DateKit;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class DateKit_ESTest extends DateKit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateKit.toDate("BT<7B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The date format is not supported for the time being
         //
         verifyException("com.jfinal.ext.kit.DateKit", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DateKit.setTimeStampPattern("'60Y7I");
      // Undeclared exception!
      try { 
        DateKit.toDate("yyyy-MM-dd");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The date format is not supported for the time being
         //
         verifyException("com.jfinal.ext.kit.DateKit", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockDate mockDate0 = new MockDate(2, (-2278), 2, 0, 2, 289);
      String string0 = DateKit.toStr((Date) mockDate0, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockDate mockDate0 = new MockDate(825L);
      String string0 = DateKit.toStr((Date) mockDate0);
      assertEquals("1970-01-01", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Date date0 = DateKit.toDate("2014-02-14");
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockDate mockDate0 = new MockDate(825L);
      // Undeclared exception!
      try { 
        DateKit.toStr((Date) mockDate0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockDate mockDate0 = new MockDate(0, 0, (-642));
      // Undeclared exception!
      try { 
        DateKit.toStr((Date) mockDate0, "not writable, and not read only.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'n'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DateKit.setDatePattern("twjZ");
      // Undeclared exception!
      try { 
        DateKit.toStr((Date) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 't'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DateKit.datePattern = null;
      // Undeclared exception!
      try { 
        DateKit.toDate(".>i4y.D`1S7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.ext.kit.DateKit", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockDate mockDate0 = new MockDate(825L);
      String string0 = DateKit.toStr((Date) mockDate0, "1970-01-01");
      assertEquals("1970-01-01", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DateKit.setDatePattern("9IINM%,Si>.d[");
      // Undeclared exception!
      try { 
        DateKit.toDate("9IINM%,Si>.d[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'I'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateKit.toDate("yyyy-MM-dd HH:mm:ss");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The date format is not supported for the time being
         //
         verifyException("com.jfinal.ext.kit.DateKit", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Date date0 = DateKit.toDate("");
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateKit.toDate("9IINM%,Si>.d[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The date format is not supported for the time being
         //
         verifyException("com.jfinal.ext.kit.DateKit", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateKit.setTimeStampPattern("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // timeStampPattern can not be blank
         //
         verifyException("com.jfinal.ext.kit.DateKit", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateKit.setDatePattern("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // datePattern can not be blank
         //
         verifyException("com.jfinal.ext.kit.DateKit", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DateKit dateKit0 = new DateKit();
      dateKit0.datePattern = "";
      MockDate mockDate0 = new MockDate(504, 504, 504);
      String string0 = DateKit.toStr((Date) mockDate0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        DateKit.toStr((Date) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Calendar", e);
      }
  }
}
