/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 15:00:08 GMT 2018
 */

package com.jfinal.ext.handler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.ext.handler.FakeStaticHandler;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpServletResponseWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class FakeStaticHandler_ESTest extends FakeStaticHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FakeStaticHandler fakeStaticHandler0 = new FakeStaticHandler("9)p3O");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      boolean[] booleanArray0 = new boolean[1];
      // Undeclared exception!
      try { 
        fakeStaticHandler0.handle("logFactory can not be null.", httpServletRequestWrapper0, httpServletResponseWrapper0, booleanArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.ext.handler.FakeStaticHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FakeStaticHandler fakeStaticHandler0 = new FakeStaticHandler();
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      boolean[] booleanArray0 = new boolean[0];
      // Undeclared exception!
      try { 
        fakeStaticHandler0.handle("", (HttpServletRequest) null, httpServletResponseWrapper0, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.jfinal.kit.HandlerKit", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FakeStaticHandler fakeStaticHandler0 = null;
      try {
        fakeStaticHandler0 = new FakeStaticHandler("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // viewPostfix can not be blank.
         //
         verifyException("com.jfinal.ext.handler.FakeStaticHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FakeStaticHandler fakeStaticHandler0 = new FakeStaticHandler(".html");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      boolean[] booleanArray0 = new boolean[5];
      // Undeclared exception!
      try { 
        fakeStaticHandler0.handle(".html", httpServletRequest0, (HttpServletResponse) null, booleanArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.ext.handler.FakeStaticHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FakeStaticHandler fakeStaticHandler0 = new FakeStaticHandler();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      boolean[] booleanArray0 = new boolean[1];
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      // Undeclared exception!
      try { 
        fakeStaticHandler0.handle("/", httpServletRequest0, httpServletResponseWrapper0, booleanArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.ext.handler.FakeStaticHandler", e);
      }
  }
}
