/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:48:45 GMT 2018
 */

package com.jfinal.template.expr.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.expr.ast.Assign;
import com.jfinal.template.expr.ast.Const;
import com.jfinal.template.expr.ast.Expr;
import com.jfinal.template.expr.ast.ExprList;
import com.jfinal.template.expr.ast.Field;
import com.jfinal.template.expr.ast.ForCtrl;
import com.jfinal.template.expr.ast.Map;
import com.jfinal.template.expr.ast.NullExpr;
import com.jfinal.template.expr.ast.Ternary;
import com.jfinal.template.stat.Location;
import com.jfinal.template.stat.Scope;
import java.util.HashMap;
import java.util.LinkedHashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class Ternary_ESTest extends Ternary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NullExpr nullExpr0 = (NullExpr)ExprList.NULL_EXPR;
      Ternary ternary0 = new Ternary(nullExpr0, nullExpr0, nullExpr0, (Location) null);
      Object object0 = ternary0.eval((Scope) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExprList exprList0 = ExprList.NULL_EXPR_LIST;
      Location location0 = new Location("ASSIGN", (-28));
      ForCtrl forCtrl0 = new ForCtrl(exprList0, exprList0, exprList0, location0);
      Ternary ternary0 = new Ternary(forCtrl0, exprList0, forCtrl0, location0);
      LinkedHashMap<Integer, String> linkedHashMap0 = new LinkedHashMap<Integer, String>();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Scope scope0 = new Scope(linkedHashMap0, hashMap0);
      // Undeclared exception!
      try { 
        ternary0.eval(scope0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The eval(Scope scope) method can not be invoked
         // Template: \"ASSIGN\". Line: -28
         //
         verifyException("com.jfinal.template.expr.ast.ForCtrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Const const0 = Const.TRUE;
      Assign assign0 = new Assign("t|~Af%0l;Q?aH&0BF", const0, const0.location);
      Ternary ternary0 = new Ternary(assign0, assign0, const0, const0.location);
      // Undeclared exception!
      try { 
        ternary0.eval((Scope) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.expr.ast.Assign", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedHashMap<Object, Expr> linkedHashMap0 = new LinkedHashMap<Object, Expr>();
      Map map0 = new Map(linkedHashMap0);
      Field field0 = new Field(map0, "DOT", (Location) null);
      Ternary ternary0 = new Ternary(field0, field0, map0, (Location) null);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Scope scope0 = new Scope(linkedHashMap0, hashMap0);
      // Undeclared exception!
      try { 
        ternary0.eval(scope0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.jfinal.template.expr.ast.MethodKit
         //
         verifyException("com.jfinal.template.expr.ast.Field", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedHashMap<Object, Expr> linkedHashMap0 = new LinkedHashMap<Object, Expr>();
      Map map0 = new Map(linkedHashMap0);
      Location location0 = new Location("com.jfinal.template.expr.ast.Ternary", (-180));
      Ternary ternary0 = new Ternary(map0, map0, map0, location0);
      LinkedHashMap<String, Object> linkedHashMap1 = new LinkedHashMap<String, Object>();
      Scope scope0 = new Scope(linkedHashMap0, linkedHashMap1);
      Object object0 = ternary0.eval(scope0);
      scope0.setLocal(object0, location0);
      // Undeclared exception!
      try { 
        ternary0.eval(scope0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.jfinal.template.stat.Location cannot be cast to com.jfinal.template.expr.ast.Expr
         //
         verifyException("com.jfinal.template.expr.ast.Map", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ExprList exprList0 = ExprList.NULL_EXPR_LIST;
      Location location0 = new Location("3X<#", 2579);
      Ternary ternary0 = null;
      try {
        ternary0 = new Ternary(exprList0, exprList0, (Expr) null, location0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The parameter of ternary expression can not be blank
         // Template: \"3X<#\". Line: 2579
         //
         verifyException("com.jfinal.template.expr.ast.Ternary", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Const const0 = Const.NULL;
      Location location0 = new Location("", 1);
      Ternary ternary0 = null;
      try {
        ternary0 = new Ternary(const0, (Expr) null, const0, location0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The parameter of ternary expression can not be blank
         // Template: \"\". Line: 1
         //
         verifyException("com.jfinal.template.expr.ast.Ternary", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Location location0 = new Location("", 507);
      Ternary ternary0 = null;
      try {
        ternary0 = new Ternary((Expr) null, (Expr) null, (Expr) null, location0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The parameter of ternary expression can not be blank
         // Template: \"\". Line: 507
         //
         verifyException("com.jfinal.template.expr.ast.Ternary", e);
      }
  }
}
