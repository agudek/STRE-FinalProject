/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 17:47:02 GMT 2018
 */

package com.jfinal.template.expr.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.expr.Sym;
import com.jfinal.template.expr.ast.Const;
import com.jfinal.template.expr.ast.Expr;
import com.jfinal.template.expr.ast.ExprList;
import com.jfinal.template.expr.ast.Id;
import com.jfinal.template.expr.ast.Unary;
import com.jfinal.template.stat.Location;
import com.jfinal.template.stat.Scope;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class Expr_ESTest extends Expr_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Const const0 = Const.FALSE;
      Object object0 = const0.eval((Scope) null);
      assertEquals(false, object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Sym sym0 = Sym.EOF;
      Const const0 = Const.FALSE;
      Location location0 = new Location("U[q", (-2078));
      Unary unary0 = new Unary(sym0, const0, location0);
      // Undeclared exception!
      try { 
        unary0.eval((Scope) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // EOF operator only support int long float double BigDecimal type
         // Template: \"U[q\". Line: -2078
         //
         verifyException("com.jfinal.template.expr.ast.Unary", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Expr[] exprArray0 = new Expr[2];
      Id id0 = new Id("getField");
      exprArray0[1] = (Expr) id0;
      // Undeclared exception!
      try { 
        exprArray0[1].eval((Scope) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.expr.ast.Id", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedList<Expr> linkedList0 = new LinkedList<Expr>();
      ExprList exprList0 = new ExprList(linkedList0);
      Expr expr0 = exprList0.getActualExpr();
      Scope scope0 = new Scope((java.util.Map) null, (java.util.Map<String, Object>) null);
      Object object0 = expr0.eval(scope0);
      assertNull(object0);
  }
}
