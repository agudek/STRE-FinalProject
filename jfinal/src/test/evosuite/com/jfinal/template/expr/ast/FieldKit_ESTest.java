/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:37:41 GMT 2018
 */

package com.jfinal.template.expr.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.expr.ast.FieldKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class FieldKit_ESTest extends FieldKit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Long long0 = new Long(960L);
      // Undeclared exception!
      try { 
        FieldKit.getField(long0, (Class<?>) null, "ECARED");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Long long0 = new Long(3894L);
      Class<String> class0 = String.class;
      java.lang.reflect.Field field0 = FieldKit.getField(long0, class0, "");
      assertNull(field0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Long long0 = new Long(493L);
      Class<java.lang.reflect.Field> class0 = java.lang.reflect.Field.class;
      java.lang.reflect.Field field0 = FieldKit.getField(long0, class0, "DECLARED");
      assertFalse(field0.isSynthetic());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      FieldKit fieldKit0 = new FieldKit();
  }
}
