/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 15:11:14 GMT 2018
 */

package com.jfinal.template.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.io.ByteWriter;
import com.jfinal.template.io.CharWriter;
import com.jfinal.template.io.EncoderFactory;
import com.jfinal.template.io.FastStringWriter;
import com.jfinal.template.io.WriterBuffer;
import java.nio.charset.IllegalCharsetNameException;
import java.nio.charset.UnsupportedCharsetException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class WriterBuffer_ESTest extends WriterBuffer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WriterBuffer writerBuffer0 = new WriterBuffer();
      writerBuffer0.setBufferSize(64);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WriterBuffer writerBuffer0 = new WriterBuffer();
      // Undeclared exception!
      try { 
        writerBuffer0.setEncoding("com.jfinal.template.expr.ast.Index");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // com.jfinal.template.expr.ast.Index
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WriterBuffer writerBuffer0 = new WriterBuffer();
      // Undeclared exception!
      try { 
        writerBuffer0.setEncoding("+~F$H2<e$p4Q7lA$");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // +~F$H2<e$p4Q7lA$
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WriterBuffer writerBuffer0 = new WriterBuffer();
      // Undeclared exception!
      try { 
        writerBuffer0.setEncoding((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null charset name
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WriterBuffer writerBuffer0 = new WriterBuffer();
      MockPrintStream mockPrintStream0 = new MockPrintStream("*V|rs/iR't_?DK");
      EncoderFactory encoderFactory0 = new EncoderFactory();
      writerBuffer0.setEncoderFactory(encoderFactory0);
      encoderFactory0.charset = null;
      // Undeclared exception!
      try { 
        writerBuffer0.getByteWriter(mockPrintStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.JdkEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WriterBuffer writerBuffer0 = new WriterBuffer();
      // Undeclared exception!
      try { 
        writerBuffer0.setEncoderFactory((EncoderFactory) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // encoderFactory can not be null
         //
         verifyException("com.jfinal.template.io.WriterBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WriterBuffer writerBuffer0 = new WriterBuffer();
      // Undeclared exception!
      try { 
        writerBuffer0.setBufferSize(48828083);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bufferSize must between 63 and 10485761
         //
         verifyException("com.jfinal.template.io.WriterBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WriterBuffer writerBuffer0 = new WriterBuffer();
      writerBuffer0.setBufferSize(10485760);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WriterBuffer writerBuffer0 = new WriterBuffer();
      // Undeclared exception!
      try { 
        writerBuffer0.setBufferSize(54);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bufferSize must between 63 and 10485761
         //
         verifyException("com.jfinal.template.io.WriterBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WriterBuffer writerBuffer0 = new WriterBuffer();
      MockPrintStream mockPrintStream0 = new MockPrintStream("*V|rs/iR't_?DK");
      ByteWriter byteWriter0 = writerBuffer0.getByteWriter(mockPrintStream0);
      assertNotNull(byteWriter0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WriterBuffer writerBuffer0 = new WriterBuffer();
      writerBuffer0.setEncoding("UTF-8");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WriterBuffer writerBuffer0 = new WriterBuffer();
      FastStringWriter fastStringWriter0 = writerBuffer0.getFastStringWriter();
      CharWriter charWriter0 = writerBuffer0.getCharWriter(fastStringWriter0);
      assertNotNull(charWriter0);
  }
}
