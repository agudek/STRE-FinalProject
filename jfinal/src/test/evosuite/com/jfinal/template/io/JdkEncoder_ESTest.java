/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 15:35:21 GMT 2018
 */

package com.jfinal.template.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.io.JdkEncoder;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class JdkEncoder_ESTest extends JdkEncoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CharsetEncoder charsetEncoder0 = mock(CharsetEncoder.class, new ViolatedAssumptionAnswer());
      Charset charset0 = mock(Charset.class, new ViolatedAssumptionAnswer());
      doReturn(charsetEncoder0).when(charset0).newEncoder();
      JdkEncoder jdkEncoder0 = new JdkEncoder(charset0);
      char[] charArray0 = new char[3];
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        jdkEncoder0.encode(charArray0, 0, 1, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CharsetEncoder charsetEncoder0 = mock(CharsetEncoder.class, new ViolatedAssumptionAnswer());
      Charset charset0 = mock(Charset.class, new ViolatedAssumptionAnswer());
      doReturn(charsetEncoder0).when(charset0).newEncoder();
      JdkEncoder jdkEncoder0 = new JdkEncoder(charset0);
      float float0 = jdkEncoder0.maxBytesPerChar();
      assertEquals(0.0F, float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CharsetEncoder charsetEncoder0 = mock(CharsetEncoder.class, new ViolatedAssumptionAnswer());
      Charset charset0 = mock(Charset.class, new ViolatedAssumptionAnswer());
      doReturn(charsetEncoder0).when(charset0).newEncoder();
      JdkEncoder jdkEncoder0 = new JdkEncoder(charset0);
      char[] charArray0 = new char[2];
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try { 
        jdkEncoder0.encode(charArray0, 1104, 664, byteArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JdkEncoder jdkEncoder0 = null;
      try {
        jdkEncoder0 = new JdkEncoder((Charset) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.JdkEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Charset charset0 = mock(Charset.class, new ViolatedAssumptionAnswer());
      doReturn((CharsetEncoder) null).when(charset0).newEncoder();
      JdkEncoder jdkEncoder0 = new JdkEncoder(charset0);
      // Undeclared exception!
      try { 
        jdkEncoder0.maxBytesPerChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.JdkEncoder", e);
      }
  }
}
