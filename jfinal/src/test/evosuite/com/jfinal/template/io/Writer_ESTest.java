/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 18:08:28 GMT 2018
 */

package com.jfinal.template.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.io.ByteWriter;
import com.jfinal.template.io.CharWriter;
import com.jfinal.template.io.Encoder;
import com.jfinal.template.io.EncoderFactory;
import com.jfinal.template.io.IWritable;
import com.jfinal.template.io.JdkEncoder;
import com.jfinal.template.io.Utf8Encoder;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PipedWriter;
import java.nio.charset.Charset;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class Writer_ESTest extends Writer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(1680);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("r", true);
      EncoderFactory encoderFactory0 = new EncoderFactory();
      Charset charset0 = encoderFactory0.charset;
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockFileOutputStream0, charset0);
      CharWriter charWriter1 = charWriter0.init(outputStreamWriter0);
      charWriter1.write(true);
      assertSame(charWriter1, charWriter0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(0);
      MockFile mockFile0 = new MockFile(")|Z");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0);
      CharWriter charWriter1 = charWriter0.init(mockFileWriter0);
      charWriter1.write("");
      assertSame(charWriter0, charWriter1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(1680);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("r", true);
      EncoderFactory encoderFactory0 = new EncoderFactory();
      Charset charset0 = encoderFactory0.charset;
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockFileOutputStream0, charset0);
      CharWriter charWriter1 = charWriter0.init(outputStreamWriter0);
      charWriter0.write((long) 63);
      assertSame(charWriter0, charWriter1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(1680);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("r", true);
      EncoderFactory encoderFactory0 = new EncoderFactory();
      Charset charset0 = encoderFactory0.charset;
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockFileOutputStream0, charset0);
      CharWriter charWriter1 = charWriter0.init(outputStreamWriter0);
      charWriter1.write(1078);
      assertSame(charWriter0, charWriter1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(1680);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("r");
      EncoderFactory encoderFactory0 = new EncoderFactory();
      Charset charset0 = encoderFactory0.charset;
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockFileOutputStream0, charset0);
      CharWriter charWriter1 = charWriter0.init(outputStreamWriter0);
      charWriter1.write((float) 1078);
      assertSame(charWriter1, charWriter0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Utf8Encoder utf8Encoder0 = new Utf8Encoder();
      ByteWriter byteWriter0 = new ByteWriter(utf8Encoder0, 16);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ByteWriter byteWriter1 = byteWriter0.init(byteArrayOutputStream0);
      byteWriter0.write((double) (-905L));
      assertSame(byteWriter0, byteWriter1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(1189);
      MockPrintStream mockPrintStream0 = new MockPrintStream("h$ YqHtH<5rGEXL9");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, false);
      CharWriter charWriter1 = charWriter0.init(mockPrintWriter0);
      charWriter0.flush();
      assertSame(charWriter0, charWriter1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(509);
      charWriter0.close();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(1680);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("r", true);
      EncoderFactory encoderFactory0 = new EncoderFactory();
      Charset charset0 = encoderFactory0.charset;
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockFileOutputStream0, charset0);
      CharWriter charWriter1 = charWriter0.init(outputStreamWriter0);
      charWriter1.write((short) (-821));
      assertSame(charWriter1, charWriter0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(1680);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("r");
      EncoderFactory encoderFactory0 = new EncoderFactory();
      Charset charset0 = encoderFactory0.charset;
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockFileOutputStream0, charset0);
      CharWriter charWriter1 = charWriter0.init(outputStreamWriter0);
      MockDate mockDate0 = new MockDate(63, 34, 1078, 63, 63, 0);
      charWriter1.write((Date) mockDate0, "");
      assertEquals("Tue Oct 15 16:03:00 GMT 1968", mockDate0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(1);
      // Undeclared exception!
      try { 
        charWriter0.write(true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.CharWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(0);
      // Undeclared exception!
      try { 
        charWriter0.write((short)492);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.jfinal.template.io.IntegerWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(26);
      PipedWriter pipedWriter0 = new PipedWriter();
      charWriter0.init(pipedWriter0);
      try { 
        charWriter0.write((short)492);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(1680);
      MockDate mockDate0 = new MockDate(1680, 1680, 1680);
      // Undeclared exception!
      try { 
        charWriter0.write((Date) mockDate0, "-");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.CharWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(1680);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("r");
      EncoderFactory encoderFactory0 = new EncoderFactory();
      Charset charset0 = encoderFactory0.charset;
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(mockFileOutputStream0, charset0);
      CharWriter charWriter1 = charWriter0.init(outputStreamWriter0);
      outputStreamWriter0.close();
      MockDate mockDate0 = new MockDate(63, 34, 1078, 63, 63, 0);
      try { 
        charWriter1.write((Date) mockDate0, "");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EncoderFactory encoderFactory0 = new EncoderFactory();
      Encoder encoder0 = encoderFactory0.getEncoder();
      ByteWriter byteWriter0 = new ByteWriter(encoder0, 0);
      StringBuilder stringBuilder0 = new StringBuilder();
      // Undeclared exception!
      try { 
        byteWriter0.write(stringBuilder0, 63, 63);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: 63
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(1366);
      // Undeclared exception!
      try { 
        charWriter0.write((StringBuilder) null, 1366, 1527);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.CharWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Utf8Encoder utf8Encoder0 = Utf8Encoder.me;
      ByteWriter byteWriter0 = new ByteWriter(utf8Encoder0, 0);
      StringBuilder stringBuilder0 = new StringBuilder("3GOu-2");
      // Undeclared exception!
      try { 
        byteWriter0.write(stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.ByteWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Utf8Encoder utf8Encoder0 = Utf8Encoder.me;
      ByteWriter byteWriter0 = new ByteWriter(utf8Encoder0, 0);
      MockFile mockFile0 = new MockFile(",Kjy0'RY1_&Ri*^B");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      ByteWriter byteWriter1 = byteWriter0.init(mockPrintStream0);
      // Undeclared exception!
      byteWriter1.write("", 0, 122);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Utf8Encoder utf8Encoder0 = new Utf8Encoder();
      ByteWriter byteWriter0 = new ByteWriter(utf8Encoder0, 1139);
      // Undeclared exception!
      try { 
        byteWriter0.write("", (-2316), 1139);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(1680);
      // Undeclared exception!
      try { 
        charWriter0.write("r", 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.CharWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(0);
      MockFile mockFile0 = new MockFile(")|Z");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0);
      CharWriter charWriter1 = charWriter0.init(mockFileWriter0);
      // Undeclared exception!
      charWriter1.write(")|Z");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(0);
      // Undeclared exception!
      try { 
        charWriter0.write("2\"PuM,oZ*A");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.CharWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(0);
      // Undeclared exception!
      try { 
        charWriter0.write((IWritable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.CharWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(2196);
      // Undeclared exception!
      try { 
        charWriter0.write(0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.LongWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(423);
      // Undeclared exception!
      try { 
        charWriter0.write(3640);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.IntegerWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(1);
      // Undeclared exception!
      try { 
        charWriter0.write((-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.jfinal.template.io.IntegerWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      JdkEncoder jdkEncoder0 = new JdkEncoder(charset0);
      ByteWriter byteWriter0 = new ByteWriter(jdkEncoder0, 122);
      // Undeclared exception!
      try { 
        byteWriter0.write((float) 122);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.FloatingWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Utf8Encoder utf8Encoder0 = new Utf8Encoder();
      ByteWriter byteWriter0 = new ByteWriter(utf8Encoder0, 0);
      // Undeclared exception!
      try { 
        byteWriter0.write((-1309.2F));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.jfinal.template.io.FloatingDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(64);
      // Undeclared exception!
      try { 
        charWriter0.write(1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.FloatingWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      JdkEncoder jdkEncoder0 = new JdkEncoder(charset0);
      ByteWriter byteWriter0 = new ByteWriter(jdkEncoder0, 31);
      // Undeclared exception!
      try { 
        byteWriter0.flush();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.ByteWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(1680);
      // Undeclared exception!
      try { 
        charWriter0.write((short) (-821));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.IntegerWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(1);
      MockDate mockDate0 = new MockDate(0, 0, 1, (-574), 243, 1);
      // Undeclared exception!
      try { 
        charWriter0.write((Date) mockDate0, "S<@pCH BLp4+");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'p'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(0);
      // Undeclared exception!
      try { 
        charWriter0.write(0L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.jfinal.template.io.LongWriter", e);
      }
  }
}
