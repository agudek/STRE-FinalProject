/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 13:22:19 GMT 2018
 */

package com.jfinal.template.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.io.ByteWriter;
import com.jfinal.template.io.CharWriter;
import com.jfinal.template.io.Encoder;
import com.jfinal.template.io.EncoderFactory;
import com.jfinal.template.io.JdkEncoder;
import com.jfinal.template.io.LongWriter;
import com.jfinal.template.io.Utf8Encoder;
import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedWriter;
import java.io.StringWriter;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class LongWriter_ESTest extends LongWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(65536);
      // Undeclared exception!
      try { 
        LongWriter.write(charWriter0, (long) 65536);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.LongWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EncoderFactory encoderFactory0 = new EncoderFactory();
      Encoder encoder0 = encoderFactory0.getEncoder();
      ByteWriter byteWriter0 = new ByteWriter(encoder0, 2);
      // Undeclared exception!
      try { 
        LongWriter.write(byteWriter0, 2147483647L);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("com.jfinal.template.io.LongWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = LongWriter.stringSize(100L);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(0);
      // Undeclared exception!
      try { 
        LongWriter.write(charWriter0, (long) 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.jfinal.template.io.LongWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      char[] charArray0 = new char[7];
      LongWriter.getChars(0L, 4, charArray0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '0', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(1614);
      StringWriter stringWriter0 = new StringWriter(3175);
      CharWriter charWriter1 = charWriter0.init(stringWriter0);
      LongWriter.write(charWriter1, 30517578125L);
      assertEquals("30517578125", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(1);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      BufferedWriter bufferedWriter0 = new BufferedWriter(charArrayWriter0, 1);
      CharWriter charWriter1 = charWriter0.init(bufferedWriter0);
      LongWriter.write(charWriter1, (-9223372036854775808L));
      assertSame(charWriter1, charWriter0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      JdkEncoder jdkEncoder0 = new JdkEncoder(charset0);
      ByteWriter byteWriter0 = new ByteWriter(jdkEncoder0, 1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ByteWriter byteWriter1 = byteWriter0.init(pipedOutputStream0);
      LongWriter.write(byteWriter1, (long) 1);
      assertEquals(1, pipedInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Utf8Encoder utf8Encoder0 = new Utf8Encoder();
      ByteWriter byteWriter0 = new ByteWriter(utf8Encoder0, 4);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      ByteWriter byteWriter1 = byteWriter0.init(byteArrayOutputStream0);
      LongWriter.write(byteWriter1, (-9223372036854775808L));
      assertEquals("-9223372036854775808", byteArrayOutputStream0.toString());
      assertEquals(20, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharWriter charWriter0 = new CharWriter(10);
      PipedWriter pipedWriter0 = new PipedWriter();
      CharWriter charWriter1 = charWriter0.init(pipedWriter0);
      try { 
        LongWriter.write(charWriter1, 670L);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Utf8Encoder utf8Encoder0 = Utf8Encoder.me;
      ByteWriter byteWriter0 = new ByteWriter(utf8Encoder0, 0);
      // Undeclared exception!
      try { 
        LongWriter.write(byteWriter0, (long) 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.jfinal.template.io.LongWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      JdkEncoder jdkEncoder0 = new JdkEncoder(charset0);
      ByteWriter byteWriter0 = new ByteWriter(jdkEncoder0, 1);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      pipedOutputStream0.close();
      ByteWriter byteWriter1 = byteWriter0.init(pipedOutputStream0);
      try { 
        LongWriter.write(byteWriter1, (long) 1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe closed
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        LongWriter.getChars((-346L), (-1605), (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.LongWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      char[] charArray0 = new char[7];
      // Undeclared exception!
      try { 
        LongWriter.getChars((-1097L), 2095, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2094
         //
         verifyException("com.jfinal.template.io.LongWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        LongWriter.write((CharWriter) null, (-3750763034362895539L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.LongWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Utf8Encoder utf8Encoder0 = new Utf8Encoder();
      ByteWriter byteWriter0 = new ByteWriter(utf8Encoder0, 92);
      // Undeclared exception!
      try { 
        LongWriter.write(byteWriter0, (-3352L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.LongWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LongWriter longWriter0 = new LongWriter();
  }
}
