/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 15:52:49 GMT 2018
 */

package com.jfinal.template.ext.extensionmethod;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.ext.extensionmethod.DoubleExt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class DoubleExt_ESTest extends DoubleExt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double(2089.3);
      Boolean boolean0 = doubleExt0.toBoolean(double0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double(0.0);
      Short short0 = doubleExt0.toShort(double0);
      assertEquals((short)0, (short)short0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double(2865.350048);
      Short short0 = doubleExt0.toShort(double0);
      assertEquals((short)2865, (short)short0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double(0.0);
      Long long0 = doubleExt0.toLong(double0);
      assertEquals(0L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double(1.0);
      Long long0 = doubleExt0.toLong(double0);
      assertEquals(1L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double(0.0);
      Integer integer0 = doubleExt0.toInt(double0);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double(2865.350048);
      Integer integer0 = doubleExt0.toInt(double0);
      assertEquals(2865, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double(0.0);
      Float float0 = doubleExt0.toFloat(double0);
      assertEquals(0.0F, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double(1.0);
      Float float0 = doubleExt0.toFloat(double0);
      assertEquals(1.0F, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = doubleExt0.toDouble((Double) null);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double(0.0);
      Double double1 = doubleExt0.toDouble(double0);
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double(1.0);
      Double double1 = doubleExt0.toDouble(double0);
      assertEquals(1.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double(0.0);
      Byte byte0 = doubleExt0.toByte(double0);
      assertEquals((byte)0, (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double(1.0);
      Byte byte0 = doubleExt0.toByte(double0);
      assertEquals((byte)1, (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      // Undeclared exception!
      try { 
        doubleExt0.toShort((Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.DoubleExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      // Undeclared exception!
      try { 
        doubleExt0.toLong((Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.DoubleExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      // Undeclared exception!
      try { 
        doubleExt0.toInt((Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.DoubleExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      // Undeclared exception!
      try { 
        doubleExt0.toFloat((Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.DoubleExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      // Undeclared exception!
      try { 
        doubleExt0.toByte((Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.DoubleExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      // Undeclared exception!
      try { 
        doubleExt0.toBoolean((Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.DoubleExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double((-1.6));
      Boolean boolean0 = doubleExt0.toBoolean(double0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double(0.0);
      Boolean boolean0 = doubleExt0.toBoolean(double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double((-1.6));
      Integer integer0 = doubleExt0.toInt(double0);
      assertEquals((-1), (int)integer0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double((-1.6));
      Double double1 = doubleExt0.toDouble(double0);
      assertEquals((-1.6), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double((-1.6));
      Float float0 = doubleExt0.toFloat(double0);
      assertEquals((-1.6F), (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double((-1.6));
      Long long0 = doubleExt0.toLong(double0);
      assertEquals((-1L), (long)long0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double((-1.0));
      Byte byte0 = doubleExt0.toByte(double0);
      assertEquals((byte) (-1), (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DoubleExt doubleExt0 = new DoubleExt();
      Double double0 = new Double((-1.0));
      Short short0 = doubleExt0.toShort(double0);
      assertEquals((short) (-1), (short)short0);
  }
}
