/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:01:30 GMT 2018
 */

package com.jfinal.template.ext.directive;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.EngineConfig;
import com.jfinal.template.Env;
import com.jfinal.template.expr.Sym;
import com.jfinal.template.expr.ast.Const;
import com.jfinal.template.expr.ast.Expr;
import com.jfinal.template.expr.ast.ExprList;
import com.jfinal.template.ext.directive.RenderDirective;
import com.jfinal.template.io.CharWriter;
import com.jfinal.template.stat.Location;
import com.jfinal.template.stat.Scope;
import com.jfinal.template.stat.ast.Stat;
import java.util.HashMap;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class RenderDirective_ESTest extends RenderDirective_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RenderDirective renderDirective0 = new RenderDirective();
      Env env0 = new Env((EngineConfig) null);
      CharWriter charWriter0 = new CharWriter(27);
      // Undeclared exception!
      try { 
        renderDirective0.exec(env0, (Scope) null, charWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // parent can not be null.
         //
         verifyException("com.jfinal.template.stat.Scope", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RenderDirective renderDirective0 = new RenderDirective();
      Location location0 = new Location("Y5!n,zmu*< qHT#", (-1));
      Stat stat0 = renderDirective0.setLocation(location0);
      LinkedList<Expr> linkedList0 = new LinkedList<Expr>();
      Sym sym0 = Sym.NULL_SAFE;
      Const const0 = new Const(sym0, sym0);
      linkedList0.addLast(const0);
      ExprList exprList0 = new ExprList(linkedList0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      CharWriter charWriter0 = new CharWriter(414);
      stat0.setExprList(exprList0);
      Scope scope0 = new Scope(hashMap0, hashMap0);
      // Undeclared exception!
      try { 
        renderDirective0.exec((Env) null, scope0, charWriter0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The parameter value of #render directive must be String
         // Template: \"Y5!n,zmu*< qHT#\". Line: -1
         //
         verifyException("com.jfinal.template.ext.directive.RenderDirective", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RenderDirective renderDirective0 = new RenderDirective();
      LinkedList<Expr> linkedList0 = new LinkedList<Expr>();
      Const const0 = Const.NULL;
      linkedList0.add((Expr) const0);
      linkedList0.addLast(const0);
      ExprList exprList0 = new ExprList(linkedList0);
      // Undeclared exception!
      try { 
        renderDirective0.setExprList(exprList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The 1th parameter of #render directive must be an assignment expression
         //
         verifyException("com.jfinal.template.ext.directive.RenderDirective", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RenderDirective renderDirective0 = new RenderDirective();
      ExprList exprList0 = ExprList.NULL_EXPR_LIST;
      // Undeclared exception!
      try { 
        renderDirective0.setExprList(exprList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The parameter of #render directive can not be blank
         //
         verifyException("com.jfinal.template.ext.directive.RenderDirective", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RenderDirective renderDirective0 = new RenderDirective();
      LinkedList<Expr> linkedList0 = new LinkedList<Expr>();
      Sym sym0 = Sym.NULL_SAFE;
      Const const0 = new Const(sym0, sym0);
      linkedList0.addLast(const0);
      ExprList exprList0 = new ExprList(linkedList0);
      // Undeclared exception!
      try { 
        renderDirective0.setExprList(exprList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.directive.RenderDirective", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RenderDirective renderDirective0 = new RenderDirective();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Scope scope0 = new Scope(hashMap0, hashMap0);
      CharWriter charWriter0 = new CharWriter(1454);
      // Undeclared exception!
      try { 
        renderDirective0.exec((Env) null, scope0, charWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.directive.RenderDirective", e);
      }
  }
}
