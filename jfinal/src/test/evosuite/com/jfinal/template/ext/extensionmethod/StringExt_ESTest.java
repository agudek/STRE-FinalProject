/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 13:41:14 GMT 2018
 */

package com.jfinal.template.ext.extensionmethod;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.ext.extensionmethod.StringExt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class StringExt_ESTest extends StringExt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Short short0 = stringExt0.toShort("0");
      assertEquals((short)0, (short)short0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Long long0 = stringExt0.toLong("0");
      assertEquals(0L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Integer integer0 = stringExt0.toInt("0");
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Integer integer0 = stringExt0.toInt("1");
      assertEquals(1, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Float float0 = stringExt0.toFloat("0");
      assertEquals(0.0F, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Double double0 = stringExt0.toDouble("1");
      assertEquals(1.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Byte byte0 = stringExt0.toByte("0");
      assertEquals((byte)0, (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Byte byte0 = stringExt0.toByte("1");
      assertEquals((byte)1, (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      // Undeclared exception!
      try { 
        stringExt0.toShort("#^6DtOBcDWG[o'},Iv6");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"#^6DtOBcDWG[o'},Iv6\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      // Undeclared exception!
      try { 
        stringExt0.toLong("-O#@5oMsC");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"-O#@5oMsC\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      // Undeclared exception!
      try { 
        stringExt0.toFloat("com.jfinal.template.ext.extensionmethod.StringExt");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      // Undeclared exception!
      try { 
        stringExt0.toDouble("q)o*b");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Byte byte0 = stringExt0.toByte("");
      assertNull(byte0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      // Undeclared exception!
      try { 
        stringExt0.toByte("true");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"true\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Short short0 = stringExt0.toShort("");
      assertNull(short0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Short short0 = stringExt0.toShort("1");
      assertEquals((short)1, (short)short0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Double double0 = stringExt0.toDouble("");
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Double double0 = stringExt0.toDouble("0");
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Float float0 = stringExt0.toFloat("");
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Float float0 = stringExt0.toFloat("1");
      assertEquals(1.0F, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Long long0 = stringExt0.toLong("");
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Long long0 = stringExt0.toLong("1");
      assertEquals(1L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Integer integer0 = stringExt0.toInt("");
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      // Undeclared exception!
      try { 
        stringExt0.toInt("k6D3=6PV");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"k6D3=6PV\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Boolean boolean0 = stringExt0.toBoolean("0");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Boolean boolean0 = stringExt0.toBoolean("false");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Boolean boolean0 = stringExt0.toBoolean("1");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Boolean boolean0 = stringExt0.toBoolean("true");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      Boolean boolean0 = stringExt0.toBoolean("");
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      StringExt stringExt0 = new StringExt();
      // Undeclared exception!
      try { 
        stringExt0.toBoolean("Q':h(wTY+[mB");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can not parse to boolean type of value: \"Q':h(wTY+[mB\"
         //
         verifyException("com.jfinal.template.ext.extensionmethod.StringExt", e);
      }
  }
}
