/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 17:49:18 GMT 2018
 */

package com.jfinal.template.ext.directive;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.EngineConfig;
import com.jfinal.template.Env;
import com.jfinal.template.expr.ast.Expr;
import com.jfinal.template.ext.directive.RandomDirective;
import com.jfinal.template.io.ByteWriter;
import com.jfinal.template.io.CharWriter;
import com.jfinal.template.io.Utf8Encoder;
import com.jfinal.template.stat.Scope;
import com.jfinal.template.stat.ast.Stat;
import java.io.ByteArrayOutputStream;
import java.io.PipedWriter;
import java.util.HashMap;
import java.util.LinkedHashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class RandomDirective_ESTest extends RandomDirective_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RandomDirective randomDirective0 = new RandomDirective();
      Env env0 = new Env((EngineConfig) null);
      HashMap<Stat, Expr> hashMap0 = new HashMap<Stat, Expr>();
      LinkedHashMap<String, Object> linkedHashMap0 = new LinkedHashMap<String, Object>();
      Scope scope0 = new Scope(hashMap0, linkedHashMap0);
      Utf8Encoder utf8Encoder0 = Utf8Encoder.me;
      ByteWriter byteWriter0 = new ByteWriter(utf8Encoder0, 725);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(725);
      ByteWriter byteWriter1 = byteWriter0.init(byteArrayOutputStream0);
      randomDirective0.exec(env0, scope0, byteWriter1);
      assertSame(byteWriter0, byteWriter1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RandomDirective randomDirective0 = new RandomDirective();
      Env env0 = new Env((EngineConfig) null);
      LinkedHashMap<Object, Stat> linkedHashMap0 = new LinkedHashMap<Object, Stat>();
      LinkedHashMap<String, Object> linkedHashMap1 = new LinkedHashMap<String, Object>();
      Scope scope0 = new Scope(linkedHashMap0, linkedHashMap1);
      CharWriter charWriter0 = new CharWriter(1790);
      PipedWriter pipedWriter0 = new PipedWriter();
      CharWriter charWriter1 = charWriter0.init(pipedWriter0);
      // Undeclared exception!
      try { 
        randomDirective0.exec(env0, scope0, charWriter1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Pipe not connected
         //
         verifyException("com.jfinal.template.ext.directive.RandomDirective", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RandomDirective randomDirective0 = new RandomDirective();
      LinkedHashMap<Object, Stat> linkedHashMap0 = new LinkedHashMap<Object, Stat>();
      LinkedHashMap<String, Object> linkedHashMap1 = new LinkedHashMap<String, Object>();
      Scope scope0 = new Scope(linkedHashMap0, linkedHashMap1);
      CharWriter charWriter0 = new CharWriter(0);
      // Undeclared exception!
      try { 
        randomDirective0.exec((Env) null, scope0, charWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.jfinal.template.io.IntegerWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RandomDirective randomDirective0 = new RandomDirective();
      Env env0 = new Env((EngineConfig) null);
      LinkedHashMap<Object, Stat> linkedHashMap0 = new LinkedHashMap<Object, Stat>();
      LinkedHashMap<String, Object> linkedHashMap1 = new LinkedHashMap<String, Object>();
      Scope scope0 = new Scope(linkedHashMap0, linkedHashMap1);
      CharWriter charWriter0 = new CharWriter(1790);
      // Undeclared exception!
      try { 
        randomDirective0.exec(env0, scope0, charWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.io.IntegerWriter", e);
      }
  }
}
