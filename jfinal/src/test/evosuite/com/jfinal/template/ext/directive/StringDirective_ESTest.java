/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:22:05 GMT 2018
 */

package com.jfinal.template.ext.directive;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.Env;
import com.jfinal.template.expr.ast.Const;
import com.jfinal.template.expr.ast.Expr;
import com.jfinal.template.expr.ast.ExprList;
import com.jfinal.template.expr.ast.Id;
import com.jfinal.template.ext.directive.StringDirective;
import com.jfinal.template.io.CharWriter;
import com.jfinal.template.stat.Scope;
import com.jfinal.template.stat.ast.NullStat;
import java.util.HashMap;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class StringDirective_ESTest extends StringDirective_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StringDirective stringDirective0 = new StringDirective();
      NullStat nullStat0 = NullStat.me;
      stringDirective0.setStat(nullStat0);
      HashMap<Integer, Id> hashMap0 = new HashMap<Integer, Id>();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      Scope scope0 = new Scope(hashMap0, hashMap1);
      CharWriter charWriter0 = new CharWriter(64);
      stringDirective0.exec((Env) null, scope0, charWriter0);
      assertTrue(stringDirective0.hasEnd());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringDirective stringDirective0 = new StringDirective();
      // Undeclared exception!
      try { 
        stringDirective0.setExprList((ExprList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.directive.StringDirective", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringDirective stringDirective0 = new StringDirective();
      HashMap<Const, Const> hashMap0 = new HashMap<Const, Const>();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      Scope scope0 = new Scope(hashMap0, hashMap1);
      CharWriter charWriter0 = new CharWriter(353);
      // Undeclared exception!
      try { 
        stringDirective0.exec((Env) null, scope0, charWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.directive.StringDirective", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringDirective stringDirective0 = new StringDirective();
      NullStat nullStat0 = NullStat.me;
      stringDirective0.setStat(nullStat0);
      CharWriter charWriter0 = new CharWriter(38);
      // Undeclared exception!
      try { 
        stringDirective0.exec((Env) null, (Scope) null, charWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.directive.StringDirective", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringDirective stringDirective0 = new StringDirective();
      LinkedList<Expr> linkedList0 = new LinkedList<Expr>();
      Id id0 = new Id(":9|ae'U?~9Y.@y");
      linkedList0.add((Expr) id0);
      Const const0 = Const.NULL;
      linkedList0.add((Expr) const0);
      ExprList exprList0 = new ExprList(linkedList0);
      // Undeclared exception!
      try { 
        stringDirective0.setExprList(exprList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // #string sencond parameter must be boolean
         //
         verifyException("com.jfinal.template.ext.directive.StringDirective", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StringDirective stringDirective0 = new StringDirective();
      LinkedList<Expr> linkedList0 = new LinkedList<Expr>();
      Id id0 = new Id(":9|ae'U?~9Y.@y");
      linkedList0.add((Expr) id0);
      Const const0 = Const.TRUE;
      linkedList0.add((Expr) const0);
      ExprList exprList0 = new ExprList(linkedList0);
      stringDirective0.setExprList(exprList0);
      assertTrue(stringDirective0.hasEnd());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringDirective stringDirective0 = new StringDirective();
      LinkedList<Expr> linkedList0 = new LinkedList<Expr>();
      Id id0 = new Id("m8 `-;a&9A%\"u_Jpnk_");
      linkedList0.addFirst(id0);
      linkedList0.add((Expr) id0);
      ExprList exprList0 = new ExprList(linkedList0);
      stringDirective0.setExprList(exprList0);
      assertTrue(stringDirective0.hasEnd());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringDirective stringDirective0 = new StringDirective();
      ExprList exprList0 = ExprList.NULL_EXPR_LIST;
      LinkedList<Expr> linkedList0 = new LinkedList<Expr>();
      linkedList0.add((Expr) exprList0);
      ExprList exprList1 = new ExprList(linkedList0);
      // Undeclared exception!
      try { 
        stringDirective0.setExprList(exprList1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // #string first parameter must be identifier
         //
         verifyException("com.jfinal.template.ext.directive.StringDirective", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringDirective stringDirective0 = new StringDirective();
      LinkedList<Expr> linkedList0 = new LinkedList<Expr>();
      Id id0 = new Id("m8 `-;a&9A%\"u_Jpnk_");
      linkedList0.addFirst(id0);
      linkedList0.offer(id0);
      linkedList0.add((Expr) id0);
      ExprList exprList0 = new ExprList(linkedList0);
      // Undeclared exception!
      try { 
        stringDirective0.setExprList(exprList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // wrong number of #string directive parameter, two parameters allowed at most
         //
         verifyException("com.jfinal.template.ext.directive.StringDirective", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExprList exprList0 = ExprList.NULL_EXPR_LIST;
      StringDirective stringDirective0 = new StringDirective();
      // Undeclared exception!
      try { 
        stringDirective0.setExprList(exprList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // #string directive parameter cant not be null
         //
         verifyException("com.jfinal.template.ext.directive.StringDirective", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringDirective stringDirective0 = new StringDirective();
      LinkedList<Expr> linkedList0 = new LinkedList<Expr>();
      Id id0 = new Id("m8 `-;a&9A%\"u_Jpnk_");
      linkedList0.addFirst(id0);
      ExprList exprList0 = new ExprList(linkedList0);
      stringDirective0.setExprList(exprList0);
      assertTrue(stringDirective0.hasEnd());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringDirective stringDirective0 = new StringDirective();
      boolean boolean0 = stringDirective0.hasEnd();
      assertTrue(boolean0);
  }
}
