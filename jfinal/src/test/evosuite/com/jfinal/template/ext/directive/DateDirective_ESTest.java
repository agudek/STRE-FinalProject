/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:05:44 GMT 2018
 */

package com.jfinal.template.ext.directive;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.Env;
import com.jfinal.template.expr.ast.Const;
import com.jfinal.template.expr.ast.Expr;
import com.jfinal.template.expr.ast.ExprList;
import com.jfinal.template.ext.directive.DateDirective;
import com.jfinal.template.io.CharWriter;
import com.jfinal.template.io.Writer;
import com.jfinal.template.stat.Scope;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class DateDirective_ESTest extends DateDirective_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateDirective dateDirective0 = new DateDirective();
      // Undeclared exception!
      try { 
        dateDirective0.setExprList((ExprList) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.directive.DateDirective", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DateDirective dateDirective0 = new DateDirective();
      LinkedList<Expr> linkedList0 = new LinkedList<Expr>();
      Const const0 = Const.TRUE;
      linkedList0.add((Expr) const0);
      linkedList0.add((Expr) const0);
      ExprList exprList0 = new ExprList(linkedList0);
      dateDirective0.setExprList(exprList0);
      // Undeclared exception!
      try { 
        dateDirective0.exec((Env) null, (Scope) null, (Writer) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // The sencond parameter datePattern of #date directive must be String
         //
         verifyException("com.jfinal.template.ext.directive.DateDirective", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DateDirective dateDirective0 = new DateDirective();
      LinkedList<Expr> linkedList0 = new LinkedList<Expr>();
      Const const0 = Const.TRUE;
      linkedList0.add((Expr) const0);
      ExprList exprList0 = new ExprList(linkedList0);
      dateDirective0.setExprList(exprList0);
      // Undeclared exception!
      try { 
        dateDirective0.exec((Env) null, (Scope) null, (Writer) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Boolean cannot be cast to java.util.Date
         //
         verifyException("com.jfinal.template.ext.directive.DateDirective", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DateDirective dateDirective0 = new DateDirective();
      ExprList exprList0 = ExprList.NULL_EXPR_LIST;
      LinkedHashMap<Expr, Date> linkedHashMap0 = new LinkedHashMap<Expr, Date>();
      LinkedList<Expr> linkedList0 = new LinkedList<Expr>();
      linkedList0.add((Expr) exprList0);
      ExprList exprList1 = new ExprList(linkedList0);
      dateDirective0.setExprList(exprList1);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Scope scope0 = new Scope(linkedHashMap0, hashMap0);
      CharWriter charWriter0 = new CharWriter(29);
      dateDirective0.exec((Env) null, scope0, charWriter0);
      assertFalse(dateDirective0.hasEnd());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DateDirective dateDirective0 = new DateDirective();
      ExprList exprList0 = ExprList.NULL_EXPR_LIST;
      LinkedList<Expr> linkedList0 = new LinkedList<Expr>();
      linkedList0.add((Expr) exprList0);
      linkedList0.add((Expr) exprList0);
      ExprList exprList1 = new ExprList(linkedList0);
      dateDirective0.setExprList(exprList1);
      HashMap<Object, Date> hashMap0 = new HashMap<Object, Date>();
      LinkedHashMap<String, Object> linkedHashMap0 = new LinkedHashMap<String, Object>();
      Scope scope0 = new Scope(hashMap0, linkedHashMap0);
      dateDirective0.exec((Env) null, scope0, (Writer) null);
      assertFalse(dateDirective0.hasEnd());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ExprList exprList0 = ExprList.NULL_EXPR_LIST;
      LinkedList<Expr> linkedList0 = new LinkedList<Expr>();
      linkedList0.add((Expr) exprList0);
      linkedList0.add((Expr) exprList0);
      linkedList0.add((Expr) exprList0);
      ExprList exprList1 = new ExprList(linkedList0);
      DateDirective dateDirective0 = new DateDirective();
      // Undeclared exception!
      try { 
        dateDirective0.setExprList(exprList1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Wrong number parameter of #date directive, two parameters allowed at most
         //
         verifyException("com.jfinal.template.ext.directive.DateDirective", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DateDirective dateDirective0 = new DateDirective();
      ExprList exprList0 = ExprList.NULL_EXPR_LIST;
      dateDirective0.setExprList(exprList0);
      assertFalse(dateDirective0.hasEnd());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DateDirective dateDirective0 = new DateDirective();
      // Undeclared exception!
      try { 
        dateDirective0.exec((Env) null, (Scope) null, (Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.directive.DateDirective", e);
      }
  }
}
