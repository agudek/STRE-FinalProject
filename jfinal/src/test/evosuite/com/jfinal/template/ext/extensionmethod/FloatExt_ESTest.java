/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 15:54:50 GMT 2018
 */

package com.jfinal.template.ext.extensionmethod;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.ext.extensionmethod.FloatExt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class FloatExt_ESTest extends FloatExt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float((-1.0));
      Boolean boolean0 = floatExt0.toBoolean(float0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float(0.558F);
      Short short0 = floatExt0.toShort(float0);
      assertEquals((short)0, (short)short0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float(101.7744378);
      Short short0 = floatExt0.toShort(float0);
      assertEquals((short)101, (short)short0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float(0.0F);
      Long long0 = floatExt0.toLong(float0);
      assertEquals(0L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float(1805.006F);
      Long long0 = floatExt0.toLong(float0);
      assertEquals(1805L, (long)long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float(0.0);
      Integer integer0 = floatExt0.toInt(float0);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float(1.5132116F);
      Integer integer0 = floatExt0.toInt(float0);
      assertEquals(1, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = floatExt0.toFloat((Float) null);
      assertNull(float0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float(0.0F);
      Float float1 = floatExt0.toFloat(float0);
      assertEquals(0.0F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float(1805.006F);
      Float float1 = floatExt0.toFloat(float0);
      assertEquals(1805.006F, (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float(0.0F);
      Double double0 = floatExt0.toDouble(float0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float(1805.006F);
      Double double0 = floatExt0.toDouble(float0);
      assertEquals(1805.0059814453125, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float(0.0F);
      Byte byte0 = floatExt0.toByte(float0);
      assertEquals((byte)0, (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float(1805.006F);
      Byte byte0 = floatExt0.toByte(float0);
      assertEquals((byte)13, (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      // Undeclared exception!
      try { 
        floatExt0.toShort((Float) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.FloatExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      // Undeclared exception!
      try { 
        floatExt0.toLong((Float) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.FloatExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      // Undeclared exception!
      try { 
        floatExt0.toInt((Float) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.FloatExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      // Undeclared exception!
      try { 
        floatExt0.toDouble((Float) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.FloatExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      // Undeclared exception!
      try { 
        floatExt0.toByte((Float) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.FloatExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      // Undeclared exception!
      try { 
        floatExt0.toBoolean((Float) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.FloatExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float(1805.006F);
      Boolean boolean0 = floatExt0.toBoolean(float0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float(0.0F);
      Boolean boolean0 = floatExt0.toBoolean(float0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float((-4638.95F));
      Long long0 = floatExt0.toLong(float0);
      assertEquals((-4638L), (long)long0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float((-4638.95F));
      Byte byte0 = floatExt0.toByte(float0);
      assertEquals((byte) (-30), (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float((-4638.95F));
      Short short0 = floatExt0.toShort(float0);
      assertEquals((short) (-4638), (short)short0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float((-4638.95F));
      Float float1 = floatExt0.toFloat(float0);
      assertEquals((-4638.95F), (float)float1, 0.01F);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float((-4638.95F));
      Double double0 = floatExt0.toDouble(float0);
      assertEquals((-4638.9501953125), (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FloatExt floatExt0 = new FloatExt();
      Float float0 = new Float((-4638.95F));
      Integer integer0 = floatExt0.toInt(float0);
      assertEquals((-4638), (int)integer0);
  }
}
