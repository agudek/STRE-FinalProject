/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 15:43:01 GMT 2018
 */

package com.jfinal.template.ext.extensionmethod;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.ext.extensionmethod.LongExt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class LongExt_ESTest extends LongExt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long(3262L);
      Boolean boolean0 = longExt0.toBoolean(long0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long(2920L);
      Short short0 = longExt0.toShort(long0);
      assertEquals((short)2920, (short)short0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long((-1731L));
      Short short0 = longExt0.toShort(long0);
      assertEquals((short) (-1731), (short)short0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long((-611L));
      Short short0 = longExt0.toShort(long0);
      assertEquals((short) (-611), (short)short0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = longExt0.toLong((Long) null);
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long(1880L);
      Long long1 = longExt0.toLong(long0);
      assertEquals(1880L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long((-1304L));
      Long long1 = longExt0.toLong(long0);
      assertEquals((-1304L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long((-411L));
      Integer integer0 = longExt0.toInt(long0);
      assertEquals((-411), (int)integer0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long(1938L);
      Integer integer0 = longExt0.toInt(long0);
      assertEquals(1938, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long(0L);
      Float float0 = longExt0.toFloat(long0);
      assertEquals(0.0F, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long(1L);
      Float float0 = longExt0.toFloat(long0);
      assertEquals(1.0F, (float)float0, 0.01F);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long((-411L));
      Double double0 = longExt0.toDouble(long0);
      assertEquals((-411.0), (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long(0L);
      Double double0 = longExt0.toDouble(long0);
      assertEquals(0.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long(842L);
      Double double0 = longExt0.toDouble(long0);
      assertEquals(842.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long(1L);
      Byte byte0 = longExt0.toByte(long0);
      assertEquals((byte)1, (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long(506L);
      Byte byte0 = longExt0.toByte(long0);
      assertEquals((byte) (-6), (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      // Undeclared exception!
      try { 
        longExt0.toShort((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.LongExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      // Undeclared exception!
      try { 
        longExt0.toInt((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.LongExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      // Undeclared exception!
      try { 
        longExt0.toFloat((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.LongExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      // Undeclared exception!
      try { 
        longExt0.toDouble((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.LongExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      // Undeclared exception!
      try { 
        longExt0.toByte((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.LongExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      // Undeclared exception!
      try { 
        longExt0.toBoolean((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.ext.extensionmethod.LongExt", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long((-1304L));
      Boolean boolean0 = longExt0.toBoolean(long0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long(0L);
      Boolean boolean0 = longExt0.toBoolean(long0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long(3262L);
      Double double0 = longExt0.toDouble(long0);
      assertEquals(3262.0, (double)double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long(0L);
      Long long1 = longExt0.toLong(long0);
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long(0L);
      Byte byte0 = longExt0.toByte(long0);
      assertEquals((byte)0, (byte)byte0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long(0L);
      Short short0 = longExt0.toShort(long0);
      assertEquals((short)0, (short)short0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long(0L);
      Integer integer0 = longExt0.toInt(long0);
      assertEquals(0, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LongExt longExt0 = new LongExt();
      Long long0 = new Long((-1304L));
      Float float0 = longExt0.toFloat(long0);
      assertEquals((-1304.0F), (float)float0, 0.01F);
  }
}
