/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:59:10 GMT 2018
 */

package com.jfinal.template.stat;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.stat.TextToken;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class TextToken_ESTest extends TextToken_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(5196);
      StringBuilder stringBuilder0 = new StringBuilder(charBuffer0);
      TextToken textToken0 = new TextToken(stringBuilder0, 1426);
      boolean boolean0 = textToken0.deleteBlankTails();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      TextToken textToken0 = new TextToken(stringBuilder0, 10);
      stringBuilder0.appendCodePoint(10);
      textToken0.append(stringBuilder0);
      boolean boolean0 = textToken0.deleteBlankTails();
      assertEquals("\n\n", textToken0.value());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      TextToken textToken0 = new TextToken(stringBuilder0, 10);
      stringBuilder0.appendCodePoint(10);
      String string0 = textToken0.value();
      assertEquals("\n", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      TextToken textToken0 = new TextToken(stringBuilder0, 10);
      stringBuilder0.appendCodePoint(10);
      String string0 = textToken0.toString();
      assertEquals("\n", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TextToken textToken0 = new TextToken((StringBuilder) null, (-3024));
      StringBuilder stringBuilder0 = textToken0.getContent();
      assertNull(stringBuilder0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TextToken textToken0 = new TextToken((StringBuilder) null, 255);
      // Undeclared exception!
      try { 
        textToken0.value();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.stat.TextToken", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TextToken textToken0 = new TextToken((StringBuilder) null, 0);
      // Undeclared exception!
      try { 
        textToken0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.stat.TextToken", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TextToken textToken0 = new TextToken((StringBuilder) null, (-573));
      // Undeclared exception!
      try { 
        textToken0.print();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.stat.TextToken", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TextToken textToken0 = new TextToken((StringBuilder) null, 0);
      // Undeclared exception!
      try { 
        textToken0.deleteBlankTails();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.stat.TextToken", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      TextToken textToken0 = new TextToken((StringBuilder) null, 10);
      // Undeclared exception!
      try { 
        textToken0.append(stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.stat.TextToken", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.append('e');
      TextToken textToken0 = new TextToken(stringBuilder1, 9);
      boolean boolean0 = textToken0.deleteBlankTails();
      assertEquals("e", stringBuilder0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.appendCodePoint(9);
      TextToken textToken0 = new TextToken(stringBuilder1, 9);
      boolean boolean0 = textToken0.deleteBlankTails();
      assertEquals("", textToken0.toString());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TextToken textToken0 = new TextToken((StringBuilder) null, 0);
      textToken0.append((StringBuilder) null);
      assertEquals(0, textToken0.getRow());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      TextToken textToken0 = new TextToken(stringBuilder0, 10);
      textToken0.print();
      assertEquals("", textToken0.value());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      TextToken textToken0 = new TextToken(stringBuilder0, 10);
      String string0 = textToken0.value();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      TextToken textToken0 = new TextToken(stringBuilder0, 10);
      String string0 = textToken0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringBuilder stringBuilder0 = new StringBuilder();
      TextToken textToken0 = new TextToken(stringBuilder0, 0);
      StringBuilder stringBuilder1 = textToken0.getContent();
      assertEquals("", stringBuilder1.toString());
  }
}
