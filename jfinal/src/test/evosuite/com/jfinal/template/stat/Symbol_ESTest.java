/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 17:45:31 GMT 2018
 */

package com.jfinal.template.stat;

import org.junit.Test;
import static org.junit.Assert.*;
import com.jfinal.template.stat.Symbol;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class Symbol_ESTest extends Symbol_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Symbol[] symbolArray0 = Symbol.values();
      assertEquals(20, symbolArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Symbol symbol0 = Symbol.valueOf("SET_GLOBAL");
      assertEquals("setGlobal", symbol0.getName());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Symbol symbol0 = Symbol.SET;
      boolean boolean0 = symbol0.hasPara();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Symbol symbol0 = Symbol.getKeywordSym("define");
      assertEquals("define", symbol0.getName());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Symbol symbol0 = Symbol.EOF;
      boolean boolean0 = symbol0.noPara();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Symbol symbol0 = Symbol.SET_GLOBAL;
      boolean boolean0 = symbol0.noPara();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Symbol.getKeywordSym("*>3n3iP!iKF!Fmm}#|Fw");
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Symbol symbol0 = Symbol.EOF;
      String string0 = symbol0.getName();
      assertEquals("EOF", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Symbol symbol0 = Symbol.EOF;
      boolean boolean0 = symbol0.hasPara();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Symbol symbol0 = Symbol.EOF;
      String string0 = symbol0.toString();
      assertEquals("EOF", string0);
  }
}
