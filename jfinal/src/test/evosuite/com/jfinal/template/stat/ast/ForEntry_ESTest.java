/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 17:53:58 GMT 2018
 */

package com.jfinal.template.stat.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.stat.ast.ForEntry;
import java.util.AbstractMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class ForEntry_ESTest extends ForEntry_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ForEntry forEntry0 = new ForEntry();
      AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(forEntry0, forEntry0);
      forEntry0.init(abstractMap_SimpleEntry0);
      forEntry0.setValue((Object) null);
      Integer integer0 = new Integer((-2216));
      Object object0 = forEntry0.setValue(integer0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ForEntry forEntry0 = new ForEntry();
      AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(forEntry0, forEntry0);
      forEntry0.init(abstractMap_SimpleEntry0);
      forEntry0.setValue((Object) null);
      Object object0 = forEntry0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ForEntry forEntry0 = new ForEntry();
      AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, Object>((Object) null, forEntry0);
      forEntry0.init(abstractMap_SimpleImmutableEntry0);
      Object object0 = forEntry0.getValue();
      assertSame(forEntry0, object0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ForEntry forEntry0 = new ForEntry();
      AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, Object>((Object) null, forEntry0);
      forEntry0.init(abstractMap_SimpleImmutableEntry0);
      Object object0 = forEntry0.getKey();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ForEntry forEntry0 = new ForEntry();
      AbstractMap.SimpleImmutableEntry<Object, Object> abstractMap_SimpleImmutableEntry0 = new AbstractMap.SimpleImmutableEntry<Object, Object>("", "");
      forEntry0.init(abstractMap_SimpleImmutableEntry0);
      // Undeclared exception!
      try { 
        forEntry0.setValue("");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap$SimpleImmutableEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ForEntry forEntry0 = new ForEntry();
      // Undeclared exception!
      try { 
        forEntry0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.stat.ast.ForEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ForEntry forEntry0 = new ForEntry();
      // Undeclared exception!
      try { 
        forEntry0.getKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.stat.ast.ForEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ForEntry forEntry0 = new ForEntry();
      // Undeclared exception!
      try { 
        forEntry0.setValue((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.stat.ast.ForEntry", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ForEntry forEntry0 = new ForEntry();
      AbstractMap.SimpleEntry<Object, Object> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<Object, Object>(forEntry0, forEntry0);
      forEntry0.init(abstractMap_SimpleEntry0);
      Object object0 = forEntry0.getKey();
      assertSame(object0, forEntry0);
  }
}
