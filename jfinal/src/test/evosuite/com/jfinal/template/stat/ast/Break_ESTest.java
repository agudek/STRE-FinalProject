/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 18:13:43 GMT 2018
 */

package com.jfinal.template.stat.ast;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.template.Directive;
import com.jfinal.template.Env;
import com.jfinal.template.io.CharWriter;
import com.jfinal.template.io.Writer;
import com.jfinal.template.stat.Scope;
import com.jfinal.template.stat.ast.Break;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class Break_ESTest extends Break_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Break break0 = Break.me;
      HashMap<Directive, String> hashMap0 = new HashMap<Directive, String>();
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>();
      Scope scope0 = new Scope(hashMap0, hashMap1);
      break0.exec((Env) null, scope0, (Writer) null);
      assertFalse(break0.hasEnd());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Break break0 = Break.me;
      CharWriter charWriter0 = new CharWriter(16);
      // Undeclared exception!
      try { 
        break0.me.exec((Env) null, (Scope) null, charWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.template.stat.ast.Break", e);
      }
  }
}
