/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Apr 18 12:38:12 GMT 2018
 */

package com.jfinal.plugin.redis;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class RedisPlugin_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.jfinal.plugin.redis.RedisPlugin"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/agudek/Documents/STRE/final_project/jfinal"); 
    java.lang.System.setProperty("user.home", "/home/agudek"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "agudek"); 
    java.lang.System.setProperty("user.timezone", "Europe/Amsterdam"); 
    java.lang.System.setProperty("sun.management.compiler", "HotSpot 64-Bit Tiered Compilers"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(RedisPlugin_ESTest_scaffolding.class.getClassLoader() ,
      "redis.clients.jedis.TransactionBlock",
      "org.apache.commons.pool2.impl.EvictionTimer$PrivilegedGetTccl",
      "com.jfinal.plugin.redis.Cache",
      "redis.clients.jedis.BasicRedisPipeline",
      "redis.clients.jedis.Client",
      "org.apache.commons.pool2.PooledObject",
      "org.apache.commons.pool2.impl.BaseObjectPoolConfig",
      "com.jfinal.plugin.redis.serializer.JdkSerializer",
      "redis.clients.jedis.PipelineBlock",
      "redis.clients.jedis.BitPosParams",
      "redis.clients.jedis.BinaryRedisPipeline",
      "redis.clients.jedis.BinaryClient",
      "redis.clients.jedis.RedisPipeline",
      "redis.clients.jedis.AdvancedBinaryJedisCommands",
      "org.apache.commons.pool2.impl.InterruptibleReentrantLock",
      "redis.clients.util.JedisURIHelper",
      "org.apache.commons.pool2.UsageTracking",
      "org.apache.commons.pool2.impl.EvictionTimer$PrivilegedNewEvictionTimer",
      "redis.clients.jedis.JedisPool",
      "redis.clients.jedis.ClusterPipeline",
      "redis.clients.jedis.MultiKeyBinaryCommands",
      "redis.clients.jedis.exceptions.JedisConnectionException",
      "com.jfinal.plugin.redis.Redis",
      "redis.clients.jedis.BitOP",
      "redis.clients.jedis.JedisPubSub",
      "redis.clients.jedis.JedisCommands",
      "redis.clients.jedis.BinaryJedisCommands",
      "com.jfinal.plugin.redis.serializer.FstSerializer",
      "redis.clients.jedis.Queable",
      "redis.clients.jedis.SortingParams",
      "redis.clients.jedis.BasicCommands",
      "redis.clients.jedis.JedisFactory",
      "org.apache.commons.pool2.impl.GenericObjectPool",
      "redis.clients.jedis.AdvancedJedisCommands",
      "redis.clients.jedis.JedisMonitor",
      "com.jfinal.plugin.redis.IKeyNamingPolicy$1",
      "redis.clients.jedis.BinaryScriptingCommands",
      "org.apache.commons.pool2.impl.EvictionTimer",
      "redis.clients.jedis.MultiKeyPipelineBase",
      "org.apache.commons.pool2.impl.LinkedBlockingDeque",
      "org.apache.commons.pool2.impl.GenericObjectPoolMXBean",
      "org.apache.commons.pool2.impl.EvictionPolicy",
      "redis.clients.jedis.ScanResult",
      "redis.clients.jedis.exceptions.InvalidURIException",
      "redis.clients.util.ShardInfo",
      "com.jfinal.plugin.redis.serializer.ISerializer",
      "redis.clients.jedis.ClusterCommands",
      "redis.clients.jedis.JedisCluster$Reset",
      "com.jfinal.kit.StrKit",
      "org.apache.commons.pool2.PooledObjectFactory",
      "org.apache.commons.pool2.impl.AbandonedConfig",
      "redis.clients.jedis.ProtocolCommand",
      "redis.clients.jedis.MultiKeyBinaryRedisPipeline",
      "org.apache.commons.pool2.impl.DefaultEvictionPolicy",
      "redis.clients.jedis.PipelineBase",
      "com.jfinal.plugin.redis.ICallback",
      "redis.clients.jedis.DebugParams",
      "redis.clients.jedis.exceptions.JedisException",
      "org.apache.commons.pool2.ObjectPool",
      "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "redis.clients.jedis.Pipeline",
      "org.apache.commons.pool2.impl.BaseGenericObjectPool$Evictor",
      "org.apache.commons.pool2.impl.DefaultPooledObjectInfoMBean",
      "com.jfinal.plugin.IPlugin",
      "org.apache.commons.pool2.impl.EvictionTimer$PrivilegedSetTccl",
      "redis.clients.jedis.BinaryJedisPubSub",
      "redis.clients.jedis.ScanParams",
      "org.apache.commons.pool2.impl.BaseGenericObjectPool$StatsStore",
      "redis.clients.jedis.BinaryJedis",
      "redis.clients.jedis.Connection",
      "org.apache.commons.pool2.impl.BaseGenericObjectPool",
      "redis.clients.jedis.exceptions.JedisDataException",
      "redis.clients.util.Pool",
      "redis.clients.jedis.ZParams",
      "redis.clients.jedis.JedisSentinelPool",
      "com.jfinal.plugin.redis.RedisPlugin",
      "redis.clients.jedis.BinaryClient$LIST_POSITION",
      "redis.clients.jedis.Commands",
      "redis.clients.jedis.JedisShardInfo",
      "redis.clients.jedis.Jedis",
      "redis.clients.jedis.SentinelCommands",
      "redis.clients.jedis.HostAndPort",
      "org.apache.commons.pool2.impl.DefaultPooledObjectInfo",
      "redis.clients.jedis.MultiKeyCommands",
      "redis.clients.jedis.MultiKeyCommandsPipeline",
      "redis.clients.jedis.Transaction",
      "com.jfinal.plugin.redis.IKeyNamingPolicy",
      "redis.clients.jedis.JedisPoolConfig",
      "redis.clients.jedis.ScriptingCommands"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(RedisPlugin_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.jfinal.plugin.redis.RedisPlugin",
      "com.jfinal.plugin.redis.serializer.FstSerializer",
      "com.jfinal.plugin.redis.IKeyNamingPolicy$1",
      "com.jfinal.plugin.redis.IKeyNamingPolicy",
      "com.jfinal.plugin.redis.Redis",
      "org.apache.commons.pool2.impl.BaseObjectPoolConfig",
      "org.apache.commons.pool2.impl.GenericObjectPoolConfig",
      "redis.clients.jedis.JedisPoolConfig",
      "com.jfinal.kit.StrKit",
      "com.jfinal.plugin.redis.Cache",
      "redis.clients.util.Pool",
      "redis.clients.jedis.JedisPool",
      "redis.clients.jedis.JedisFactory",
      "redis.clients.jedis.HostAndPort",
      "org.apache.commons.pool2.impl.BaseGenericObjectPool",
      "org.apache.commons.pool2.impl.GenericObjectPool",
      "org.apache.commons.pool2.impl.BaseGenericObjectPool$StatsStore",
      "org.apache.commons.pool2.impl.LinkedBlockingDeque",
      "org.apache.commons.pool2.impl.InterruptibleReentrantLock",
      "org.apache.commons.pool2.impl.BaseGenericObjectPool$Evictor",
      "org.apache.commons.pool2.impl.EvictionTimer",
      "org.apache.commons.pool2.impl.EvictionTimer$PrivilegedGetTccl",
      "org.apache.commons.pool2.impl.EvictionTimer$PrivilegedSetTccl",
      "org.apache.commons.pool2.impl.EvictionTimer$PrivilegedNewEvictionTimer",
      "org.apache.commons.pool2.impl.DefaultEvictionPolicy",
      "redis.clients.util.JedisURIHelper",
      "redis.clients.jedis.exceptions.JedisException",
      "redis.clients.jedis.exceptions.InvalidURIException",
      "com.jfinal.plugin.redis.serializer.JdkSerializer",
      "redis.clients.util.SafeEncoder",
      "redis.clients.jedis.BinaryJedis",
      "redis.clients.jedis.Jedis",
      "redis.clients.jedis.BitOP",
      "org.nustaq.serialization.FSTObjectOutput$1",
      "org.nustaq.serialization.FSTObjectOutput",
      "org.nustaq.serialization.FSTConfiguration",
      "org.nustaq.serialization.FSTConfiguration$1",
      "org.nustaq.serialization.FSTConfiguration$ConfType",
      "org.nustaq.serialization.FSTClazzInfoRegistry",
      "org.nustaq.serialization.FSTSerializerRegistry$NULLSerializer",
      "org.nustaq.serialization.FSTSerializerRegistry",
      "org.nustaq.serialization.FSTClazzNameRegistry",
      "org.nustaq.serialization.util.FSTIdentity2IdMap",
      "org.nustaq.serialization.util.FSTObject2IntMap",
      "org.nustaq.serialization.FSTDefaultClassInstantiator",
      "org.nustaq.serialization.FSTConfiguration$8",
      "org.nustaq.serialization.FSTConfiguration$9",
      "org.nustaq.serialization.FSTClazzInfo$1",
      "org.nustaq.serialization.FSTClazzInfo",
      "org.nustaq.serialization.FSTClazzInfo$FSTFieldInfo",
      "org.nustaq.serialization.util.FSTUtil",
      "org.nustaq.serialization.FSTClazzInfo$2",
      "org.nustaq.serialization.FSTClazzInfo$FSTCompatibilityInfo",
      "org.nustaq.serialization.FSTBasicObjectSerializer",
      "org.nustaq.serialization.serializers.FSTClassSerializer",
      "org.nustaq.serialization.FSTSerializerRegistry$SerEntry",
      "org.nustaq.serialization.serializers.FSTStringSerializer",
      "org.nustaq.serialization.serializers.FSTBigNumberSerializers$FSTByteSerializer",
      "org.nustaq.serialization.serializers.FSTBigNumberSerializers$FSTCharSerializer",
      "org.nustaq.serialization.serializers.FSTBigNumberSerializers$FSTShortSerializer",
      "org.nustaq.serialization.serializers.FSTBigNumberSerializers$FSTFloatSerializer",
      "org.nustaq.serialization.serializers.FSTBigNumberSerializers$FSTDoubleSerializer",
      "org.nustaq.serialization.serializers.FSTDateSerializer",
      "org.nustaq.serialization.serializers.FSTStringBufferSerializer",
      "org.nustaq.serialization.serializers.FSTStringBuilderSerializer",
      "org.nustaq.serialization.serializers.FSTEnumSetSerializer",
      "org.nustaq.serialization.serializers.FSTArrayListSerializer",
      "org.nustaq.serialization.serializers.FSTCollectionSerializer",
      "org.nustaq.serialization.serializers.FSTMapSerializer",
      "org.nustaq.serialization.serializers.FSTStructSerializer",
      "org.nustaq.serialization.serializers.FSTBigIntegerSerializer",
      "org.nustaq.serialization.coders.FSTStreamEncoder",
      "org.nustaq.serialization.util.FSTOutputStream",
      "org.nustaq.serialization.FSTObjectRegistry",
      "org.nustaq.serialization.util.FSTInt2ObjectMap",
      "redis.clients.jedis.exceptions.JedisConnectionException",
      "redis.clients.util.ShardInfo",
      "redis.clients.jedis.JedisShardInfo",
      "redis.clients.jedis.Connection",
      "redis.clients.jedis.BinaryClient",
      "redis.clients.jedis.Client",
      "org.nustaq.serialization.FSTObjectInput",
      "org.nustaq.serialization.coders.FSTStreamDecoder",
      "org.nustaq.serialization.util.FSTInputStream",
      "org.springframework.core.env.PropertySource",
      "org.springframework.core.env.EnumerablePropertySource",
      "org.springframework.core.env.MapPropertySource",
      "org.springframework.core.env.PropertiesPropertySource"
    );
  }
}
