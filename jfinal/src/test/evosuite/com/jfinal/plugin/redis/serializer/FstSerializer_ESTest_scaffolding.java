/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Apr 18 14:31:22 GMT 2018
 */

package com.jfinal.plugin.redis.serializer;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class FstSerializer_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.jfinal.plugin.redis.serializer.FstSerializer"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/agudek/Documents/STRE/final_project/jfinal"); 
    java.lang.System.setProperty("user.home", "/home/agudek"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "agudek"); 
    java.lang.System.setProperty("user.timezone", "Europe/Amsterdam"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(FstSerializer_ESTest_scaffolding.class.getClassLoader() ,
      "org.nustaq.serialization.FSTObjectRegistry",
      "org.nustaq.serialization.FSTClazzInfo",
      "org.nustaq.serialization.FSTObjectInput$MyObjectStream",
      "org.nustaq.serialization.serializers.FSTBigNumberSerializers$FSTCharSerializer",
      "com.fasterxml.jackson.core.Versioned",
      "org.nustaq.serialization.FSTCrossPlatformSerialzer",
      "org.nustaq.offheap.structs.Align",
      "org.nustaq.serialization.serializers.FSTClassSerializer",
      "org.nustaq.serialization.util.FSTInt2ObjectMap",
      "org.nustaq.serialization.FSTDefaultClassInstantiator",
      "org.nustaq.serialization.serializers.FSTCollectionSerializer",
      "org.nustaq.serialization.util.FSTUtil",
      "org.nustaq.serialization.FSTBasicObjectSerializer",
      "redis.clients.util.SafeEncoder",
      "org.nustaq.serialization.FSTObjectSerializer",
      "org.nustaq.serialization.FSTClazzNameRegistry",
      "org.nustaq.serialization.util.FSTObject2IntMap",
      "com.jfinal.plugin.redis.serializer.FstSerializer",
      "org.nustaq.serialization.annotations.Conditional",
      "org.nustaq.serialization.annotations.Transient",
      "org.nustaq.serialization.FSTClazzInfo$FSTFieldInfo",
      "org.nustaq.serialization.serializers.FSTStringSerializer",
      "org.nustaq.serialization.FSTConfiguration$9$1",
      "org.nustaq.serialization.serializers.FSTBigNumberSerializers$FSTShortSerializer",
      "org.nustaq.serialization.FSTConfiguration$9$2",
      "org.nustaq.serialization.serializers.FSTMapSerializer",
      "org.objenesis.Objenesis",
      "org.nustaq.serialization.coders.FSTStreamEncoder",
      "org.nustaq.serialization.serializers.FSTBigIntegerSerializer",
      "org.nustaq.offheap.bytez.ByteSource",
      "org.nustaq.serialization.FSTConfiguration$1",
      "org.nustaq.serialization.util.FSTIdentity2IdMap",
      "org.nustaq.serialization.FSTObjectOutput",
      "com.jfinal.plugin.redis.serializer.ISerializer",
      "org.nustaq.serialization.FSTConfiguration$6",
      "org.nustaq.serialization.serializers.FSTBigNumberSerializers$FSTByteSerializer",
      "org.nustaq.serialization.FSTConfiguration$4",
      "org.nustaq.serialization.FSTConfiguration$9",
      "org.nustaq.serialization.serializers.FSTBigNumberSerializers$FSTDoubleSerializer",
      "org.nustaq.serialization.FSTConfiguration$8",
      "org.nustaq.serialization.util.FSTOutputStream",
      "org.nustaq.serialization.FSTEncoder",
      "org.nustaq.serialization.annotations.OneOf",
      "org.nustaq.offheap.structs.FSTStruct",
      "org.nustaq.serialization.FSTObjectOutput$1",
      "org.nustaq.serialization.FSTSerializerRegistry$NULLSerializer",
      "org.nustaq.serialization.FSTObjectOutput$2",
      "org.nustaq.serialization.FSTClazzInfoRegistry",
      "redis.clients.jedis.exceptions.JedisException",
      "org.nustaq.serialization.FSTSerializerRegistry",
      "org.nustaq.offheap.bytez.Bytez",
      "org.nustaq.serialization.serializers.FSTBigNumberSerializers$FSTFloatSerializer",
      "org.nustaq.serialization.serializers.FSTStructSerializer",
      "org.nustaq.serialization.FSTSerializerRegistryDelegate",
      "org.nustaq.serialization.annotations.Flat",
      "org.nustaq.serialization.serializers.FSTArrayListSerializer",
      "org.nustaq.serialization.coders.FSTStreamDecoder",
      "org.nustaq.serialization.serializers.FSTStringBufferSerializer",
      "org.nustaq.serialization.util.FSTInputStream",
      "org.nustaq.serialization.FSTObjectInput$2",
      "org.nustaq.offheap.bytez.ByteSink",
      "org.nustaq.serialization.FSTDecoder",
      "org.nustaq.serialization.FSTSerializerRegistry$SerEntry",
      "org.nustaq.serialization.serializers.FSTStringBuilderSerializer",
      "org.nustaq.serialization.FSTConfiguration$StreamCoderFactory",
      "redis.clients.jedis.exceptions.JedisDataException",
      "org.nustaq.serialization.FSTConfiguration$8$1",
      "org.nustaq.serialization.FSTConfiguration$8$2",
      "org.nustaq.offheap.bytez.BasicBytez",
      "org.nustaq.serialization.FSTObjectInput",
      "com.fasterxml.jackson.core.JsonFactory",
      "org.nustaq.serialization.FSTClassInstantiator",
      "org.nustaq.serialization.annotations.Version",
      "org.nustaq.serialization.FSTClazzInfo$FSTCompatibilityInfo",
      "org.nustaq.serialization.serializers.FSTEnumSetSerializer",
      "org.nustaq.serialization.FSTConfiguration$ConfType",
      "org.nustaq.serialization.FSTConfiguration",
      "org.nustaq.serialization.FSTClazzInfo$1",
      "org.nustaq.serialization.FSTClazzInfo$2",
      "org.nustaq.serialization.annotations.Predict",
      "org.nustaq.serialization.serializers.FSTDateSerializer"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(FstSerializer_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.jfinal.plugin.redis.serializer.FstSerializer",
      "org.apache.log4j.Category",
      "org.apache.log4j.Logger",
      "com.jfinal.log.Log4jLogFactory",
      "com.jfinal.log.Log",
      "com.jfinal.log.Log4jLog",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.log4j.Priority",
      "org.apache.log4j.Level",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.ProvisionNode",
      "com.jfinal.kit.LogKit$Holder",
      "redis.clients.util.SafeEncoder",
      "org.nustaq.serialization.FSTObjectOutput$1",
      "org.nustaq.serialization.FSTObjectOutput",
      "org.nustaq.serialization.FSTConfiguration",
      "org.nustaq.serialization.FSTConfiguration$1",
      "org.nustaq.serialization.FSTConfiguration$ConfType",
      "org.nustaq.serialization.FSTClazzInfoRegistry",
      "org.nustaq.serialization.FSTSerializerRegistry$NULLSerializer",
      "org.nustaq.serialization.FSTSerializerRegistry",
      "org.nustaq.serialization.FSTClazzNameRegistry",
      "org.nustaq.serialization.util.FSTIdentity2IdMap",
      "org.nustaq.serialization.util.FSTObject2IntMap",
      "org.nustaq.serialization.FSTDefaultClassInstantiator",
      "org.nustaq.serialization.FSTConfiguration$8",
      "org.nustaq.serialization.FSTConfiguration$9",
      "org.nustaq.serialization.FSTClazzInfo$1",
      "org.nustaq.serialization.FSTClazzInfo",
      "org.nustaq.serialization.FSTClazzInfo$FSTFieldInfo",
      "org.nustaq.serialization.util.FSTUtil",
      "org.nustaq.serialization.FSTClazzInfo$2",
      "org.nustaq.serialization.FSTClazzInfo$FSTCompatibilityInfo",
      "org.nustaq.serialization.FSTBasicObjectSerializer",
      "org.nustaq.serialization.serializers.FSTClassSerializer",
      "org.nustaq.serialization.FSTSerializerRegistry$SerEntry",
      "org.nustaq.serialization.serializers.FSTStringSerializer",
      "org.nustaq.serialization.serializers.FSTBigNumberSerializers$FSTByteSerializer",
      "org.nustaq.serialization.serializers.FSTBigNumberSerializers$FSTCharSerializer",
      "org.nustaq.serialization.serializers.FSTBigNumberSerializers$FSTShortSerializer",
      "org.nustaq.serialization.serializers.FSTBigNumberSerializers$FSTFloatSerializer",
      "org.nustaq.serialization.serializers.FSTBigNumberSerializers$FSTDoubleSerializer",
      "org.nustaq.serialization.serializers.FSTDateSerializer",
      "org.nustaq.serialization.serializers.FSTStringBufferSerializer",
      "org.nustaq.serialization.serializers.FSTStringBuilderSerializer",
      "org.nustaq.serialization.serializers.FSTEnumSetSerializer",
      "org.nustaq.serialization.serializers.FSTArrayListSerializer",
      "org.nustaq.serialization.serializers.FSTCollectionSerializer",
      "org.nustaq.serialization.serializers.FSTMapSerializer",
      "org.nustaq.serialization.serializers.FSTStructSerializer",
      "org.nustaq.serialization.serializers.FSTBigIntegerSerializer",
      "org.nustaq.serialization.coders.FSTStreamEncoder",
      "org.nustaq.serialization.util.FSTOutputStream",
      "org.nustaq.serialization.FSTObjectRegistry",
      "org.nustaq.serialization.util.FSTInt2ObjectMap",
      "org.nustaq.serialization.FSTObjectInput",
      "org.nustaq.serialization.coders.FSTStreamDecoder",
      "org.nustaq.serialization.util.FSTInputStream",
      "redis.clients.jedis.exceptions.JedisException",
      "redis.clients.jedis.exceptions.JedisDataException",
      "org.nustaq.serialization.FSTObjectInput$2",
      "org.nustaq.serialization.FSTObjectInput$MyObjectStream"
    );
  }
}
