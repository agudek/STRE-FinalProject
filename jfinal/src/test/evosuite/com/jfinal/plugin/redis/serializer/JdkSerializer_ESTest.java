/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:27:34 GMT 2018
 */

package com.jfinal.plugin.redis.serializer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.plugin.redis.serializer.JdkSerializer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class JdkSerializer_ESTest extends JdkSerializer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JdkSerializer jdkSerializer0 = new JdkSerializer();
      byte[] byteArray0 = jdkSerializer0.valueToBytes("com.jfinal.plugin.redis.serializer.JdkSerializer");
      Object object0 = jdkSerializer0.valueFromBytes(byteArray0);
      assertEquals("com.jfinal.plugin.redis.serializer.JdkSerializer", object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JdkSerializer jdkSerializer0 = (JdkSerializer)JdkSerializer.me;
      byte[] byteArray0 = jdkSerializer0.keyToBytes("");
      String string0 = jdkSerializer0.keyFromBytes(byteArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JdkSerializer jdkSerializer0 = new JdkSerializer();
      byte[] byteArray0 = jdkSerializer0.valueToBytes("");
      Object object0 = jdkSerializer0.fieldFromBytes(byteArray0);
      assertEquals("", object0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JdkSerializer jdkSerializer0 = new JdkSerializer();
      // Undeclared exception!
      try { 
        jdkSerializer0.keyFromBytes((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JdkSerializer jdkSerializer0 = new JdkSerializer();
      byte[] byteArray0 = jdkSerializer0.keyToBytes("~");
      // Undeclared exception!
      try { 
        jdkSerializer0.valueFromBytes(byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.EOFException
         //
         verifyException("com.jfinal.plugin.redis.serializer.JdkSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JdkSerializer jdkSerializer0 = (JdkSerializer)JdkSerializer.me;
      Object object0 = jdkSerializer0.valueFromBytes((byte[]) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JdkSerializer jdkSerializer0 = (JdkSerializer)JdkSerializer.me;
      // Undeclared exception!
      try { 
        jdkSerializer0.valueToBytes(jdkSerializer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.NotSerializableException: com.jfinal.plugin.redis.serializer.JdkSerializer
         //
         verifyException("com.jfinal.plugin.redis.serializer.JdkSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JdkSerializer jdkSerializer0 = (JdkSerializer)JdkSerializer.me;
      byte[] byteArray0 = jdkSerializer0.keyToBytes("");
      Object object0 = jdkSerializer0.valueFromBytes(byteArray0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JdkSerializer jdkSerializer0 = new JdkSerializer();
      Object object0 = jdkSerializer0.fieldFromBytes((byte[]) null);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JdkSerializer jdkSerializer0 = new JdkSerializer();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        jdkSerializer0.fieldToBytes(object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.NotSerializableException: java.lang.Object
         //
         verifyException("com.jfinal.plugin.redis.serializer.JdkSerializer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JdkSerializer jdkSerializer0 = new JdkSerializer();
      byte[] byteArray0 = jdkSerializer0.fieldToBytes((Object) null);
      assertEquals(5, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JdkSerializer jdkSerializer0 = new JdkSerializer();
      byte[] byteArray0 = jdkSerializer0.valueToBytes((Object) null);
      String string0 = jdkSerializer0.keyFromBytes(byteArray0);
      assertEquals("\uFFFD\uFFFD\u0000\u0005p", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JdkSerializer jdkSerializer0 = new JdkSerializer();
      // Undeclared exception!
      try { 
        jdkSerializer0.keyToBytes((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // value sent to redis cannot be null
         //
         verifyException("redis.clients.util.SafeEncoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JdkSerializer jdkSerializer0 = (JdkSerializer)JdkSerializer.me;
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        jdkSerializer0.fieldFromBytes(byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.EOFException
         //
         verifyException("com.jfinal.plugin.redis.serializer.JdkSerializer", e);
      }
  }
}
