/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Apr 18 12:02:08 GMT 2018
 */

package com.jfinal.plugin.activerecord;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class Record_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.jfinal.plugin.activerecord.Record"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/agudek/Documents/STRE/final_project/jfinal"); 
    java.lang.System.setProperty("user.home", "/home/agudek"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "agudek"); 
    java.lang.System.setProperty("user.timezone", "Europe/Amsterdam"); 
    java.lang.System.setProperty("sun.management.compiler", "HotSpot 64-Bit Tiered Compilers"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Record_ESTest_scaffolding.class.getClassLoader() ,
      "com.alibaba.druid.pool.PoolableWrapper",
      "com.jfinal.plugin.activerecord.sql.SqlKit",
      "com.alibaba.druid.pool.ManagedDataSource",
      "com.alibaba.druid.pool.DruidDataSource$DestroyTask",
      "com.jfinal.plugin.activerecord.IContainerFactory",
      "com.alibaba.druid.VERSION",
      "org.apache.log4j.or.ObjectRenderer",
      "com.alibaba.druid.pool.DruidAbstractDataSource",
      "org.apache.log4j.DefaultCategoryFactory",
      "com.alibaba.druid.pool.DruidDataSourceMBean",
      "com.alibaba.druid.wall.WallProviderStatValue",
      "org.apache.log4j.or.RendererMap",
      "com.alibaba.druid.support.logging.Resources",
      "com.alibaba.druid.util.JMXUtils",
      "com.alibaba.druid.pool.DruidDataSourceStatLogger",
      "org.apache.log4j.Logger",
      "com.jfinal.plugin.activerecord.Record",
      "org.apache.log4j.Level",
      "com.alibaba.druid.pool.ValidConnectionChecker",
      "com.jfinal.plugin.activerecord.IDbProFactory",
      "com.alibaba.druid.pool.DruidAbstractDataSourceMBean",
      "com.alibaba.druid.support.logging.Log",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.Category",
      "com.alibaba.druid.util.Utils",
      "com.jfinal.plugin.activerecord.builder.KeepByteAndShortRecordBuilder",
      "com.alibaba.druid.pool.DataSourceNotAvailableException",
      "com.jfinal.json.Json",
      "com.jfinal.json.IJsonFactory",
      "org.apache.log4j.spi.RepositorySelector",
      "com.jfinal.plugin.activerecord.dialect.Dialect",
      "com.jfinal.json.JFinalJson",
      "com.alibaba.druid.proxy.jdbc.TransactionInfo",
      "com.jfinal.plugin.activerecord.cache.ICache",
      "com.alibaba.druid.stat.JdbcDataSourceStatMBean",
      "com.alibaba.druid.support.logging.LogFactory",
      "org.apache.log4j.spi.LoggerFactory",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.spi.Configurator",
      "com.jfinal.plugin.activerecord.Config",
      "com.alibaba.druid.pool.PreparedStatementHolder",
      "org.apache.log4j.or.DefaultRenderer",
      "com.alibaba.druid.pool.ExceptionSorter",
      "com.jfinal.plugin.activerecord.dialect.MysqlDialect",
      "com.alibaba.druid.proxy.jdbc.DataSourceProxy",
      "com.alibaba.druid.pool.WrapperAdapter",
      "com.jfinal.kit.JsonKit",
      "com.alibaba.druid.pool.DruidDataSourceStatValue",
      "com.jfinal.plugin.activerecord.Model",
      "org.apache.log4j.PropertyWatchdog",
      "com.alibaba.druid.TransactionTimeoutException",
      "com.alibaba.druid.pool.GetConnectionTimeoutException",
      "com.alibaba.druid.pool.DataSourceClosedException",
      "com.alibaba.druid.stat.JdbcSqlStat",
      "org.apache.log4j.spi.ThrowableRendererSupport",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.ProvisionNode",
      "org.apache.log4j.Hierarchy",
      "com.alibaba.druid.pool.DruidDataSourceStatLoggerImpl",
      "com.jfinal.plugin.activerecord.IDbProFactory$1",
      "com.jfinal.plugin.activerecord.DaoContainerFactory$DaoMap",
      "org.apache.log4j.helpers.FileWatchdog",
      "com.jfinal.json.JFinalJsonFactory",
      "com.alibaba.druid.util.TransactionInfo",
      "com.jfinal.plugin.activerecord.RecordBuilder",
      "com.alibaba.druid.stat.JdbcDataSourceStat",
      "com.jfinal.plugin.activerecord.cache.EhCache",
      "com.jfinal.plugin.activerecord.builder.KeepByteAndShortModelBuilder",
      "com.alibaba.druid.filter.Filter",
      "com.jfinal.plugin.activerecord.DaoContainerFactory$DaoSet",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "com.alibaba.druid.pool.DataSourceDisableException",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.log4j.spi.AppenderAttachable",
      "com.jfinal.plugin.activerecord.DaoContainerFactory",
      "com.jfinal.plugin.activerecord.IContainerFactory$1",
      "com.alibaba.druid.support.logging.Log4jImpl",
      "com.alibaba.druid.stat.JdbcSqlStatMBean",
      "org.apache.log4j.spi.RendererSupport",
      "com.alibaba.druid.pool.DruidPooledConnection",
      "org.apache.log4j.Priority",
      "com.jfinal.plugin.activerecord.ModelBuilder",
      "com.alibaba.druid.pool.DruidAbstractDataSource$PhysicalConnectionInfo",
      "com.jfinal.plugin.activerecord.ActiveRecordException",
      "com.alibaba.druid.pool.DruidDataSource",
      "com.alibaba.druid.pool.DruidDataSourceStatLoggerAdapter",
      "com.alibaba.druid.DruidRuntimeException",
      "com.alibaba.druid.pool.DruidConnectionHolder",
      "org.apache.log4j.spi.LoggerRepository",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.helpers.OptionConverter",
      "com.alibaba.druid.util.Histogram",
      "com.jfinal.plugin.activerecord.DbKit"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Record_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.jfinal.plugin.activerecord.Record",
      "com.jfinal.plugin.activerecord.IContainerFactory$1",
      "com.jfinal.plugin.activerecord.IContainerFactory",
      "com.jfinal.plugin.activerecord.Config",
      "com.jfinal.plugin.activerecord.IDbProFactory$1",
      "com.jfinal.plugin.activerecord.IDbProFactory",
      "com.jfinal.plugin.activerecord.dialect.Dialect",
      "com.jfinal.plugin.activerecord.dialect.MysqlDialect",
      "com.jfinal.plugin.activerecord.ModelBuilder",
      "com.jfinal.plugin.activerecord.RecordBuilder",
      "com.jfinal.plugin.activerecord.cache.EhCache",
      "com.jfinal.plugin.activerecord.DbKit",
      "com.jfinal.json.JFinalJsonFactory",
      "com.jfinal.json.Json",
      "com.jfinal.kit.JsonKit",
      "com.jfinal.json.JFinalJson",
      "com.mchange.v2.c3p0.impl.AbstractIdentityTokenized",
      "com.mchange.v2.c3p0.impl.IdentityTokenResolvable",
      "com.mchange.v2.log.MLogConfig",
      "com.mchange.v2.cfg.MLogConfigSource",
      "com.mchange.v2.cfg.ConfigUtils",
      "com.mchange.v2.cfg.DelayedLogItem",
      "com.mchange.v2.cfg.DelayedLogItem$Level",
      "com.mchange.v2.cfg.MultiPropertiesConfig",
      "com.mchange.v2.cfg.BasicMultiPropertiesConfig",
      "com.mchange.v2.cfg.BasicPropertiesConfigSource",
      "com.mchange.v2.cfg.PropertiesConfigSource$Parse",
      "com.mchange.v2.cfg.BasicMultiPropertiesConfig$SystemPropertiesConfigSource",
      "com.mchange.v2.log.MLogClasses",
      "com.mchange.v2.log.MLevel",
      "com.mchange.v2.log.slf4j.Slf4jMLog",
      "com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger",
      "com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$TraceLogger",
      "com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$DebugLogger",
      "com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$InfoLogger",
      "com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$WarnLogger",
      "com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$ErrorLogger",
      "com.mchange.v2.log.slf4j.Slf4jMLog$Slf4jMLogger$OffLogger",
      "com.mchange.v2.log.MLog$1",
      "com.mchange.v2.log.MLog",
      "com.mchange.v2.naming.JavaBeanReferenceMaker",
      "com.mchange.v2.naming.ReferenceIndirector",
      "com.mchange.v2.c3p0.impl.PoolBackedDataSourceBase",
      "com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource",
      "com.mchange.v2.c3p0.PoolBackedDataSource",
      "com.mchange.v2.c3p0.impl.C3P0Defaults",
      "com.mchange.v2.cfg.MConfig$CSManager",
      "com.mchange.v1.cachedstore.CachedStoreFactory",
      "com.mchange.v1.cachedstore.NoCleanupCachedStore",
      "com.mchange.v1.cachedstore.CachedStoreUtils",
      "com.mchange.v1.lang.Synchronizer",
      "com.mchange.v1.lang.Synchronizer$1",
      "com.mchange.v2.cfg.MConfig",
      "com.mchange.v2.cfg.MConfig$PathsKey",
      "com.mchange.v1.util.ArrayUtils",
      "com.mchange.v2.lang.ObjectUtils",
      "com.mchange.v2.c3p0.cfg.C3P0ConfigXmlUtils",
      "com.mchange.v2.c3p0.cfg.DefaultC3P0ConfigFinder",
      "com.mchange.v2.c3p0.cfg.C3P0ConfigUtils",
      "com.mchange.v2.lang.Coerce",
      "com.mchange.v2.c3p0.cfg.NamedScope",
      "com.mchange.v2.c3p0.cfg.C3P0Config",
      "com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource$1",
      "com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
      "com.jfinal.plugin.activerecord.builder.TimestampProcessedModelBuilder",
      "com.jfinal.plugin.activerecord.builder.TimestampProcessedRecordBuilder",
      "com.jfinal.kit.StrKit",
      "com.jfinal.plugin.activerecord.sql.SqlKit",
      "com.jfinal.template.EngineConfig",
      "com.jfinal.template.io.WriterBuffer",
      "com.jfinal.template.io.EncoderFactory",
      "com.jfinal.template.io.WriterBuffer$1",
      "com.jfinal.template.io.WriterBuffer$2",
      "com.jfinal.template.io.WriterBuffer$3",
      "com.jfinal.template.OutputDirectiveFactory",
      "com.jfinal.template.source.FileSourceFactory",
      "com.jfinal.template.expr.ast.SharedMethodKit",
      "com.jfinal.template.ext.sharedmethod.SharedMethodLib",
      "com.jfinal.template.ext.extensionmethod.StringExt",
      "com.jfinal.template.expr.ast.MethodKit",
      "com.jfinal.template.Engine",
      "com.mchange.v2.c3p0.AbstractComboPooledDataSource",
      "com.mchange.v2.c3p0.ComboPooledDataSource",
      "com.mchange.v2.c3p0.impl.DbAuth",
      "com.mchange.v2.log.jdk14logging.ForwardingLogger",
      "com.mchange.v1.identicator.IdentityHashCodeIdenticator",
      "com.mchange.v2.encounter.EncounterUtils",
      "com.mchange.v2.encounter.AbstractEncounterCounter",
      "com.mchange.v2.encounter.GenericEncounterCounter",
      "com.mchange.v1.identicator.IdMap",
      "com.mchange.v1.identicator.IdWeakHashMap",
      "com.mchange.v2.encounter.EncounterUtils$1",
      "com.mchange.v2.uid.UidUtils",
      "com.mchange.v2.c3p0.impl.C3P0ImplUtils",
      "com.mchange.v1.identicator.IdHashKey",
      "com.mchange.v1.identicator.WeakIdHashKey",
      "com.mchange.v1.identicator.WeakIdHashKey$Ref",
      "com.mchange.v2.c3p0.impl.IdentityTokenizedCoalesceChecker",
      "com.mchange.v2.coalesce.CoalescerFactory",
      "com.mchange.v2.coalesce.AbstractWeakCoalescer",
      "com.mchange.v2.coalesce.WeakCcCoalescer",
      "com.mchange.v2.coalesce.CoalesceIdenticator",
      "com.mchange.v2.util.DoubleWeakHashMap",
      "com.mchange.v2.util.DoubleWeakHashMap$CheckKeyHolder",
      "com.mchange.v2.c3p0.AbstractConnectionTester",
      "com.mchange.v2.c3p0.impl.DefaultConnectionTester$1",
      "com.mchange.v2.c3p0.impl.DefaultConnectionTester$2",
      "com.mchange.v2.c3p0.impl.DefaultConnectionTester$3",
      "com.mchange.v2.c3p0.impl.ThreadLocalQuerylessTestRunner$1",
      "com.mchange.v2.c3p0.impl.ThreadLocalQuerylessTestRunner",
      "com.mchange.v2.c3p0.impl.DefaultConnectionTester",
      "com.mchange.v2.c3p0.management.ActiveManagementCoordinator",
      "com.mchange.v2.c3p0.C3P0Registry",
      "com.mchange.v2.c3p0.management.C3P0RegistryManager",
      "com.mchange.v2.util.DoubleWeakHashMap$UserKeySet",
      "com.mchange.v2.util.DoubleWeakHashMap$WKey",
      "com.mchange.v2.util.DoubleWeakHashMap$WVal",
      "com.mchange.v2.management.ManagementUtils$1",
      "com.mchange.v2.management.ManagementUtils$2",
      "com.mchange.v2.management.ManagementUtils",
      "com.mchange.v2.c3p0.management.DynamicPooledDataSourceManagerMBean",
      "com.mchange.v2.c3p0.management.DynamicPooledDataSourceManagerMBean$1",
      "com.mchange.v2.c3p0.impl.DriverManagerDataSourceBase",
      "com.alibaba.druid.proxy.DruidDriver$1",
      "com.alibaba.druid.proxy.DruidDriver",
      "com.alibaba.druid.mock.handler.MySqlMockExecuteHandlerImpl",
      "com.alibaba.druid.mock.MockDriver",
      "org.hsqldb.jdbc.JDBCDriver",
      "com.mchange.v2.c3p0.DriverManagerDataSource",
      "com.mchange.v1.lang.BooleanUtils",
      "com.mchange.v2.c3p0.impl.AuthMaskingProperties",
      "com.mchange.v2.c3p0.DriverManagerDataSource$1",
      "com.mchange.v2.c3p0.impl.WrapperConnectionPoolDataSourceBase",
      "com.mchange.v2.c3p0.WrapperConnectionPoolDataSource",
      "com.mchange.v2.c3p0.WrapperConnectionPoolDataSource$1",
      "com.mchange.v2.c3p0.AbstractComboPooledDataSource$1",
      "com.mchange.v2.c3p0.AbstractComboPooledDataSource$2",
      "com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
      "com.jfinal.plugin.activerecord.dialect.SqlServerDialect",
      "com.alibaba.druid.pool.WrapperAdapter",
      "com.alibaba.druid.support.logging.Resources",
      "com.alibaba.druid.support.logging.Log4jImpl",
      "org.apache.log4j.Category",
      "org.apache.log4j.Logger",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.log4j.Priority",
      "org.apache.log4j.Level",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.ProvisionNode",
      "com.alibaba.druid.support.logging.LogFactory",
      "com.alibaba.druid.pool.DruidAbstractDataSource",
      "com.alibaba.druid.pool.DruidDataSource",
      "com.alibaba.druid.util.Histogram",
      "com.alibaba.druid.pool.DruidDataSourceStatLoggerAdapter",
      "com.alibaba.druid.pool.DruidDataSourceStatLoggerImpl",
      "com.alibaba.druid.util.Utils",
      "net.sf.ehcache.transaction.AbstractTransactionIDFactory",
      "net.sf.ehcache.transaction.TransactionIDFactoryImpl",
      "net.sf.ehcache.transaction.TransactionIDSerializedForm",
      "com.jfinal.plugin.activerecord.OrderedFieldContainerFactory",
      "com.alibaba.druid.util.jdbc.ConnectionBase",
      "com.alibaba.druid.mock.MockConnection",
      "com.alibaba.druid.pool.DruidConnectionHolder",
      "com.alibaba.druid.pool.PoolableWrapper",
      "com.alibaba.druid.pool.DruidPooledConnection",
      "net.sf.ehcache.management.provider.MBeanRegistrationProviderFactoryImpl",
      "net.sf.ehcache.CacheManager",
      "net.sf.ehcache.config.ConfigurationFactory",
      "net.sf.ehcache.CacheException",
      "com.alibaba.druid.pool.DruidDataSourceStatValue",
      "com.jfinal.plugin.activerecord.CaseInsensitiveContainerFactory",
      "com.jfinal.plugin.activerecord.CaseInsensitiveContainerFactory$CaseInsensitiveMap",
      "com.jfinal.plugin.activerecord.Db",
      "com.zaxxer.hikari.util.DriverDataSource",
      "com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
      "com.alibaba.druid.util.JdbcUtils",
      "com.alibaba.druid.sql.ast.SQLObjectImpl",
      "com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock",
      "com.alibaba.druid.sql.ast.SQLStatementImpl",
      "com.alibaba.druid.sql.ast.statement.SQLRollbackStatement",
      "com.alibaba.druid.sql.ast.statement.SQLSelectItem",
      "com.jfinal.plugin.activerecord.DbPro",
      "com.alibaba.druid.sql.ast.SQLPartition",
      "com.jfinal.plugin.activerecord.DaoContainerFactory$DaoMap",
      "com.jfinal.plugin.activerecord.DaoContainerFactory$DaoSet",
      "com.jfinal.plugin.activerecord.DaoContainerFactory",
      "com.alibaba.druid.sql.ast.statement.SQLCreateSequenceStatement",
      "com.alibaba.druid.sql.ast.statement.SQLTableSourceImpl",
      "com.alibaba.druid.sql.ast.statement.SQLExprTableSource",
      "com.mchange.v2.beans.BeansUtils",
      "com.alibaba.druid.util.JMXUtils",
      "com.alibaba.druid.VERSION",
      "com.alibaba.druid.util.jdbc.StatementBase",
      "com.alibaba.druid.util.jdbc.PreparedStatementBase",
      "com.alibaba.druid.mock.MockPreparedStatement",
      "com.alibaba.druid.mock.MockCallableStatement",
      "com.alibaba.druid.mock.MockParameterMetaData",
      "com.alibaba.druid.util.jdbc.ResultSetMetaDataBase",
      "com.alibaba.druid.mock.MockResultSetMetaData",
      "com.jfinal.plugin.activerecord.dialect.OracleDialect",
      "com.alibaba.druid.sql.ast.statement.SQLUpdateStatement",
      "com.alibaba.druid.pool.DruidDataSourceC3P0Adapter",
      "com.alibaba.druid.pool.DruidAbstractDataSource$PhysicalConnectionInfo",
      "com.alibaba.druid.mock.MockStatement",
      "com.alibaba.druid.util.jdbc.ResultSetBase",
      "com.alibaba.druid.mock.MockResultSet",
      "com.jfinal.plugin.activerecord.NullDataSource",
      "com.alibaba.druid.sql.ast.SQLExprImpl",
      "com.alibaba.druid.sql.ast.expr.SQLHexExpr",
      "com.alibaba.druid.sql.ast.statement.SQLErrorLoggingClause",
      "com.alibaba.druid.sql.ast.statement.SQLTruncateStatement",
      "com.alibaba.druid.sql.ast.statement.SQLAlterTableRenameColumn",
      "com.alibaba.druid.util.TransactionInfo",
      "com.alibaba.druid.proxy.jdbc.TransactionInfo",
      "com.alibaba.druid.sql.ast.statement.SQLAlterTableEnableConstraint",
      "com.mchange.v2.c3p0.impl.C3P0PooledConnectionPoolManager",
      "com.mchange.v2.async.ThreadPoolAsynchronousRunner",
      "com.mchange.v2.async.ThreadPoolAsynchronousRunner$DeadlockDetector",
      "com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread",
      "com.mchange.v2.resourcepool.ResourcePoolFactory",
      "com.mchange.v2.resourcepool.BasicResourcePoolFactory",
      "com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$ResourceItselfInUseLockFetcher",
      "com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$C3P0PooledConnectionNestedLockLockFetcher",
      "com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool",
      "com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$ConnectionEventListenerImpl",
      "com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$ThrowableHolderPool",
      "com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool$1PooledConnectionResourcePoolManager",
      "com.mchange.v2.resourcepool.BasicResourcePool",
      "com.mchange.v2.resourcepool.BasicResourcePool$ScatteredAcquireTask",
      "com.alibaba.druid.mock.MockSQLXML",
      "com.mchange.v2.resourcepool.BasicResourcePool$5",
      "com.jfinal.plugin.activerecord.CaseInsensitiveContainerFactory$CaseInsensitiveSet",
      "com.alibaba.druid.sql.ast.statement.SQLColumnDefinition",
      "com.alibaba.druid.sql.ast.statement.SQLUnionQueryTableSource",
      "com.alibaba.druid.sql.ast.statement.SQLCallStatement",
      "com.alibaba.druid.sql.ast.statement.SQLIfStatement$ElseIf",
      "org.springframework.jndi.JndiTemplate",
      "org.apache.commons.logging.impl.Log4JLogger",
      "com.alibaba.druid.sql.ast.expr.SQLBinaryOpExpr",
      "com.alibaba.druid.util.StringUtils",
      "com.alibaba.druid.sql.ast.statement.SQLSelect",
      "com.alibaba.druid.sql.ast.expr.SQLInSubQueryExpr",
      "com.alibaba.druid.util.HexBin",
      "com.alibaba.druid.sql.ast.statement.SQLConstraintImpl",
      "com.alibaba.druid.sql.ast.statement.SQLForeignKeyImpl",
      "com.alibaba.druid.sql.visitor.SQLASTVisitorAdapter",
      "com.alibaba.druid.sql.visitor.SchemaStatVisitor",
      "com.alibaba.druid.stat.TableStat$Mode",
      "com.alibaba.druid.filter.FilterManager",
      "com.alibaba.druid.sql.ast.statement.SQLDropIndexStatement",
      "com.jfinal.log.Log4jLogFactory",
      "com.jfinal.log.Log",
      "com.jfinal.log.Log4jLog",
      "com.jfinal.plugin.ehcache.CacheKit",
      "com.alibaba.druid.sql.SQLUtils$FormatOption",
      "com.alibaba.druid.sql.SQLUtils",
      "com.alibaba.druid.sql.visitor.SQLASTOutputVisitor",
      "com.alibaba.druid.sql.ast.expr.SQLBinaryOperator",
      "com.alibaba.druid.sql.ast.statement.SQLCreateViewStatement",
      "com.alibaba.druid.sql.ast.statement.SQLSelectGroupByClause"
    );
  }
}
