/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 11:36:54 GMT 2018
 */

package com.jfinal.plugin.activerecord.generator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.druid.mock.MockConnection;
import com.alibaba.druid.mock.MockDriver;
import com.alibaba.druid.pool.DruidDataSource;
import com.jfinal.plugin.activerecord.dialect.Dialect;
import com.jfinal.plugin.activerecord.dialect.OracleDialect;
import com.jfinal.plugin.activerecord.generator.MetaBuilder;
import com.jfinal.plugin.activerecord.generator.TableMeta;
import com.jfinal.plugin.activerecord.generator.TypeMapping;
import com.mchange.v2.c3p0.ComboPooledDataSource;
import com.mchange.v2.c3p0.DriverManagerDataSource;
import com.mchange.v2.c3p0.PoolBackedDataSource;
import java.sql.Connection;
import java.util.List;
import java.util.Properties;
import java.util.Set;
import javax.sql.DataSource;
import net.sf.ehcache.config.Configuration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class MetaBuilder_ESTest extends MetaBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PoolBackedDataSource poolBackedDataSource0 = new PoolBackedDataSource();
      MetaBuilder metaBuilder0 = new MetaBuilder(poolBackedDataSource0);
      MockDriver mockDriver0 = MockDriver.instance;
      Properties properties0 = new Properties();
      MockConnection mockConnection0 = mockDriver0.createMockConnection(mockDriver0, "geWn3U@f[$R:qY>", properties0);
      metaBuilder0.conn = (Connection) mockConnection0;
      // Undeclared exception!
      try { 
        metaBuilder0.getTablesResultSet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.plugin.activerecord.generator.MetaBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ComboPooledDataSource comboPooledDataSource0 = new ComboPooledDataSource();
      MetaBuilder metaBuilder0 = new MetaBuilder(comboPooledDataSource0);
      TableMeta tableMeta0 = new TableMeta();
      // Undeclared exception!
      try { 
        metaBuilder0.buildPrimaryKey(tableMeta0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.plugin.activerecord.generator.MetaBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ComboPooledDataSource comboPooledDataSource0 = new ComboPooledDataSource();
      MetaBuilder metaBuilder0 = new MetaBuilder(comboPooledDataSource0);
      // Undeclared exception!
      try { 
        metaBuilder0.buildModelName("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ComboPooledDataSource comboPooledDataSource0 = new ComboPooledDataSource();
      MetaBuilder metaBuilder0 = new MetaBuilder(comboPooledDataSource0);
      TableMeta tableMeta0 = new TableMeta();
      // Undeclared exception!
      try { 
        metaBuilder0.buildColumnMetas(tableMeta0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.plugin.activerecord.generator.MetaBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DruidDataSource druidDataSource0 = new DruidDataSource();
      MetaBuilder metaBuilder0 = new MetaBuilder(druidDataSource0);
      // Undeclared exception!
      try { 
        metaBuilder0.buildAttrName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.kit.StrKit", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DruidDataSource druidDataSource0 = new DruidDataSource();
      MetaBuilder metaBuilder0 = new MetaBuilder(druidDataSource0);
      // Undeclared exception!
      try { 
        metaBuilder0.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ComboPooledDataSource comboPooledDataSource0 = new ComboPooledDataSource("hq(]7");
      MetaBuilder metaBuilder0 = new MetaBuilder(comboPooledDataSource0);
      String[] stringArray0 = new String[5];
      Configuration configuration0 = new Configuration();
      Set<String> set0 = configuration0.getCacheConfigurationsKeySet();
      metaBuilder0.excludedTables = set0;
      // Undeclared exception!
      try { 
        metaBuilder0.addExcludedTable(stringArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.ConcurrentHashMap$KeySetView", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ComboPooledDataSource comboPooledDataSource0 = new ComboPooledDataSource();
      MetaBuilder metaBuilder0 = new MetaBuilder(comboPooledDataSource0);
      OracleDialect oracleDialect0 = new OracleDialect();
      metaBuilder0.setDialect(oracleDialect0);
      String string0 = metaBuilder0.buildAttrName("select * from com.alibaba.druid.sql.ast.expr.SQLBinaryExpr where rownum < 1");
      assertEquals("select * from com.alibaba.druid.sql.ast.expr.sqlbinaryexpr where rownum < 1", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PoolBackedDataSource poolBackedDataSource0 = new PoolBackedDataSource();
      MetaBuilder metaBuilder0 = new MetaBuilder(poolBackedDataSource0);
      String string0 = metaBuilder0.buildAttrName("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PoolBackedDataSource poolBackedDataSource0 = new PoolBackedDataSource(false);
      MetaBuilder metaBuilder0 = new MetaBuilder(poolBackedDataSource0);
      OracleDialect oracleDialect0 = new OracleDialect();
      metaBuilder0.dialect = (Dialect) oracleDialect0;
      // Undeclared exception!
      try { 
        metaBuilder0.getTablesResultSet();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.plugin.activerecord.generator.MetaBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PoolBackedDataSource poolBackedDataSource0 = new PoolBackedDataSource();
      MetaBuilder metaBuilder0 = new MetaBuilder(poolBackedDataSource0);
      // Undeclared exception!
      try { 
        metaBuilder0.buildTableNames((List<TableMeta>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.plugin.activerecord.generator.MetaBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DruidDataSource druidDataSource0 = new DruidDataSource(false);
      MetaBuilder metaBuilder0 = new MetaBuilder(druidDataSource0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "CREATE DATABASE ";
      metaBuilder0.removedTableNamePrefixes = stringArray0;
      // Undeclared exception!
      try { 
        metaBuilder0.buildModelName(":Z>ELk0cu9@m");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DruidDataSource druidDataSource0 = new DruidDataSource(true);
      MetaBuilder metaBuilder0 = new MetaBuilder(druidDataSource0);
      String[] stringArray0 = new String[0];
      metaBuilder0.setRemovedTableNamePrefixes(stringArray0);
      // Undeclared exception!
      try { 
        metaBuilder0.buildModelName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.kit.StrKit", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ComboPooledDataSource comboPooledDataSource0 = new ComboPooledDataSource("hq(]7");
      MetaBuilder metaBuilder0 = new MetaBuilder(comboPooledDataSource0);
      String string0 = metaBuilder0.buildModelName("hq(]7");
      assertEquals("Hq(]7", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PoolBackedDataSource poolBackedDataSource0 = new PoolBackedDataSource();
      MetaBuilder metaBuilder0 = new MetaBuilder(poolBackedDataSource0);
      MockDriver mockDriver0 = MockDriver.instance;
      Properties properties0 = new Properties();
      MockConnection mockConnection0 = mockDriver0.createMockConnection(mockDriver0, "geWn3U@f[$R:qY>", properties0);
      metaBuilder0.conn = (Connection) mockConnection0;
      // Undeclared exception!
      try { 
        metaBuilder0.build();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.sql.SQLException: Attempted to use an uninitialized PoolBackedDataSource. Please call setConnectionPoolDataSource( ... ) to initialize.
         //
         verifyException("com.jfinal.plugin.activerecord.generator.MetaBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PoolBackedDataSource poolBackedDataSource0 = new PoolBackedDataSource(false);
      MetaBuilder metaBuilder0 = new MetaBuilder(poolBackedDataSource0);
      TypeMapping typeMapping0 = new TypeMapping();
      metaBuilder0.setTypeMapping(typeMapping0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DruidDataSource druidDataSource0 = new DruidDataSource(false);
      MetaBuilder metaBuilder0 = new MetaBuilder(druidDataSource0);
      metaBuilder0.setTypeMapping((TypeMapping) null);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ComboPooledDataSource comboPooledDataSource0 = new ComboPooledDataSource();
      MetaBuilder metaBuilder0 = new MetaBuilder(comboPooledDataSource0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "com.alibaba.druid.sql.ast.expr.SQLBinaryExpr";
      stringArray0[1] = "TABLE";
      metaBuilder0.addExcludedTable(stringArray0);
      assertEquals(2, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ComboPooledDataSource comboPooledDataSource0 = new ComboPooledDataSource();
      MetaBuilder metaBuilder0 = new MetaBuilder(comboPooledDataSource0);
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        metaBuilder0.addExcludedTable(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      MetaBuilder metaBuilder0 = new MetaBuilder(driverManagerDataSource0);
      metaBuilder0.addExcludedTable((String[]) null);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ComboPooledDataSource comboPooledDataSource0 = new ComboPooledDataSource();
      MetaBuilder metaBuilder0 = new MetaBuilder(comboPooledDataSource0);
      OracleDialect oracleDialect0 = new OracleDialect();
      metaBuilder0.setDialect(oracleDialect0);
      String string0 = metaBuilder0.buildModelName("com.alibaba.druid.sql.ast.expr.SQLBinaryExpr");
      assertEquals("Com.alibaba.druid.sql.ast.expr.sqlbinaryexpr", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ComboPooledDataSource comboPooledDataSource0 = new ComboPooledDataSource();
      MetaBuilder metaBuilder0 = new MetaBuilder(comboPooledDataSource0);
      metaBuilder0.setDialect((Dialect) null);
      assertEquals("1hge14a90dw1hk81ekg|8", comboPooledDataSource0.getIdentityToken());
      assertEquals("1hge14a90dw1hk81ekg|8", comboPooledDataSource0.getDataSourceName());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MetaBuilder metaBuilder0 = null;
      try {
        metaBuilder0 = new MetaBuilder((DataSource) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // dataSource can not be null.
         //
         verifyException("com.jfinal.plugin.activerecord.generator.MetaBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DruidDataSource druidDataSource0 = new DruidDataSource(false);
      MetaBuilder metaBuilder0 = new MetaBuilder(druidDataSource0);
      String string0 = metaBuilder0.buildBaseModelName((String) null);
      assertEquals("Basenull", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PoolBackedDataSource poolBackedDataSource0 = new PoolBackedDataSource(false);
      MetaBuilder metaBuilder0 = new MetaBuilder(poolBackedDataSource0);
      boolean boolean0 = metaBuilder0.isSkipTable((String) null);
      assertFalse(boolean0);
  }
}
