/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 13:51:57 GMT 2018
 */

package com.jfinal.plugin.activerecord.builder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.druid.mock.MockCallableStatement;
import com.alibaba.druid.mock.MockConnection;
import com.alibaba.druid.mock.MockDriver;
import com.alibaba.druid.mock.MockResultSet;
import com.alibaba.druid.mock.handler.MySqlMockExecuteHandlerImpl;
import com.jfinal.plugin.activerecord.Config;
import com.jfinal.plugin.activerecord.Record;
import com.jfinal.plugin.activerecord.builder.KeepByteAndShortRecordBuilder;
import java.sql.ResultSet;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class KeepByteAndShortRecordBuilder_ESTest extends KeepByteAndShortRecordBuilder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      KeepByteAndShortRecordBuilder keepByteAndShortRecordBuilder0 = new KeepByteAndShortRecordBuilder();
      MockDriver mockDriver0 = new MockDriver();
      MockConnection mockConnection0 = new MockConnection();
      MockCallableStatement mockCallableStatement0 = mockDriver0.createMockCallableStatement(mockConnection0, "");
      MySqlMockExecuteHandlerImpl mySqlMockExecuteHandlerImpl0 = new MySqlMockExecuteHandlerImpl();
      ResultSet resultSet0 = mySqlMockExecuteHandlerImpl0.showStatus(mockCallableStatement0);
      // Undeclared exception!
      try { 
        keepByteAndShortRecordBuilder0.build((Config) null, resultSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.plugin.activerecord.builder.KeepByteAndShortRecordBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KeepByteAndShortRecordBuilder keepByteAndShortRecordBuilder0 = new KeepByteAndShortRecordBuilder();
      MockDriver mockDriver0 = new MockDriver();
      MockConnection mockConnection0 = new MockConnection();
      MockCallableStatement mockCallableStatement0 = new MockCallableStatement(mockConnection0, "o5WY)d*bDH\"q?`");
      MockResultSet mockResultSet0 = mockDriver0.createMockResultSet(mockCallableStatement0);
      List<Record> list0 = keepByteAndShortRecordBuilder0.build((Config) null, mockResultSet0);
      assertTrue(list0.isEmpty());
  }
}
