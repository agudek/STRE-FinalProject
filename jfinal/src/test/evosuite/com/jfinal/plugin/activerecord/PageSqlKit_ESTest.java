/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 12:57:08 GMT 2018
 */

package com.jfinal.plugin.activerecord;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.plugin.activerecord.PageSqlKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class PageSqlKit_ESTest extends PageSqlKit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = PageSqlKit.parsePageSql("Can not match left paren '(' for right paren ')': ");
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        PageSqlKit.parsePageSql((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.plugin.activerecord.PageSqlKit", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = PageSqlKit.parsePageSql("s>v\"e>{W+/FRfcmi~z");
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        PageSqlKit.parsePageSql(")zMoxY}7\"):XOC]");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can not match left paren '(' for right paren ')': )zMoxY}7\"):XOC]
         //
         verifyException("com.jfinal.plugin.activerecord.PageSqlKit", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = PageSqlKit.parsePageSql("h^|D~o]q(DR\")|z2 <");
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = PageSqlKit.parsePageSql("");
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PageSqlKit pageSqlKit0 = new PageSqlKit();
  }
}
