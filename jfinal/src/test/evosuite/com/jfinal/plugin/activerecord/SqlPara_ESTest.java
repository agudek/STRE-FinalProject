/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 15:01:15 GMT 2018
 */

package com.jfinal.plugin.activerecord;

import org.junit.Test;
import static org.junit.Assert.*;
import com.jfinal.plugin.activerecord.SqlPara;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class SqlPara_ESTest extends SqlPara_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SqlPara sqlPara0 = new SqlPara();
      Object object0 = new Object();
      SqlPara sqlPara1 = sqlPara0.addPara(object0);
      sqlPara1.sql = "x|kK.";
      String string0 = sqlPara1.getSql();
      assertEquals("x|kK.", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SqlPara sqlPara0 = new SqlPara();
      SqlPara sqlPara1 = sqlPara0.setSql("` = ?");
      sqlPara1.sql = "";
      String string0 = sqlPara0.getSql();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SqlPara sqlPara0 = new SqlPara();
      Object object0 = new Object();
      sqlPara0.addPara(object0);
      SqlPara sqlPara1 = sqlPara0.clear();
      assertSame(sqlPara0, sqlPara1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SqlPara sqlPara0 = new SqlPara();
      SqlPara sqlPara1 = sqlPara0.clear();
      assertSame(sqlPara1, sqlPara0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SqlPara sqlPara0 = new SqlPara();
      Object object0 = new Object();
      SqlPara sqlPara1 = sqlPara0.addPara(object0);
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      sqlPara1.paraList = (List<Object>) linkedList0;
      Object[] objectArray0 = sqlPara0.getPara();
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SqlPara sqlPara0 = new SqlPara();
      Object object0 = new Object();
      sqlPara0.addPara(object0);
      Object[] objectArray0 = sqlPara0.getPara();
      assertEquals(1, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SqlPara sqlPara0 = new SqlPara();
      Object[] objectArray0 = sqlPara0.getPara();
      assertEquals(0, objectArray0.length);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SqlPara sqlPara0 = new SqlPara();
      Object object0 = new Object();
      sqlPara0.addPara(object0);
      SqlPara sqlPara1 = sqlPara0.addPara(object0);
      assertSame(sqlPara0, sqlPara1);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SqlPara sqlPara0 = new SqlPara();
      String string0 = sqlPara0.toString();
      assertEquals("Sql: null\nPara: null", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      SqlPara sqlPara0 = new SqlPara();
      String string0 = sqlPara0.getSql();
      assertNull(string0);
  }
}
