/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 12:33:27 GMT 2018
 */

package com.jfinal.plugin.activerecord.generator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.plugin.activerecord.generator.BaseModelGenerator;
import com.jfinal.plugin.activerecord.generator.Generator;
import com.jfinal.plugin.activerecord.generator.ModelGenerator;
import com.mchange.v2.c3p0.ComboPooledDataSource;
import com.mchange.v2.c3p0.PoolBackedDataSource;
import javax.sql.DataSource;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class Generator_ESTest extends Generator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PoolBackedDataSource poolBackedDataSource0 = new PoolBackedDataSource("com.jfinal.plugin.activerecord.generator.Generator");
      Generator generator0 = null;
      try {
        generator0 = new Generator(poolBackedDataSource0, "com.jfinal.plugin.activerecord.generator.Generator", "', it should be : '", "com.jfinal.plugin.activerecord.generator.Generator", "com.jfinal.plugin.activerecord.generator.Generator");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.jfinal.template.Engine
         //
         verifyException("com.jfinal.plugin.activerecord.generator.BaseModelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Generator generator0 = null;
      try {
        generator0 = new Generator((DataSource) null, "sqlTemplate can not be null", "+");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class com.jfinal.template.Engine
         //
         verifyException("com.jfinal.plugin.activerecord.generator.BaseModelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Generator generator0 = null;
      try {
        generator0 = new Generator((DataSource) null, (BaseModelGenerator) null, (ModelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // dataSource can not be null.
         //
         verifyException("com.jfinal.plugin.activerecord.generator.Generator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ComboPooledDataSource comboPooledDataSource0 = new ComboPooledDataSource("D4c]UNRBA+)");
      Generator generator0 = null;
      try {
        generator0 = new Generator(comboPooledDataSource0, (BaseModelGenerator) null, (ModelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // baseModelGenerator can not be null.
         //
         verifyException("com.jfinal.plugin.activerecord.generator.Generator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Generator generator0 = null;
      try {
        generator0 = new Generator((DataSource) null, (BaseModelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // dataSource can not be null.
         //
         verifyException("com.jfinal.plugin.activerecord.generator.Generator", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ComboPooledDataSource comboPooledDataSource0 = new ComboPooledDataSource(false);
      Generator generator0 = null;
      try {
        generator0 = new Generator(comboPooledDataSource0, (BaseModelGenerator) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // baseModelGenerator can not be null.
         //
         verifyException("com.jfinal.plugin.activerecord.generator.Generator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ComboPooledDataSource comboPooledDataSource0 = new ComboPooledDataSource();
      Generator generator0 = null;
      try {
        generator0 = new Generator(comboPooledDataSource0, "", "", "", "fwg6yZg*l=?k6 -79Lz");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // baseModelPackageName can not be blank.
         //
         verifyException("com.jfinal.plugin.activerecord.generator.BaseModelGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Generator generator0 = null;
      try {
        generator0 = new Generator((DataSource) null, "#iRd ;k'9YnjNQa", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // baseModelOutputDir can not be blank.
         //
         verifyException("com.jfinal.plugin.activerecord.generator.BaseModelGenerator", e);
      }
  }
}
