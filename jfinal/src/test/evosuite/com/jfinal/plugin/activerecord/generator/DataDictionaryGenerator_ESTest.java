/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 12:29:26 GMT 2018
 */

package com.jfinal.plugin.activerecord.generator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.druid.pool.DruidDataSource;
import com.jfinal.plugin.activerecord.generator.ColumnMeta;
import com.jfinal.plugin.activerecord.generator.DataDictionaryGenerator;
import com.jfinal.plugin.activerecord.generator.TableMeta;
import com.mchange.v2.c3p0.ComboPooledDataSource;
import com.mchange.v2.c3p0.DriverManagerDataSource;
import com.mchange.v2.c3p0.PoolBackedDataSource;
import java.util.LinkedList;
import javax.sql.DataSource;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class DataDictionaryGenerator_ESTest extends DataDictionaryGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator((DataSource) null, (String) null);
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "SQ},>HQn=N^?a+qOzHe");
      dataDictionaryGenerator0.genCell(3114, "Table: ", "Table: ", "SQ},>HQn=N^?a+qOzHe", "SQ},>HQn=N^?a+qOzHe", stringBuilder0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PoolBackedDataSource poolBackedDataSource0 = new PoolBackedDataSource("");
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator(poolBackedDataSource0, "");
      TableMeta tableMeta0 = new TableMeta();
      StringBuilder stringBuilder0 = new StringBuilder("COLUMN_DEF");
      dataDictionaryGenerator0.genTableHead(tableMeta0, stringBuilder0);
      assertEquals("COLUMN_DEF Field | Type | Null | Key | Default | Remarks \n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator(driverManagerDataSource0, "su-CkZe' (y^- POeQi");
      StringBuilder stringBuilder0 = new StringBuilder();
      dataDictionaryGenerator0.genCell((-714), "X*!>aB&ibi[3(\"S", "c7w%C%nIG|WO&\u0007t:", (String) null, "", stringBuilder0);
      assertEquals("X*!>aB&ibi[3(\"Sc7w%C%nIG|WO&\u0007t:", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator((DataSource) null, "");
      TableMeta tableMeta0 = new TableMeta();
      String string0 = dataDictionaryGenerator0.genSeparateLine(tableMeta0);
      assertEquals("-------+------+------+-----+---------+---------\n", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PoolBackedDataSource poolBackedDataSource0 = new PoolBackedDataSource();
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator(poolBackedDataSource0, "]|hw[koh");
      LinkedList<TableMeta> linkedList0 = new LinkedList<TableMeta>();
      // Undeclared exception!
      try { 
        dataDictionaryGenerator0.rebuildColumnMetas(linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.sql.SQLException: Attempted to use an uninitialized PoolBackedDataSource. Please call setConnectionPoolDataSource( ... ) to initialize.
         //
         verifyException("com.jfinal.plugin.activerecord.generator.DataDictionaryGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DruidDataSource druidDataSource0 = new DruidDataSource();
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator(druidDataSource0, (String) null);
      LinkedList<TableMeta> linkedList0 = new LinkedList<TableMeta>();
      // Undeclared exception!
      try { 
        dataDictionaryGenerator0.rebuildColumnMetas(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator((DataSource) null, "lastConnectionTestFailureDefaultUser");
      TableMeta tableMeta0 = new TableMeta();
      // Undeclared exception!
      try { 
        dataDictionaryGenerator0.generateTable(tableMeta0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.plugin.activerecord.generator.DataDictionaryGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DruidDataSource druidDataSource0 = new DruidDataSource(true);
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator(druidDataSource0, "");
      LinkedList<TableMeta> linkedList0 = new LinkedList<TableMeta>();
      // Undeclared exception!
      try { 
        dataDictionaryGenerator0.generate(linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator((DataSource) null, "");
      TableMeta tableMeta0 = new TableMeta();
      // Undeclared exception!
      try { 
        dataDictionaryGenerator0.genTableHead(tableMeta0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PoolBackedDataSource poolBackedDataSource0 = new PoolBackedDataSource("0pv");
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator(poolBackedDataSource0, "");
      // Undeclared exception!
      try { 
        dataDictionaryGenerator0.genSeparateLine((TableMeta) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.plugin.activerecord.generator.DataDictionaryGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ComboPooledDataSource comboPooledDataSource0 = new ComboPooledDataSource();
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator(comboPooledDataSource0, "");
      StringBuilder stringBuilder0 = new StringBuilder("Yb,>'T*HL");
      // Undeclared exception!
      try { 
        dataDictionaryGenerator0.genCell(1, (String) null, (String) null, (String) null, (String) null, stringBuilder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator((DataSource) null, "q!=z]CJ");
      // Undeclared exception!
      try { 
        dataDictionaryGenerator0.writeToFile((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DruidDataSource druidDataSource0 = new DruidDataSource();
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator(druidDataSource0, (String) null);
      // Undeclared exception!
      try { 
        dataDictionaryGenerator0.writeToFile("g2d.qqV6mbP)\u0006:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator((DataSource) null, "|");
      dataDictionaryGenerator0.writeToFile("|");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ComboPooledDataSource comboPooledDataSource0 = new ComboPooledDataSource();
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator(comboPooledDataSource0, "");
      dataDictionaryGenerator0.writeToFile("C`");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator(driverManagerDataSource0, "");
      LinkedList<TableMeta> linkedList0 = new LinkedList<TableMeta>();
      // Undeclared exception!
      try { 
        dataDictionaryGenerator0.generate(linkedList0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.sql.SQLException: No suitable driver
         //
         verifyException("com.jfinal.plugin.activerecord.generator.DataDictionaryGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DriverManagerDataSource driverManagerDataSource0 = new DriverManagerDataSource();
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator(driverManagerDataSource0, "su-CkZe' (y^- POeQi");
      dataDictionaryGenerator0.setDataDictionaryFileName("su-CkZe' (y^- POeQi");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DruidDataSource druidDataSource0 = new DruidDataSource();
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator(druidDataSource0, (String) null);
      dataDictionaryGenerator0.setDataDictionaryFileName((String) null);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ComboPooledDataSource comboPooledDataSource0 = new ComboPooledDataSource(false);
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator(comboPooledDataSource0, "+P+GHaqO}VSU");
      dataDictionaryGenerator0.setDataDictionaryOutputDir("+P+GHaqO}VSU");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DruidDataSource druidDataSource0 = new DruidDataSource();
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator(druidDataSource0, (String) null);
      dataDictionaryGenerator0.setDataDictionaryOutputDir("");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator((DataSource) null, "");
      TableMeta tableMeta0 = new TableMeta();
      ColumnMeta columnMeta0 = new ColumnMeta();
      // Undeclared exception!
      try { 
        dataDictionaryGenerator0.genColumn(tableMeta0, columnMeta0, (StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ComboPooledDataSource comboPooledDataSource0 = new ComboPooledDataSource();
      DataDictionaryGenerator dataDictionaryGenerator0 = new DataDictionaryGenerator(comboPooledDataSource0, "");
      TableMeta tableMeta0 = new TableMeta();
      StringBuilder stringBuilder0 = new StringBuilder("Yb,>'T*HL");
      dataDictionaryGenerator0.generateTable(tableMeta0, stringBuilder0);
      assertEquals("Yb,>'T*HLTable: null\n-------+------+------+-----+---------+---------\n Field | Type | Null | Key | Default | Remarks \n-------+------+------+-----+---------+---------\n-------+------+------+-----+---------+---------\n\n", stringBuilder0.toString());
      assertEquals("1hge14a90dw1hk81ekg|4a", comboPooledDataSource0.getIdentityToken());
  }
}
