/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:02:43 GMT 2018
 */

package com.jfinal.plugin.druid;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.plugin.druid.DruidStatViewHandler;
import com.jfinal.plugin.druid.IDruidStatViewAuth;
import java.io.PrintWriter;
import java.util.Arrays;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpServletResponseWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class DruidStatViewHandler_ESTest extends DruidStatViewHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DruidStatViewHandler druidStatViewHandler0 = new DruidStatViewHandler("numberFormat");
      DruidStatViewHandler.JFinalStatViewServlet druidStatViewHandler_JFinalStatViewServlet0 = druidStatViewHandler0.new JFinalStatViewServlet();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      boolean boolean0 = druidStatViewHandler_JFinalStatViewServlet0.isPermittedRequest((HttpServletRequest) httpServletRequestWrapper0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DruidStatViewHandler druidStatViewHandler0 = new DruidStatViewHandler("/login.html");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getContextPath();
      doReturn((String) null).when(httpServletRequest0).getQueryString();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      boolean[] booleanArray0 = new boolean[1];
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      druidStatViewHandler0.handle("/login.html", httpServletRequestWrapper0, httpServletResponseWrapper0, booleanArray0);
      assertTrue(Arrays.equals(new boolean[] {true}, booleanArray0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DruidStatViewHandler druidStatViewHandler0 = new DruidStatViewHandler("/freemarker.template.TemplateExceptionfreemarker.template.TemplateException");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      boolean[] booleanArray0 = new boolean[0];
      // Undeclared exception!
      try { 
        druidStatViewHandler0.handle("/freemarker.template.TemplateExceptionfreemarker.template.TemplateException", httpServletRequestWrapper0, httpServletResponseWrapper0, booleanArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.jfinal.plugin.druid.DruidStatViewHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IDruidStatViewAuth iDruidStatViewAuth0 = mock(IDruidStatViewAuth.class, new ViolatedAssumptionAnswer());
      DruidStatViewHandler druidStatViewHandler0 = new DruidStatViewHandler("URLFetcher ", iDruidStatViewAuth0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IDruidStatViewAuth iDruidStatViewAuth0 = mock(IDruidStatViewAuth.class, new ViolatedAssumptionAnswer());
      DruidStatViewHandler druidStatViewHandler0 = null;
      try {
        druidStatViewHandler0 = new DruidStatViewHandler("", iDruidStatViewAuth0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // visitPath can not be blank
         //
         verifyException("com.jfinal.plugin.druid.DruidStatViewHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      DruidStatViewHandler druidStatViewHandler0 = new DruidStatViewHandler("`cb{_7");
      DruidStatViewHandler.JFinalStatViewServlet druidStatViewHandler_JFinalStatViewServlet0 = druidStatViewHandler0.new JFinalStatViewServlet();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("resetEnable", (String) null).when(httpServletRequest0).getContextPath();
      doReturn("<F$KJu{-^eEF!N-27;", ":ddA|\"@").when(httpServletRequest0).getRequestURI();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      druidStatViewHandler_JFinalStatViewServlet0.service((HttpServletRequest) httpServletRequestWrapper0, (HttpServletResponse) httpServletResponseWrapper0);
      druidStatViewHandler_JFinalStatViewServlet0.service((HttpServletRequest) httpServletRequestWrapper0, (HttpServletResponse) httpServletResponseWrapper0);
      assertFalse(druidStatViewHandler_JFinalStatViewServlet0.isRequireAuth());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IDruidStatViewAuth iDruidStatViewAuth0 = mock(IDruidStatViewAuth.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iDruidStatViewAuth0).isPermitted(any(javax.servlet.http.HttpServletRequest.class));
      DruidStatViewHandler druidStatViewHandler0 = new DruidStatViewHandler("/login.html", iDruidStatViewAuth0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("number_format").when(httpServletRequest0).getContextPath();
      doReturn("/freemarker.template.TemplateException").when(httpServletRequest0).getRequestURI();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("number_format");
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((PrintWriter) null).when(httpServletResponse0).getWriter();
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      DruidStatViewHandler.JFinalStatViewServlet druidStatViewHandler_JFinalStatViewServlet0 = druidStatViewHandler0.new JFinalStatViewServlet();
      // Undeclared exception!
      try { 
        druidStatViewHandler_JFinalStatViewServlet0.service((HttpServletRequest) httpServletRequestWrapper0, (HttpServletResponse) httpServletResponseWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.druid.support.http.ResourceServlet", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IDruidStatViewAuth iDruidStatViewAuth0 = mock(IDruidStatViewAuth.class, new ViolatedAssumptionAnswer());
      DruidStatViewHandler druidStatViewHandler0 = new DruidStatViewHandler("/login.html", iDruidStatViewAuth0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("/").when(httpServletRequest0).getContextPath();
      doReturn((String) null).when(httpServletRequest0).getQueryString();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      boolean[] booleanArray0 = new boolean[6];
      druidStatViewHandler0.handle("/login.html", httpServletRequestWrapper0, httpServletResponseWrapper0, booleanArray0);
      assertTrue(Arrays.equals(new boolean[] {true, false, false, false, false, false}, booleanArray0));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IDruidStatViewAuth iDruidStatViewAuth0 = mock(IDruidStatViewAuth.class, new ViolatedAssumptionAnswer());
      DruidStatViewHandler druidStatViewHandler0 = new DruidStatViewHandler("/login.html", iDruidStatViewAuth0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("").when(httpServletRequest0).getContextPath();
      doReturn("D").when(httpServletRequest0).getQueryString();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      boolean[] booleanArray0 = new boolean[6];
      druidStatViewHandler0.handle("/login.html", httpServletRequestWrapper0, httpServletResponseWrapper0, booleanArray0);
      assertTrue(Arrays.equals(new boolean[] {true, false, false, false, false, false}, booleanArray0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IDruidStatViewAuth iDruidStatViewAuth0 = mock(IDruidStatViewAuth.class, new ViolatedAssumptionAnswer());
      DruidStatViewHandler druidStatViewHandler0 = new DruidStatViewHandler("/index.html", iDruidStatViewAuth0);
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(httpServletRequest0).getContextPath();
      doReturn((String) null).when(httpServletRequest0).getRequestURI();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      boolean[] booleanArray0 = new boolean[9];
      // Undeclared exception!
      try { 
        druidStatViewHandler0.handle("/index.html", httpServletRequestWrapper0, httpServletResponseWrapper0, booleanArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("com.jfinal.plugin.druid.DruidStatViewHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DruidStatViewHandler druidStatViewHandler0 = new DruidStatViewHandler("/");
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      boolean[] booleanArray0 = new boolean[1];
      // Undeclared exception!
      try { 
        druidStatViewHandler0.handle("4Y`Qb", httpServletRequestWrapper0, httpServletResponseWrapper0, booleanArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.plugin.druid.DruidStatViewHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DruidStatViewHandler druidStatViewHandler0 = null;
      try {
        druidStatViewHandler0 = new DruidStatViewHandler(":ddA|\"@", (IDruidStatViewAuth) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // druidStatViewAuth can not be null
         //
         verifyException("com.jfinal.plugin.druid.DruidStatViewHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DruidStatViewHandler druidStatViewHandler0 = new DruidStatViewHandler("/");
      DruidStatViewHandler.JFinalStatViewServlet druidStatViewHandler_JFinalStatViewServlet0 = druidStatViewHandler0.new JFinalStatViewServlet();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("/").when(httpServletRequest0).getContextPath();
      doReturn("jmxUsername").when(httpServletRequest0).getRequestURI();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      druidStatViewHandler_JFinalStatViewServlet0.service((HttpServletRequest) httpServletRequestWrapper0, (HttpServletResponse) httpServletResponseWrapper0);
      assertFalse(druidStatViewHandler_JFinalStatViewServlet0.isRequireAuth());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DruidStatViewHandler druidStatViewHandler0 = null;
      try {
        druidStatViewHandler0 = new DruidStatViewHandler("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // visitPath can not be blank
         //
         verifyException("com.jfinal.plugin.druid.DruidStatViewHandler", e);
      }
  }
}
