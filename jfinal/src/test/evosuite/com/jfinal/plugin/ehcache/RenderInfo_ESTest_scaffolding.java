/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Apr 18 12:51:16 GMT 2018
 */

package com.jfinal.plugin.ehcache;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class RenderInfo_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.jfinal.plugin.ehcache.RenderInfo"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/agudek/Documents/STRE/final_project/jfinal"); 
    java.lang.System.setProperty("user.home", "/home/agudek"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "agudek"); 
    java.lang.System.setProperty("user.timezone", "Europe/Amsterdam"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(RenderInfo_ESTest_scaffolding.class.getClassLoader() ,
      "freemarker.template.TemplateMethodModel",
      "freemarker.ext.beans.BeansWrapper",
      "freemarker.ext.beans._EnumModels",
      "freemarker.template.TemplateHashModel",
      "com.jfinal.render.TextRender",
      "org.apache.log4j.DefaultCategoryFactory",
      "com.jfinal.render.FreeMarkerRender",
      "org.apache.log4j.or.RendererMap",
      "freemarker.core._ConcurrentMapFactory",
      "com.jfinal.render.JsonRender",
      "freemarker.ext.beans.JavaRebelIntegration",
      "freemarker.template.utility.NormalizeNewlines",
      "org.apache.velocity.context.Context",
      "org.apache.log4j.Level",
      "freemarker.template.utility.NullArgumentException",
      "org.apache.velocity.exception.VelocityException",
      "com.jfinal.core.JFinal",
      "freemarker.ext.beans.OverloadedMethodsSubset",
      "freemarker.log._Log4JLoggerFactory$Log4JLogger",
      "freemarker.core.Configurable$UnknownSettingException",
      "com.jfinal.render.ContentType",
      "com.jfinal.plugin.ehcache.RenderInfo",
      "freemarker.cache.TemplateLoader",
      "org.apache.log4j.CategoryKey",
      "freemarker.template.utility.StandardCompress",
      "freemarker.cache.TemplateCache$CachedTemplate",
      "freemarker.cache.SoftCacheStorage",
      "freemarker.template.TemplateExceptionHandler$1",
      "freemarker.template.TemplateExceptionHandler$2",
      "freemarker.template.utility.StandardCompress$StandardCompressWriter",
      "freemarker.ext.beans.StaticModels",
      "freemarker.template.utility.CaptureOutput$1",
      "freemarker.template.utility.HtmlEscape",
      "freemarker.ext.beans.SimpleMethodModel",
      "freemarker.template.TemplateException",
      "freemarker.ext.util.ModelCache",
      "freemarker.ext.beans.CollectionAdapter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.ProvisionNode",
      "freemarker.template.AdapterTemplateModel",
      "org.apache.log4j.Hierarchy",
      "freemarker.ext.beans.BeanModel$1",
      "freemarker.cache.ConcurrentCacheStorage",
      "freemarker.ext.beans.BeansWrapper$MethodAppearanceDecision",
      "freemarker.core.Configurable",
      "org.apache.log4j.helpers.FileWatchdog",
      "freemarker.core.Environment",
      "freemarker.cache.FileTemplateLoader$1",
      "freemarker.ext.beans.MethodUtilities",
      "freemarker.template.TemplateExceptionHandler$3",
      "freemarker.template.TemplateExceptionHandler$4",
      "freemarker.template.TemplateScalarModel",
      "freemarker.ext.beans.BeansWrapper$MethodSignature",
      "freemarker.template.utility.NormalizeNewlines$1",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "freemarker.template.Version",
      "org.apache.log4j.spi.RootLogger",
      "com.jfinal.render.JsonRender$1",
      "org.apache.velocity.exception.ParseErrorException",
      "freemarker.template.TemplateModel",
      "org.apache.log4j.spi.RendererSupport",
      "freemarker.template.SimpleObjectWrapper",
      "com.jfinal.server.IServer",
      "freemarker.ext.beans.SequenceAdapter",
      "freemarker.ext.beans.ClassBasedModelFactory",
      "com.jfinal.render.XmlRender",
      "freemarker.template.TemplateTransformModel",
      "freemarker.template.utility.HtmlEscape$1",
      "freemarker.template.Configuration",
      "freemarker.template.TemplateSequenceModel",
      "com.jfinal.plugin.activerecord.ModelRecordElResolver",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.velocity.exception.ResourceNotFoundException",
      "freemarker.template.TemplateExceptionHandler",
      "freemarker.core._MiscTemplateException",
      "freemarker.template.utility.SecurityUtilities",
      "freemarker.template.utility.XmlEscape$1",
      "freemarker.template.TemplateMethodModelEx",
      "org.apache.log4j.or.ObjectRenderer",
      "freemarker.ext.util.ModelFactory",
      "freemarker.log._Log4JLoggerFactory",
      "com.jfinal.render.Render",
      "org.apache.log4j.Logger",
      "freemarker.ext.beans.SetAdapter",
      "com.jfinal.handler.Handler",
      "freemarker.template.utility.CaptureOutput",
      "freemarker.template.SimpleScalar",
      "com.jfinal.render.JspRender",
      "freemarker.template.TemplateHashModelEx",
      "freemarker.template.Template$WrongEncodingException",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.Category",
      "freemarker.ext.beans.BooleanModel",
      "freemarker.ext.beans.BeanModel",
      "freemarker.ext.beans.HashAdapter",
      "freemarker.cache.StatefulTemplateLoader",
      "com.jfinal.render.TemplateRender",
      "freemarker.template.utility.ClassUtil",
      "freemarker.ext.util.WrapperTemplateModel",
      "freemarker.ext.beans.OverloadedFixArgMethods",
      "freemarker.cache.CacheStorage",
      "freemarker.ext.beans.BeansModelCache",
      "freemarker.template.utility.UndeclaredThrowableException",
      "org.apache.log4j.spi.RepositorySelector",
      "freemarker.ext.beans.InvalidPropertyException",
      "freemarker.log.Logger",
      "com.jfinal.render.HtmlRender",
      "freemarker.core.ParseException",
      "org.apache.log4j.spi.LoggerFactory",
      "org.apache.log4j.spi.Configurator",
      "freemarker.cache.TemplateCache",
      "freemarker.ext.beans.OverloadedVarargMethods",
      "org.apache.log4j.or.DefaultRenderer",
      "freemarker.core.TemplateClassResolver",
      "com.jfinal.core.ActionHandler",
      "freemarker.template.TemplateModelException",
      "org.apache.log4j.PropertyWatchdog",
      "freemarker.template.TemplateCollectionModel",
      "freemarker.log.LoggerFactory",
      "freemarker.cache.TemplateCache$TemplateKey",
      "org.apache.log4j.spi.ThrowableRendererSupport",
      "freemarker.ext.beans.OverloadedMethods",
      "org.apache.log4j.PropertyConfigurator",
      "freemarker.template.DefaultObjectWrapper",
      "com.jfinal.render.VelocityRender",
      "freemarker.template.Template",
      "freemarker.core.ArithmeticEngine$BigDecimalEngine",
      "freemarker.ext.beans.BeansWrapper$1",
      "freemarker.template.TemplateNumberModel",
      "freemarker.core.ArithmeticEngine",
      "freemarker.ext.beans.BeansWrapper$3",
      "freemarker.ext.beans.BeansWrapper$2",
      "freemarker.core.ArithmeticEngine$ConservativeEngine",
      "freemarker.core.FMParserConstants",
      "org.apache.log4j.spi.AppenderAttachable",
      "freemarker.template.utility.SecurityUtilities$1",
      "freemarker.ext.beans.SimpleMemberModel",
      "freemarker.core.TemplateClassResolver$3",
      "freemarker.template.utility.XmlEscape",
      "freemarker.template.TemplateModelAdapter",
      "org.apache.log4j.Priority",
      "freemarker.core.TemplateClassResolver$1",
      "freemarker.core.TemplateClassResolver$2",
      "org.apache.log4j.spi.LoggerRepository",
      "com.jfinal.render.RenderException",
      "org.apache.log4j.LogManager",
      "freemarker.cache.FileTemplateLoader",
      "freemarker.template.ObjectWrapper",
      "freemarker.template.TemplateBooleanModel"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(RenderInfo_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.jfinal.plugin.ehcache.RenderInfo",
      "com.jfinal.render.Render",
      "com.jfinal.render.TextRender",
      "com.jfinal.render.JsonRender$1",
      "com.jfinal.render.JsonRender",
      "com.jfinal.render.JsonRender$2",
      "com.jfinal.kit.JsonKit",
      "com.jfinal.json.JFinalJsonFactory",
      "com.jfinal.json.Json",
      "com.jfinal.json.JFinalJson",
      "com.jfinal.render.FileRender",
      "com.jfinal.kit.StrKit",
      "com.jfinal.render.QrCodeRender",
      "com.jfinal.render.JavascriptRender",
      "com.jfinal.core.JFinal",
      "com.jfinal.render.RedirectRender",
      "com.jfinal.render.Redirect301Render",
      "com.jfinal.render.TemplateRender",
      "com.jfinal.render.XmlRender",
      "freemarker.core.Configurable",
      "freemarker.template.Version",
      "freemarker.template.TemplateExceptionHandler$1",
      "freemarker.template.TemplateExceptionHandler$2",
      "freemarker.template.TemplateExceptionHandler$3",
      "freemarker.template.TemplateExceptionHandler$4",
      "freemarker.template.TemplateExceptionHandler",
      "freemarker.core.ArithmeticEngine$BigDecimalEngine",
      "freemarker.core.ArithmeticEngine$ConservativeEngine",
      "freemarker.core.ArithmeticEngine",
      "freemarker.ext.beans.HashAdapter",
      "freemarker.ext.beans.SequenceAdapter",
      "freemarker.ext.beans.CollectionAdapter",
      "freemarker.ext.beans.SetAdapter",
      "freemarker.log.Logger",
      "freemarker.template.utility.ClassUtil",
      "org.apache.log4j.Category",
      "org.apache.log4j.Logger",
      "freemarker.log._Log4JLoggerFactory",
      "freemarker.log._Log4JLoggerFactory$Log4JLogger",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.log4j.Priority",
      "org.apache.log4j.Level",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.ProvisionNode",
      "freemarker.template.utility.SecurityUtilities",
      "freemarker.template.utility.SecurityUtilities$1",
      "freemarker.ext.beans.ClassBasedModelFactory",
      "freemarker.ext.beans._EnumModels",
      "freemarker.core._ConcurrentMapFactory",
      "freemarker.ext.beans.StaticModels",
      "freemarker.ext.util.ModelCache",
      "freemarker.ext.beans.BeansModelCache",
      "freemarker.template.SimpleScalar",
      "freemarker.ext.beans.BeanModel$1",
      "freemarker.ext.beans.BeanModel",
      "freemarker.ext.beans.BooleanModel",
      "freemarker.ext.beans.BeansWrapper$MethodSignature",
      "freemarker.ext.beans.BeansWrapper$MethodAppearanceDecision",
      "freemarker.ext.beans.OverloadedMethods",
      "freemarker.ext.beans.OverloadedMethodsSubset",
      "freemarker.ext.beans.OverloadedFixArgMethods",
      "freemarker.ext.beans.MethodUtilities",
      "freemarker.ext.beans.BeansWrapper$1",
      "freemarker.ext.beans.BeansWrapper$2",
      "freemarker.ext.beans.BeansWrapper$3",
      "freemarker.ext.beans.BeansWrapper",
      "freemarker.template.DefaultObjectWrapper",
      "freemarker.template.SimpleObjectWrapper",
      "freemarker.template.ObjectWrapper",
      "freemarker.core.TemplateClassResolver$1",
      "freemarker.core.TemplateClassResolver$2",
      "freemarker.core.TemplateClassResolver$3",
      "freemarker.core.TemplateClassResolver",
      "freemarker.template.utility.NullArgumentException",
      "freemarker.cache.TemplateCache",
      "freemarker.cache.FileTemplateLoader",
      "freemarker.cache.FileTemplateLoader$1",
      "freemarker.cache.SoftCacheStorage",
      "freemarker.template.utility.CaptureOutput",
      "freemarker.template.utility.StandardCompress",
      "freemarker.template.utility.HtmlEscape",
      "freemarker.template.utility.NormalizeNewlines",
      "freemarker.template.utility.XmlEscape",
      "freemarker.template.Configuration",
      "com.jfinal.render.FreeMarkerRender",
      "com.jfinal.render.VelocityRender",
      "com.jfinal.plugin.activerecord.ModelRecordElResolver",
      "com.jfinal.render.JspRender",
      "com.jfinal.render.RenderException",
      "com.jfinal.render.HtmlRender",
      "com.jfinal.render.ErrorRender",
      "com.jfinal.render.NullRender",
      "org.apache.velocity.app.Velocity",
      "org.apache.velocity.runtime.RuntimeInstance",
      "org.apache.velocity.runtime.log.Log",
      "org.apache.velocity.runtime.log.HoldingLogChute",
      "org.apache.commons.collections.ExtendedProperties",
      "org.apache.velocity.runtime.VelocimacroFactory",
      "org.apache.velocity.runtime.log.LogDisplayWrapper",
      "org.apache.velocity.runtime.VelocimacroManager",
      "org.apache.velocity.util.MapFactory",
      "org.apache.velocity.util.introspection.IntrospectorBase",
      "org.apache.velocity.util.introspection.Introspector",
      "org.apache.velocity.util.introspection.IntrospectorCacheImpl",
      "org.apache.velocity.runtime.RuntimeSingleton",
      "freemarker.cache.WebappTemplateLoader",
      "freemarker.template.TemplateException",
      "freemarker.core._MiscTemplateException",
      "freemarker.core.Configurable$UnknownSettingException",
      "freemarker.core.Environment$6",
      "freemarker.core.Environment",
      "freemarker.core._DelayedConversionToString",
      "freemarker.core._DelayedJQuote",
      "freemarker.core._ErrorDescriptionBuilder",
      "freemarker.core._CoreAPI",
      "freemarker.core.TemplateObject",
      "freemarker.core.Expression",
      "freemarker.core.NumericalBuiltins$NumberBuiltIn",
      "freemarker.core.NumericalBuiltins$absBI",
      "freemarker.core.NodeBuiltins$NodeBuiltIn",
      "freemarker.core.NodeBuiltins$ancestorsBI",
      "freemarker.core.NumericalBuiltins$byteBI",
      "freemarker.core.MiscellaneousBuiltins$cBI",
      "freemarker.core.StringBuiltins$StringBuiltIn",
      "freemarker.core.StringBuiltins$cap_firstBI",
      "freemarker.core.StringBuiltins$capitalizeBI",
      "freemarker.core.NumericalBuiltins$ceilingBI",
      "freemarker.core.NodeBuiltins$childrenBI",
      "freemarker.core.StringBuiltins$chop_linebreakBI",
      "freemarker.core.StringBuiltins$containsBI",
      "freemarker.core.MiscellaneousBuiltins$dateBI",
      "freemarker.core.ExistenceBuiltins$ExistenceBuiltIn",
      "freemarker.core.ExistenceBuiltins$defaultBI$1",
      "freemarker.core.ExistenceBuiltins$defaultBI",
      "freemarker.core.NumericalBuiltins$doubleBI",
      "freemarker.core.StringBuiltins$ends_withBI",
      "freemarker.core.StringBuiltins$evalBI",
      "freemarker.core.ExistenceBuiltins$existsBI",
      "freemarker.core.SequenceBuiltins$SequenceBuiltIn",
      "freemarker.core.SequenceBuiltins$firstBI",
      "freemarker.core.NumericalBuiltins$floatBI",
      "freemarker.core.NumericalBuiltins$floorBI",
      "freemarker.core.SequenceBuiltins$chunkBI",
      "freemarker.core.ExistenceBuiltins$has_contentBI",
      "freemarker.core.StringBuiltins$htmlBI",
      "freemarker.core.StringBuiltins$htmlBI$BIBeforeICE2d3d20",
      "freemarker.core.ExistenceBuiltins$if_existsBI",
      "freemarker.core.StringBuiltins$index_ofBI",
      "freemarker.core.NumericalBuiltins$intBI",
      "freemarker.core.Interpret",
      "freemarker.core.MiscellaneousBuiltins$is_booleanBI",
      "freemarker.core.MiscellaneousBuiltins$is_collectionBI",
      "freemarker.core.MiscellaneousBuiltins$is_dateBI",
      "freemarker.core.MiscellaneousBuiltins$is_directiveBI",
      "freemarker.core.MiscellaneousBuiltins$is_enumerableBI",
      "freemarker.core.MiscellaneousBuiltins$is_hash_exBI",
      "freemarker.core.MiscellaneousBuiltins$is_hashBI",
      "freemarker.core.NumericalBuiltins$is_infiniteBI",
      "freemarker.core.MiscellaneousBuiltins$is_indexableBI",
      "freemarker.core.MiscellaneousBuiltins$is_macroBI",
      "freemarker.core.MiscellaneousBuiltins$is_methodBI",
      "freemarker.core.NumericalBuiltins$is_nanBI",
      "freemarker.core.MiscellaneousBuiltins$is_nodeBI",
      "freemarker.core.MiscellaneousBuiltins$is_numberBI",
      "freemarker.core.MiscellaneousBuiltins$is_sequenceBI",
      "freemarker.core.MiscellaneousBuiltins$is_stringBI",
      "freemarker.core.MiscellaneousBuiltins$is_transformBI",
      "freemarker.core.DateBuiltins$DateBuiltin",
      "freemarker.core.DateBuiltins$AbstractISOBI",
      "freemarker.core.DateBuiltins$iso_tz_BI",
      "freemarker.core.DateBuiltins$iso_BI",
      "freemarker.core.StringBuiltins$j_stringBI",
      "freemarker.core.SequenceBuiltins$joinBI",
      "freemarker.core.StringBuiltins$js_stringBI",
      "freemarker.core.StringBuiltins$json_stringBI",
      "freemarker.core.HashBuiltins$HashExBuiltin",
      "freemarker.core.HashBuiltins$keysBI",
      "freemarker.core.SequenceBuiltins$lastBI",
      "freemarker.core.StringBuiltins$padBI",
      "freemarker.core.StringBuiltins$lengthBI",
      "freemarker.core.NumericalBuiltins$longBI",
      "freemarker.core.StringBuiltins$lower_caseBI",
      "freemarker.core.MiscellaneousBuiltins$namespaceBI",
      "freemarker.core.NewBI",
      "freemarker.core.NodeBuiltins$node_nameBI",
      "freemarker.core.NodeBuiltins$node_namespaceBI",
      "freemarker.core.NodeBuiltins$node_typeBI",
      "freemarker.core.StringBuiltins$numberBI",
      "freemarker.core.NumericalBuiltins$number_to_dateBI",
      "freemarker.core.NodeBuiltins$parentBI",
      "freemarker.core.StringBuiltins$replaceBI",
      "freemarker.core.SequenceBuiltins$reverseBI",
      "freemarker.core.NodeBuiltins$rootBI",
      "freemarker.core.NumericalBuiltins$roundBI",
      "freemarker.core.StringBuiltins$rtfBI",
      "freemarker.core.SequenceBuiltins$seq_containsBI",
      "freemarker.core.SequenceBuiltins$seq_index_ofBI",
      "freemarker.core.NumericalBuiltins$shortBI",
      "freemarker.core.MiscellaneousBuiltins$sizeBI",
      "freemarker.core.SequenceBuiltins$sortBI",
      "freemarker.core.SequenceBuiltins$sort_byBI",
      "freemarker.core.StringBuiltins$splitBI",
      "freemarker.core.StringBuiltins$starts_withBI",
      "freemarker.core.MiscellaneousBuiltins$stringBI",
      "freemarker.core.StringBuiltins$substringBI",
      "freemarker.core.StringBuiltins$trimBI",
      "freemarker.core.StringBuiltins$uncap_firstBI",
      "freemarker.core.StringBuiltins$upper_caseBI",
      "freemarker.core.StringBuiltins$urlBI",
      "freemarker.core.HashBuiltins$valuesBI",
      "freemarker.core.StringBuiltins$word_listBI",
      "freemarker.core.StringBuiltins$xhtmlBI",
      "freemarker.core.StringBuiltins$xmlBI",
      "freemarker.core._RegexBuiltins$matchesBI",
      "freemarker.core._RegexBuiltins$groupsBI",
      "freemarker.core._RegexBuiltins$replace_reBI",
      "freemarker.core._RegexBuiltins$split_reBI",
      "freemarker.core.BuiltIn",
      "com.jfinal.render.RenderManager",
      "freemarker.ext.beans.StringModel$1",
      "freemarker.ext.beans.StringModel",
      "freemarker.ext.beans.SimpleMemberModel",
      "com.google.zxing.EncodeHintType",
      "com.google.zxing.qrcode.QRCodeWriter",
      "com.google.zxing.BarcodeFormat",
      "com.google.zxing.qrcode.encoder.Encoder",
      "com.google.zxing.qrcode.decoder.Mode",
      "com.google.zxing.common.BitArray",
      "com.google.zxing.common.CharacterSetECI",
      "com.google.zxing.qrcode.encoder.Encoder$1",
      "com.google.zxing.qrcode.decoder.Version$ECBlocks",
      "com.google.zxing.qrcode.decoder.Version$ECB",
      "com.google.zxing.qrcode.decoder.Version",
      "com.google.zxing.common.reedsolomon.ReedSolomonEncoder",
      "com.google.zxing.common.reedsolomon.GenericGFPoly",
      "com.google.zxing.common.reedsolomon.GenericGF",
      "com.google.zxing.qrcode.encoder.BlockPair",
      "com.google.zxing.qrcode.encoder.QRCode",
      "com.google.zxing.qrcode.encoder.ByteMatrix",
      "com.google.zxing.qrcode.encoder.MatrixUtil",
      "com.google.zxing.qrcode.encoder.MaskUtil",
      "com.google.zxing.common.BitMatrix",
      "freemarker.template.SimpleNumber",
      "com.google.zxing.client.j2se.MatrixToImageConfig",
      "com.google.zxing.client.j2se.MatrixToImageWriter",
      "com.jfinal.render.ContentType"
    );
  }
}
