/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Apr 18 14:33:36 GMT 2018
 */

package com.jfinal.plugin.ehcache;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class EhCachePlugin_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.jfinal.plugin.ehcache.EhCachePlugin"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/agudek/Documents/STRE/final_project/jfinal"); 
    java.lang.System.setProperty("user.home", "/home/agudek"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "agudek"); 
    java.lang.System.setProperty("user.timezone", "Europe/Amsterdam"); 
    java.lang.System.setProperty("sun.management.compiler", "HotSpot 64-Bit Tiered Compilers"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
    java.lang.System.setProperty("sun.arch.data.model", "64"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(EhCachePlugin_ESTest_scaffolding.class.getClassLoader() ,
      "net.sf.ehcache.terracotta.TerracottaClient$RejoinRequestHolder",
      "net.sf.ehcache.constructs.nonstop.NonStopCacheException",
      "org.apache.log4j.DefaultCategoryFactory",
      "net.sf.ehcache.config.Configuration$Monitoring",
      "net.sf.ehcache.CacheManager$1",
      "org.apache.log4j.or.RendererMap",
      "net.sf.ehcache.transaction.manager.selector.NullSelector",
      "net.sf.ehcache.config.ConfigurationHelper",
      "net.sf.ehcache.CacheManager$2",
      "net.sf.ehcache.util.PropertyUtil",
      "net.sf.ehcache.config.SizeOfPolicyConfiguration",
      "net.sf.ehcache.transaction.manager.selector.ClassSelector",
      "net.sf.ehcache.constructs.nonstop.NonstopExecutorServiceFactory",
      "net.sf.ehcache.transaction.manager.selector.GenericJndiSelector",
      "net.sf.ehcache.config.SizeOfPolicyConfiguration$MaxDepthExceededBehavior",
      "org.apache.log4j.Level",
      "net.sf.ehcache.management.provider.MBeanRegistrationProviderImpl",
      "net.sf.ehcache.event.CacheEventListener",
      "net.sf.ehcache.terracotta.TerracottaClient",
      "net.sf.ehcache.config.DiskStoreConfiguration",
      "net.sf.ehcache.config.Configuration$RuntimeCfg",
      "net.sf.ehcache.store.Store",
      "net.sf.ehcache.terracotta.TerracottaCacheCluster",
      "net.sf.ehcache.DiskStorePathManager",
      "net.sf.ehcache.terracotta.InternalEhcache",
      "net.sf.ehcache.TransactionController$TransactionControllerStatistics",
      "org.apache.log4j.CategoryKey",
      "com.jfinal.plugin.ehcache.EhCachePlugin",
      "net.sf.ehcache.Cache",
      "net.sf.ehcache.constructs.nonstop.NonstopExecutorService",
      "net.sf.ehcache.util.lang.VicariousThreadLocal",
      "net.sf.ehcache.transaction.TransactionIDFactory",
      "net.sf.ehcache.distribution.CacheManagerPeerListener",
      "net.sf.ehcache.management.provider.MBeanRegistrationProviderException",
      "net.sf.ehcache.transaction.manager.TransactionManagerLookup",
      "net.sf.ehcache.config.Configuration",
      "net.sf.ehcache.CacheManager",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.ProvisionNode",
      "net.sf.ehcache.CacheException",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.helpers.FileWatchdog",
      "net.sf.ehcache.transaction.SoftLockManager",
      "net.sf.ehcache.transaction.manager.DefaultTransactionManagerLookup",
      "net.sf.ehcache.EhcacheCoreInit",
      "net.sf.ehcache.EhcacheInit",
      "net.sf.ehcache.FeaturesManager",
      "com.jfinal.plugin.IPlugin",
      "net.sf.ehcache.constructs.nonstop.CacheManagerExecutorServiceFactory",
      "net.sf.ehcache.pool.PoolEvictor",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "net.sf.ehcache.config.CacheConfiguration",
      "org.apache.log4j.spi.RootLogger",
      "net.sf.ehcache.util.ClassLoaderUtil",
      "net.sf.ehcache.management.provider.MBeanRegistrationProviderFactory",
      "net.sf.ehcache.transaction.manager.selector.JndiSelector",
      "net.sf.ehcache.transaction.manager.selector.FactorySelector",
      "org.apache.log4j.spi.RendererSupport",
      "com.jfinal.plugin.ehcache.IDataLoader",
      "net.sf.ehcache.distribution.CacheManagerPeerProvider",
      "com.jfinal.plugin.ehcache.CacheKit",
      "net.sf.ehcache.config.FactoryConfiguration",
      "net.sf.ehcache.config.Configuration$DynamicProperty",
      "net.sf.ehcache.TransactionController",
      "com.jfinal.log.ILogFactory",
      "net.sf.ehcache.cluster.ClusterSchemeNotAvailableException",
      "org.apache.log4j.helpers.OptionConverter",
      "net.sf.ehcache.management.provider.MBeanRegistrationProviderImpl$1",
      "net.sf.ehcache.Ehcache",
      "net.sf.ehcache.transaction.xa.EhcacheXAException",
      "net.sf.ehcache.Status",
      "net.sf.ehcache.terracotta.TerracottaClient$RejoinWorker",
      "net.sf.ehcache.pool.SizeOfEngine",
      "org.apache.log4j.or.ObjectRenderer",
      "net.sf.ehcache.config.MemoryUnit",
      "net.sf.ehcache.transaction.TransactionTimeoutException",
      "net.sf.ehcache.store.StoreListener",
      "org.apache.log4j.Logger",
      "net.sf.ehcache.constructs.nonstop.NonstopActiveDelegateHolder",
      "net.sf.ehcache.transaction.SoftLockFactory",
      "net.sf.ehcache.transaction.manager.selector.BitronixSelector",
      "net.sf.ehcache.transaction.manager.selector.GlassfishSelector",
      "net.sf.ehcache.transaction.manager.selector.AtomikosSelector",
      "net.sf.ehcache.terracotta.TerracottaClient$RejoinStatus",
      "org.apache.log4j.helpers.LogLog",
      "net.sf.ehcache.writer.writebehind.WriteBehind",
      "org.apache.log4j.Category",
      "net.sf.ehcache.transaction.manager.selector.Selector",
      "com.alibaba.druid.mock.MockClob",
      "net.sf.ehcache.cluster.ClusterNode",
      "com.alibaba.druid.mock.MockNClob",
      "net.sf.ehcache.config.ManagementRESTServiceConfiguration",
      "net.sf.ehcache.transaction.TransactionException",
      "org.apache.log4j.spi.RepositorySelector",
      "net.sf.ehcache.cluster.ClusterScheme",
      "org.apache.log4j.spi.LoggerFactory",
      "org.apache.log4j.spi.Configurator",
      "net.sf.ehcache.cluster.CacheCluster",
      "net.sf.ehcache.DiskStorePathManager$DiskstoreNotExclusiveException",
      "net.sf.ehcache.event.CacheManagerEventListenerRegistry",
      "net.sf.ehcache.config.InvalidConfigurationException",
      "org.apache.log4j.or.DefaultRenderer",
      "net.sf.ehcache.ObjectExistsException",
      "net.sf.ehcache.event.CacheManagerEventListener",
      "net.sf.ehcache.util.UpdateChecker",
      "net.sf.ehcache.util.lang.VicariousThreadLocal$Holder",
      "net.sf.ehcache.config.DiskStoreConfiguration$Env",
      "net.sf.ehcache.management.provider.MBeanRegistrationProviderFactoryImpl",
      "org.apache.log4j.PropertyWatchdog",
      "com.jfinal.log.Log4jLogFactory",
      "org.apache.log4j.spi.ThrowableRendererSupport",
      "org.apache.log4j.PropertyConfigurator",
      "net.sf.ehcache.LibraryInit",
      "net.sf.ehcache.transaction.manager.selector.WeblogicSelector",
      "net.sf.ehcache.terracotta.ClusteredInstanceFactory",
      "net.sf.ehcache.transaction.DelegatingTransactionIDFactory",
      "net.sf.ehcache.pool.Pool",
      "net.sf.ehcache.CacheManager$CacheRejoinAction",
      "com.jfinal.log.Log",
      "net.sf.ehcache.config.TerracottaClientConfiguration",
      "net.sf.ehcache.config.BeanHandler",
      "net.sf.ehcache.config.ConfigurationFactory",
      "net.sf.ehcache.terracotta.TerracottaClient$RejoinStatus$RejoinState",
      "org.apache.log4j.spi.AppenderAttachable",
      "net.sf.ehcache.config.generator.ConfigurationSource",
      "net.sf.ehcache.config.Configuration$1",
      "net.sf.ehcache.transaction.xa.processor.XARequestProcessor",
      "net.sf.ehcache.util.FailSafeTimer",
      "net.sf.ehcache.transaction.local.LocalRecoveryManager",
      "org.apache.log4j.Priority",
      "net.sf.ehcache.cluster.ClusterTopologyListener",
      "org.apache.log4j.spi.LoggerRepository",
      "net.sf.ehcache.management.provider.MBeanRegistrationProvider",
      "org.apache.log4j.LogManager",
      "net.sf.ehcache.terracotta.TerracottaClientRejoinListener",
      "com.jfinal.log.Log4jLog"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(EhCachePlugin_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.jfinal.plugin.ehcache.EhCachePlugin",
      "org.apache.log4j.Category",
      "org.apache.log4j.Logger",
      "com.jfinal.log.Log4jLogFactory",
      "com.jfinal.log.Log",
      "net.sf.ehcache.management.provider.MBeanRegistrationProviderFactoryImpl",
      "net.sf.ehcache.CacheManager",
      "net.sf.ehcache.config.ConfigurationFactory",
      "net.sf.ehcache.config.generator.ConfigurationSource",
      "net.sf.ehcache.config.generator.ConfigurationSource$DefaultConfigurationSource",
      "net.sf.ehcache.config.SizeOfPolicyConfiguration",
      "net.sf.ehcache.config.FactoryConfiguration",
      "net.sf.ehcache.config.Configuration",
      "net.sf.ehcache.config.BeanHandler",
      "net.sf.ehcache.CacheException",
      "net.sf.ehcache.util.ClassLoaderUtil",
      "com.alibaba.druid.support.monitor.annotation.AggregateType",
      "net.sf.ehcache.event.CacheManagerEventListenerRegistry",
      "net.sf.ehcache.Status",
      "net.sf.ehcache.constructs.nonstop.CacheManagerExecutorServiceFactory",
      "net.sf.ehcache.CacheManager$CacheRejoinAction",
      "net.sf.ehcache.LibraryInit",
      "net.sf.ehcache.EhcacheCoreInit",
      "com.alibaba.druid.mock.MockSQLXML",
      "net.sf.ehcache.config.ManagementRESTServiceConfiguration",
      "net.sf.ehcache.config.Configuration$RuntimeCfg",
      "net.sf.ehcache.util.PropertyUtil",
      "net.sf.ehcache.transaction.manager.DefaultTransactionManagerLookup",
      "net.sf.ehcache.transaction.manager.selector.Selector",
      "net.sf.ehcache.transaction.manager.selector.JndiSelector",
      "net.sf.ehcache.transaction.manager.selector.GenericJndiSelector",
      "net.sf.ehcache.transaction.manager.selector.GlassfishSelector",
      "net.sf.ehcache.transaction.manager.selector.FactorySelector",
      "net.sf.ehcache.transaction.manager.selector.WeblogicSelector",
      "net.sf.ehcache.transaction.manager.selector.BitronixSelector",
      "net.sf.ehcache.transaction.manager.selector.ClassSelector",
      "net.sf.ehcache.transaction.manager.selector.AtomikosSelector",
      "net.sf.ehcache.terracotta.TerracottaClient",
      "net.sf.ehcache.terracotta.TerracottaCacheCluster",
      "net.sf.ehcache.terracotta.TerracottaClient$RejoinWorker",
      "net.sf.ehcache.terracotta.TerracottaClient$RejoinStatus",
      "net.sf.ehcache.terracotta.TerracottaClient$RejoinStatus$RejoinState",
      "net.sf.ehcache.terracotta.TerracottaClient$RejoinRequestHolder",
      "net.sf.ehcache.config.ConfigurationHelper",
      "net.sf.ehcache.DiskStorePathManager",
      "net.sf.ehcache.config.DiskStoreConfiguration",
      "net.sf.ehcache.config.DiskStoreConfiguration$Env",
      "net.sf.ehcache.TransactionController",
      "net.sf.ehcache.transaction.DelegatingTransactionIDFactory",
      "net.sf.ehcache.util.lang.VicariousThreadLocal",
      "net.sf.ehcache.TransactionController$TransactionControllerStatistics",
      "net.sf.ehcache.transaction.local.LocalRecoveryManager",
      "net.sf.ehcache.util.FailSafeTimer",
      "net.sf.ehcache.util.UpdateChecker",
      "net.sf.ehcache.management.provider.MBeanRegistrationProviderImpl",
      "net.sf.ehcache.management.provider.MBeanRegistrationProviderImpl$1",
      "net.sf.ehcache.CacheManager$1",
      "net.sf.ehcache.transaction.xa.processor.XARequestProcessor",
      "com.alibaba.druid.proxy.DruidDriver$1",
      "com.alibaba.druid.proxy.DruidDriver",
      "com.alibaba.druid.mock.handler.MySqlMockExecuteHandlerImpl",
      "com.alibaba.druid.mock.MockDriver",
      "org.hsqldb.jdbc.JDBCDriver",
      "com.alibaba.druid.pool.WrapperAdapter",
      "com.alibaba.druid.support.logging.Resources",
      "com.alibaba.druid.support.logging.Log4jImpl",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.log4j.Priority",
      "org.apache.log4j.Level",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.ProvisionNode",
      "com.alibaba.druid.support.logging.LogFactory",
      "com.alibaba.druid.pool.DruidAbstractDataSource",
      "com.alibaba.druid.pool.DruidDataSource",
      "com.alibaba.druid.util.Histogram",
      "com.alibaba.druid.pool.DruidDataSourceStatLoggerAdapter",
      "com.alibaba.druid.pool.DruidDataSourceStatLoggerImpl",
      "com.alibaba.druid.util.Utils",
      "com.alibaba.druid.util.jdbc.ConnectionBase",
      "com.alibaba.druid.mock.MockConnection",
      "com.alibaba.druid.pool.DruidConnectionHolder",
      "com.alibaba.druid.pool.PoolableWrapper",
      "com.alibaba.druid.pool.DruidPooledConnection",
      "com.alibaba.druid.pool.DruidPooledPreparedStatement$PreparedStatementKey",
      "com.alibaba.druid.util.jdbc.StatementBase",
      "com.alibaba.druid.util.jdbc.PreparedStatementBase",
      "com.alibaba.druid.mock.MockPreparedStatement",
      "com.alibaba.druid.mock.MockCallableStatement",
      "com.alibaba.druid.mock.MockParameterMetaData",
      "com.alibaba.druid.util.jdbc.ResultSetMetaDataBase",
      "com.alibaba.druid.mock.MockResultSetMetaData",
      "com.alibaba.druid.pool.PreparedStatementHolder",
      "com.alibaba.druid.pool.DruidPooledStatement",
      "com.alibaba.druid.pool.DruidPooledPreparedStatement",
      "com.alibaba.druid.pool.DruidPooledCallableStatement",
      "com.alibaba.druid.mock.MockClob",
      "com.alibaba.druid.mock.MockNClob",
      "com.alibaba.druid.mock.MockBlob",
      "com.alibaba.druid.util.jdbc.ResultSetBase",
      "com.alibaba.druid.mock.MockResultSet",
      "com.alibaba.druid.util.JdbcUtils",
      "net.sf.ehcache.config.generator.ConfigurationSource$URLConfigurationSource",
      "net.sf.ehcache.store.MemoryStoreEvictionPolicy",
      "net.sf.ehcache.config.CacheWriterConfiguration$WriteMode",
      "net.sf.ehcache.config.CacheWriterConfiguration",
      "net.sf.ehcache.config.CopyStrategyConfiguration",
      "net.sf.ehcache.config.CacheConfiguration",
      "net.sf.ehcache.config.ElementValueComparatorConfiguration",
      "net.sf.ehcache.config.generator.ConfigurationSource$FileNameSource",
      "net.sf.ehcache.ObjectExistsException",
      "net.sf.ehcache.Cache",
      "net.sf.ehcache.Cache$CacheStatus",
      "net.sf.ehcache.event.RegisteredEventListeners",
      "net.sf.ehcache.CacheStoreHelper",
      "net.sf.ehcache.statistics.NullLiveCacheStatisticsData",
      "net.sf.ehcache.statistics.LiveCacheStatisticsWrapper",
      "net.sf.ehcache.statistics.LiveCacheStatisticsImpl",
      "net.sf.ehcache.statistics.sampled.NullSampledCacheStatistics",
      "net.sf.ehcache.statistics.sampled.SampledCacheStatisticsWrapper",
      "net.sf.ehcache.Cache$NonstopActiveDelegateHolderImpl",
      "net.sf.ehcache.config.CacheConfiguration$PoolUsage",
      "net.sf.ehcache.pool.impl.UnboundedPool",
      "net.sf.ehcache.store.DefaultElementValueComparator",
      "net.sf.ehcache.store.AbstractStore",
      "net.sf.ehcache.store.FrontEndCacheTier",
      "net.sf.ehcache.store.MemoryOnlyStore",
      "net.sf.ehcache.store.MemoryStore",
      "net.sf.ehcache.store.NotifyingMemoryStore",
      "net.sf.ehcache.store.MemoryStore$BasicBackingFactory",
      "net.sf.ehcache.util.ratestatistics.AbstractRateStatistic",
      "net.sf.ehcache.util.ratestatistics.AtomicRateStatistic",
      "net.sf.ehcache.store.AbstractPolicy",
      "net.sf.ehcache.store.LruPolicy",
      "net.sf.ehcache.pool.impl.UnboundedPool$UnboundedPoolAccessor",
      "net.sf.ehcache.Element",
      "net.sf.ehcache.store.chm.SelectableConcurrentHashMap$DummyPinnedKey",
      "net.sf.ehcache.store.chm.SelectableConcurrentHashMap$DummyPinnedValue",
      "net.sf.ehcache.DefaultElementEvictionData",
      "net.sf.ehcache.store.chm.SelectableConcurrentHashMap",
      "net.sf.ehcache.store.chm.SelectableConcurrentHashMap$Segment",
      "net.sf.ehcache.store.chm.SelectableConcurrentHashMap$SegmentIterator",
      "net.sf.ehcache.store.chm.SelectableConcurrentHashMap$PinnedKeySet",
      "net.sf.ehcache.store.MemoryOnlyStore$BruteForceSearchManager",
      "net.sf.ehcache.store.NullStore",
      "net.sf.ehcache.store.compound.ReadWriteSerializationCopyStrategy",
      "net.sf.ehcache.concurrent.StripedReadWriteLockSync",
      "net.sf.ehcache.concurrent.ReadWriteLockSync",
      "net.sf.ehcache.writer.writethrough.WriteThroughManager",
      "net.sf.ehcache.event.NotificationScope",
      "net.sf.ehcache.event.RegisteredEventListeners$ListenerWrapper",
      "net.sf.ehcache.Statistics",
      "com.jfinal.log.Log4jLog",
      "com.jfinal.plugin.ehcache.CacheKit",
      "net.sf.ehcache.store.chm.SelectableConcurrentHashMap$KeySet",
      "net.sf.ehcache.store.chm.SelectableConcurrentHashMap$HashIterator",
      "net.sf.ehcache.store.chm.SelectableConcurrentHashMap$HashEntryIterator",
      "net.sf.ehcache.store.chm.SelectableConcurrentHashMap$KeyIterator",
      "net.sf.ehcache.config.Configuration$DynamicProperty",
      "net.sf.ehcache.config.TerracottaClientConfiguration",
      "net.sf.ehcache.config.CacheConfiguration$CacheLoaderFactoryConfiguration",
      "com.alibaba.druid.pool.DruidPooledResultSet",
      "net.sf.ehcache.config.InvalidConfigurationException",
      "net.sf.ehcache.config.TimeoutBehaviorConfiguration$TimeoutBehaviorType",
      "net.sf.ehcache.config.TimeoutBehaviorConfiguration",
      "net.sf.ehcache.config.NonstopConfiguration",
      "net.sf.ehcache.config.TerracottaConfiguration$Consistency",
      "net.sf.ehcache.config.TerracottaConfiguration",
      "net.sf.ehcache.config.PersistenceConfiguration",
      "net.sf.ehcache.config.Searchable",
      "net.sf.ehcache.search.Attribute",
      "net.sf.ehcache.search.Query",
      "net.sf.ehcache.config.SearchAttribute",
      "net.sf.ehcache.config.ConfigError",
      "net.sf.ehcache.config.CacheConfigError",
      "com.alibaba.druid.mock.MockStatement",
      "com.alibaba.druid.sql.ast.SQLObjectImpl",
      "com.alibaba.druid.sql.ast.statement.SQLSelectQueryBlock",
      "net.sf.ehcache.config.generator.ConfigurationUtil",
      "net.sf.ehcache.config.generator.model.AbstractDepthFirstVisitor",
      "net.sf.ehcache.config.generator.model.XMLGeneratorVisitor",
      "net.sf.ehcache.config.generator.model.XMLGeneratorVisitor$OutputBehavior",
      "net.sf.ehcache.config.generator.model.AbstractNodeElement",
      "net.sf.ehcache.config.generator.model.SimpleNodeElement",
      "net.sf.ehcache.config.generator.model.elements.ConfigurationElement",
      "net.sf.ehcache.config.generator.model.SimpleNodeAttribute",
      "net.sf.ehcache.config.generator.model.elements.DefaultCacheConfigurationElement",
      "net.sf.ehcache.config.generator.ConfigurationSource$InputStreamConfigurationSource",
      "net.sf.ehcache.pool.impl.AbstractBalancedAccessEvictor",
      "net.sf.ehcache.pool.impl.BalancedAccessOnDiskPoolEvictor",
      "net.sf.ehcache.pool.impl.AbstractPool",
      "net.sf.ehcache.pool.impl.BoundedPool",
      "net.sf.ehcache.config.CacheConfiguration$CacheExtensionFactoryConfiguration",
      "net.sf.ehcache.config.PersistenceConfiguration$Strategy",
      "net.sf.ehcache.config.CacheConfiguration$BootstrapCacheLoaderFactoryConfiguration",
      "net.sf.ehcache.pool.impl.BalancedAccessOnHeapPoolEvictor",
      "net.sf.ehcache.pool.sizeof.filter.AnnotationSizeOfFilter",
      "net.sf.ehcache.pool.sizeof.filter.ResourceSizeOfFilter",
      "net.sf.ehcache.pool.sizeof.filter.CombinationSizeOfFilter",
      "net.sf.ehcache.pool.impl.DefaultSizeOfEngine",
      "net.sf.ehcache.pool.sizeof.SizeOf",
      "net.sf.ehcache.pool.sizeof.AgentLoader$1",
      "net.sf.ehcache.pool.sizeof.AgentLoader",
      "net.sf.ehcache.pool.sizeof.JvmInformation",
      "net.sf.ehcache.pool.sizeof.AgentSizeOf",
      "net.sf.ehcache.pool.sizeof.SizeOf$CachingSizeOfVisitor",
      "net.sf.ehcache.util.WeakIdentityConcurrentMap",
      "net.sf.ehcache.pool.sizeof.ObjectGraphWalker",
      "net.sf.ehcache.pool.sizeof.UnsafeSizeOf",
      "net.sf.ehcache.util.counter.CounterConfig",
      "net.sf.ehcache.util.counter.sampled.SampledCounterConfig",
      "net.sf.ehcache.util.counter.sampled.SampledRateCounterConfig",
      "net.sf.ehcache.store.MemoryLimitedCacheLoader",
      "net.sf.ehcache.terracotta.TerracottaBootstrapCacheLoader",
      "net.sf.ehcache.config.CacheConfiguration$CacheExceptionHandlerFactoryConfiguration",
      "net.sf.ehcache.distribution.RMIBootstrapCacheLoader",
      "net.sf.ehcache.config.PinningConfiguration",
      "net.sf.ehcache.terracotta.TerracottaClusteredInstanceHelper$TerracottaRuntimeType",
      "net.sf.ehcache.terracotta.TerracottaClusteredInstanceHelper",
      "net.sf.ehcache.config.Configuration$Monitoring",
      "net.sf.ehcache.config.SizeOfPolicyConfiguration$MaxDepthExceededBehavior"
    );
  }
}
