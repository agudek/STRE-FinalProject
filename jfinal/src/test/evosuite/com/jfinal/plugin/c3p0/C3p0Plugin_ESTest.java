/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 12:49:39 GMT 2018
 */

package com.jfinal.plugin.c3p0;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.plugin.c3p0.C3p0Plugin;
import com.mchange.v2.c3p0.ComboPooledDataSource;
import java.io.File;
import java.util.Properties;
import javax.sql.DataSource;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class C3p0Plugin_ESTest extends C3p0Plugin_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Integer integer0 = new Integer((-5637));
      Integer integer1 = Integer.valueOf(0);
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("", "pkbdW=<qUz})@VtrH\"", "X7*X<'P:aoxsu9", "pkbdW=<qUz})@VtrH\"", (Integer) null, integer0, integer1, integer0, integer0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer((-5637));
      Integer integer1 = new Integer(0);
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("", "pkbdW=<qUz})@VtrH\"", "X7*X<'P:aoxsu9", "pkbdW=<qUz})@VtrH\"", (Integer) null, integer0, integer0, integer1, integer0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(10);
      Integer integer1 = new Integer(1873);
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("*WI't_1@kP7V.}", "", "", "", integer0, (Integer) null, (Integer) null, (Integer) null, integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("", "", "");
      c3p0Plugin0.start();
      ComboPooledDataSource comboPooledDataSource0 = (ComboPooledDataSource)c3p0Plugin0.getDataSource();
      assertEquals("1hge14a90dw1hk81ekg|2", comboPooledDataSource0.getDataSourceName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("", "", "maxIdleTime", "");
      c3p0Plugin0.start();
      ComboPooledDataSource comboPooledDataSource0 = c3p0Plugin0.getComboPooledDataSource();
      assertEquals(3, comboPooledDataSource0.getNumHelperThreads());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      C3p0Plugin c3p0Plugin0 = null;
      try {
        c3p0Plugin0 = new C3p0Plugin((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("", "", "");
      boolean boolean0 = c3p0Plugin0.start();
      boolean boolean1 = c3p0Plugin0.stop();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Integer integer0 = new Integer(475);
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("Filter key: [", "Filter key: [", "Filter key: [", "Filter key: [", integer0, integer0, integer0, integer0, integer0);
      boolean boolean0 = c3p0Plugin0.stop();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("", "", "maxIdleTime", "");
      boolean boolean0 = c3p0Plugin0.start();
      boolean boolean1 = c3p0Plugin0.start();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      File file0 = MockFile.createTempFile("n;$3:IYZ _SuD", "n;$3:IYZ _SuD");
      C3p0Plugin c3p0Plugin0 = null;
      try {
        c3p0Plugin0 = new C3p0Plugin(file0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockFile mockFile0 = new MockFile("com.jfinal.plugin.c3p0.C3p0Plugin");
      C3p0Plugin c3p0Plugin0 = null;
      try {
        c3p0Plugin0 = new C3p0Plugin(mockFile0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.FileNotFoundException
         //
         verifyException("com.jfinal.plugin.c3p0.C3p0Plugin", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Integer integer0 = new Integer((-357));
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("maxIdleTime", (String) null, "maxIdleTime", (String) null, integer0, integer0, integer0, integer0, integer0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("", "", (String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("W&|r-t$Hns", "W&|r-t$Hns", "W&|r-t$Hns");
      // Undeclared exception!
      try { 
        c3p0Plugin0.setAcquireIncrement((-18));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // acquireIncrement must more than 0.
         //
         verifyException("com.jfinal.plugin.c3p0.C3p0Plugin", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("", "", "maxIdleTime", "");
      C3p0Plugin c3p0Plugin1 = c3p0Plugin0.setAcquireIncrement(100);
      assertSame(c3p0Plugin0, c3p0Plugin1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("", "", "maxIdleTime", "");
      // Undeclared exception!
      try { 
        c3p0Plugin0.setMaxIdleTime(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxIdleTime must more than 0.
         //
         verifyException("com.jfinal.plugin.c3p0.C3p0Plugin", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Integer integer0 = new Integer(475);
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("Filter key: [", "Filter key: [", "Filter key: [", "Filter key: [", integer0, integer0, integer0, integer0, integer0);
      C3p0Plugin c3p0Plugin1 = c3p0Plugin0.setMaxIdleTime(475);
      assertSame(c3p0Plugin0, c3p0Plugin1);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("Ignoring attempt to add an existent listener.", "Ignoring attempt to add an existent listener.", "Could not read configuration file from URL [");
      // Undeclared exception!
      try { 
        c3p0Plugin0.setInitialPoolSize((-409));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // initialPoolSize must more than 0.
         //
         verifyException("com.jfinal.plugin.c3p0.C3p0Plugin", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("Ignoring attempt to add an existent listener.", "Ignoring attempt to add an existent listener.", "Could not read configuration file from URL [");
      C3p0Plugin c3p0Plugin1 = c3p0Plugin0.setInitialPoolSize(4);
      assertSame(c3p0Plugin1, c3p0Plugin0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Integer integer0 = new Integer(475);
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("Filter key: [", "Filter key: [", "Filter key: [", "Filter key: [", integer0, integer0, integer0, integer0, integer0);
      // Undeclared exception!
      try { 
        c3p0Plugin0.setMinPoolSize((-377));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // minPoolSize must more than 0.
         //
         verifyException("com.jfinal.plugin.c3p0.C3p0Plugin", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("", "", "maxIdleTime", "");
      C3p0Plugin c3p0Plugin1 = c3p0Plugin0.setMinPoolSize(100);
      assertSame(c3p0Plugin0, c3p0Plugin1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Integer integer0 = new Integer(10);
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("&ziXm?*v&r=e#=9x1)", "&ziXm?*v&r=e#=9x1)", "&ziXm?*v&r=e#=9x1)", "&ziXm?*v&r=e#=9x1)", (Integer) null, integer0, integer0, integer0, (Integer) null);
      // Undeclared exception!
      try { 
        c3p0Plugin0.setMaxPoolSize((-2125));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // maxPoolSize must more than 0.
         //
         verifyException("com.jfinal.plugin.c3p0.C3p0Plugin", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("", "", "maxIdleTime", "");
      C3p0Plugin c3p0Plugin1 = c3p0Plugin0.setMaxPoolSize(100);
      assertSame(c3p0Plugin0, c3p0Plugin1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Integer integer0 = new Integer(0);
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("maxPoolSize must more than 0.", "", "", "maxPoolSize must more than 0.", integer0, integer0, integer0, integer0, integer0);
      // Undeclared exception!
      try { 
        c3p0Plugin0.setDriverClass("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // driverClass can not be blank.
         //
         verifyException("com.jfinal.plugin.c3p0.C3p0Plugin", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Integer integer0 = new Integer(475);
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("Filter key: [", "Filter key: [", "Filter key: [", "Filter key: [", integer0, integer0, integer0, integer0, integer0);
      C3p0Plugin c3p0Plugin1 = c3p0Plugin0.setDriverClass("Filter key: [");
      assertSame(c3p0Plugin0, c3p0Plugin1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("", "", "");
      DataSource dataSource0 = c3p0Plugin0.getDataSource();
      assertNull(dataSource0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Properties properties0 = new Properties();
      C3p0Plugin c3p0Plugin0 = null;
      try {
        c3p0Plugin0 = new C3p0Plugin(properties0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      C3p0Plugin c3p0Plugin0 = new C3p0Plugin("", "", "");
      ComboPooledDataSource comboPooledDataSource0 = c3p0Plugin0.getComboPooledDataSource();
      assertNull(comboPooledDataSource0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      C3p0Plugin c3p0Plugin0 = null;
      try {
        c3p0Plugin0 = new C3p0Plugin((Properties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.plugin.c3p0.C3p0Plugin", e);
      }
  }
}
