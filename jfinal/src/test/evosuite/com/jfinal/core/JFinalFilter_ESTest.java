/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:19:44 GMT 2018
 */

package com.jfinal.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.core.JFinalFilter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletRequestWrapper;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpServletResponseWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class JFinalFilter_ESTest extends JFinalFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JFinalFilter jFinalFilter0 = new JFinalFilter();
      // Undeclared exception!
      try { 
        jFinalFilter0.init((FilterConfig) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.core.JFinalFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JFinalFilter jFinalFilter0 = new JFinalFilter();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      FilterChain filterChain0 = mock(FilterChain.class, new ViolatedAssumptionAnswer());
      httpServletRequestWrapper0.setRequest(httpServletRequestWrapper0);
      // Undeclared exception!
      try { 
        jFinalFilter0.doFilter(httpServletRequestWrapper0, httpServletResponseWrapper0, filterChain0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JFinalFilter jFinalFilter0 = new JFinalFilter();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      ServletRequestWrapper servletRequestWrapper0 = new ServletRequestWrapper(httpServletRequestWrapper0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      // Undeclared exception!
      try { 
        jFinalFilter0.doFilter(servletRequestWrapper0, httpServletResponseWrapper0, (FilterChain) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // javax.servlet.ServletRequestWrapper cannot be cast to javax.servlet.http.HttpServletRequest
         //
         verifyException("com.jfinal.core.JFinalFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JFinalFilter jFinalFilter0 = new JFinalFilter();
      // Undeclared exception!
      try { 
        jFinalFilter0.createJFinalConfig("com.jfinal.template.Engine");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      FilterConfig filterConfig0 = mock(FilterConfig.class, new ViolatedAssumptionAnswer());
      doReturn("com.jfinal.core.JFinalFilter").when(filterConfig0).getInitParameter(anyString());
      JFinalFilter jFinalFilter0 = new JFinalFilter();
      // Undeclared exception!
      try { 
        jFinalFilter0.init(filterConfig0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can not create instance of class: com.jfinal.core.JFinalFilter. Please check the config in web.xml
         //
         verifyException("com.jfinal.core.JFinalFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JFinalFilter jFinalFilter0 = new JFinalFilter();
      FilterConfig filterConfig0 = mock(FilterConfig.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(filterConfig0).getInitParameter(anyString());
      // Undeclared exception!
      try { 
        jFinalFilter0.init(filterConfig0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Please set configClass parameter of JFinalFilter in web.xml
         //
         verifyException("com.jfinal.core.JFinalFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JFinalFilter jFinalFilter0 = new JFinalFilter();
      // Undeclared exception!
      try { 
        jFinalFilter0.createJFinalConfig("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Can not create instance of class: 
         //
         verifyException("com.jfinal.core.JFinalFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      JFinalFilter jFinalFilter0 = new JFinalFilter();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getRequestURI();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      FilterChain filterChain0 = mock(FilterChain.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        jFinalFilter0.doFilter(httpServletRequestWrapper0, httpServletResponseWrapper0, filterChain0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.core.JFinalFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      JFinalFilter.initLog();
      JFinalFilter jFinalFilter0 = new JFinalFilter();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getRequestURI();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      FilterChain filterChain0 = mock(FilterChain.class, new ViolatedAssumptionAnswer());
      jFinalFilter0.doFilter(httpServletRequestWrapper0, httpServletResponseWrapper0, filterChain0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      JFinalFilter jFinalFilter0 = new JFinalFilter();
      // Undeclared exception!
      try { 
        jFinalFilter0.destroy();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.core.JFinalFilter", e);
      }
  }
}
