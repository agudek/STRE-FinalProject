/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:28:47 GMT 2018
 */

package com.jfinal.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.jfinal.json.Jackson;
import com.jfinal.json.Json;
import javax.swing.JRadioButton;
import javax.swing.table.DefaultTableModel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class Jackson_ESTest extends Jackson_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Jackson jackson0 = new Jackson();
      Json.setDefaultDatePattern("Could not resolve type");
      // Undeclared exception!
      try { 
        jackson0.toJson((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'C'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Jackson jackson0 = new Jackson();
      jackson0.config();
      assertNull(jackson0.getDatePattern());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Jackson jackson0 = new Jackson();
      Class<String> class0 = String.class;
      String string0 = jackson0.parse("null", class0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Jackson jackson0 = new Jackson();
      Class<Integer> class0 = Integer.class;
      Integer integer0 = jackson0.parse("1871", class0);
      assertEquals(1871, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Jackson jackson0 = new Jackson();
      jackson0.objectMapper = null;
      ObjectMapper objectMapper0 = jackson0.getObjectMapper();
      assertNull(objectMapper0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Jackson jackson0 = Jackson.getJson();
      DefaultTableModel defaultTableModel0 = new DefaultTableModel((Object[][]) null, (Object[]) null);
      jackson0.toJson(defaultTableModel0);
      JRadioButton jRadioButton0 = new JRadioButton("+VeAs,P}(+.>xT>:");
      // Undeclared exception!
      jackson0.toJson(jRadioButton0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Jackson jackson0 = new Jackson();
      jackson0.objectMapper = null;
      // Undeclared exception!
      try { 
        jackson0.toJson((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.json.Jackson", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Jackson jackson0 = new Jackson();
      ObjectMapper objectMapper0 = jackson0.getObjectMapper();
      // Undeclared exception!
      try { 
        jackson0.toJson(objectMapper0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // com/fasterxml/jackson/databind/JsonMappingException$Reference
         //
         verifyException("com.fasterxml.jackson.databind.ser.std.BeanSerializerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Jackson jackson0 = new Jackson();
      Jackson jackson1 = jackson0.setGenerateNullValue(false);
      jackson1.objectMapper = null;
      // Undeclared exception!
      try { 
        jackson1.config();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.json.Jackson", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Jackson jackson0 = new Jackson();
      Class<RuntimeException> class0 = RuntimeException.class;
      // Undeclared exception!
      try { 
        jackson0.parse((String) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.JsonFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Jackson jackson0 = new Jackson();
      Class<String> class0 = String.class;
      // Undeclared exception!
      try { 
        jackson0.parse("", class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.fasterxml.jackson.databind.JsonMappingException: No content to map due to end-of-input
         //  at [Source: java.lang.String@0000000025; line: 1, column: 1]
         //
         verifyException("com.jfinal.json.Jackson", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Jackson jackson0 = Jackson.getJson();
      jackson0.datePattern = "com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey";
      // Undeclared exception!
      try { 
        jackson0.toJson("com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal pattern character 'c'
         //
         verifyException("java.text.SimpleDateFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Jackson jackson0 = Jackson.getJson();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        jackson0.toJson(object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.fasterxml.jackson.databind.JsonMappingException: No serializer found for class java.lang.Object and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) )
         //
         verifyException("com.jfinal.json.Jackson", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Jackson.setDefaultGenerateNullValue(false);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Jackson jackson0 = Jackson.getJson();
      Jackson jackson1 = jackson0.setGenerateNullValue(false);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        jackson1.toJson(object0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // com.fasterxml.jackson.databind.JsonMappingException: No serializer found for class java.lang.Object and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) )
         //
         verifyException("com.jfinal.json.Jackson", e);
      }
  }
}
