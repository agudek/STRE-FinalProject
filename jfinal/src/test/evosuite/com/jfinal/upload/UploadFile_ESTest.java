/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 15:25:18 GMT 2018
 */

package com.jfinal.upload;

import org.junit.Test;
import static org.junit.Assert.*;
import com.jfinal.upload.UploadFile;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class UploadFile_ESTest extends UploadFile_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile("P$.@78cY `", (String) null, "P$.@78cY `", (String) null, "");
      String string0 = uploadFile0.getUploadPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile("", "", ">Ws}LS  gP", "", "");
      String string0 = uploadFile0.getUploadPath();
      assertEquals(">Ws}LS  gP", uploadFile0.getFileName());
      assertEquals("", uploadFile0.getOriginalFileName());
      assertEquals("", uploadFile0.getParameterName());
      assertEquals("", string0);
      assertEquals("", uploadFile0.getContentType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile((String) null, (String) null, "gRa0jtsy}(krix}", "gRa0jtsy}(krix}", (String) null);
      String string0 = uploadFile0.getParameterName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile("", "", ">Ws}LS  gP", "", "");
      String string0 = uploadFile0.getParameterName();
      assertEquals("", uploadFile0.getContentType());
      assertEquals("", uploadFile0.getUploadPath());
      assertEquals(">Ws}LS  gP", uploadFile0.getFileName());
      assertEquals("", string0);
      assertEquals("", uploadFile0.getOriginalFileName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile(".()m3^*&V*EN", ".()m3^*&V*EN", ".()m3^*&V*EN", ".()m3^*&V*EN", "");
      String string0 = uploadFile0.getOriginalFileName();
      assertEquals("", uploadFile0.getContentType());
      assertEquals(".()m3^*&V*EN", string0);
      assertEquals(".()m3^*&V*EN", uploadFile0.getParameterName());
      assertEquals(".()m3^*&V*EN", uploadFile0.getFileName());
      assertEquals(".()m3^*&V*EN", uploadFile0.getUploadPath());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile("", "", "", "", "");
      String string0 = uploadFile0.getOriginalFileName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile((String) null, (String) null, (String) null, (String) null, "");
      String string0 = uploadFile0.getFileName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile("", "", "", "cLVvAmy#ih+F", "cLVvAmy#ih+F");
      String string0 = uploadFile0.getFileName();
      assertEquals("cLVvAmy#ih+F", uploadFile0.getOriginalFileName());
      assertEquals("", uploadFile0.getParameterName());
      assertEquals("", uploadFile0.getUploadPath());
      assertEquals("", string0);
      assertEquals("cLVvAmy#ih+F", uploadFile0.getContentType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile(".()m3^*&V*EN", ".()m3^*&V*EN", ".()m3^*&V*EN", ".()m3^*&V*EN", "");
      File file0 = uploadFile0.getFile();
      assertEquals(".()m3^*&V*EN/.()m3^*&V*EN", file0.toString());
      assertEquals(".()m3^*&V*EN", uploadFile0.getOriginalFileName());
      assertNotNull(file0);
      assertEquals("", uploadFile0.getContentType());
      assertEquals(".()m3^*&V*EN", uploadFile0.getParameterName());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile("", "", "", "", "");
      File file0 = uploadFile0.getFile();
      assertTrue(file0.isAbsolute());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile("", "", ">Ws}LS  gP", "", "");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/>Ws}LS  gP");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "mVz_7f}EAvQ!L");
      File file0 = uploadFile0.getFile();
      assertEquals("", uploadFile0.getOriginalFileName());
      assertEquals("", uploadFile0.getParameterName());
      assertEquals("/>Ws}LS  gP", file0.toString());
      assertEquals("", uploadFile0.getContentType());
      assertNotNull(file0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile((String) null, (String) null, (String) null, "", "com.jfinal.upload.UploadFile");
      String string0 = uploadFile0.getContentType();
      assertNotNull(string0);
      assertEquals("", uploadFile0.getOriginalFileName());
      assertEquals("com.jfinal.upload.UploadFile", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile(".()m3^*&V*EN", ".()m3^*&V*EN", ".()m3^*&V*EN", ".()m3^*&V*EN", "");
      String string0 = uploadFile0.getContentType();
      assertEquals(".()m3^*&V*EN", uploadFile0.getParameterName());
      assertEquals(".()m3^*&V*EN", uploadFile0.getOriginalFileName());
      assertEquals("", string0);
      assertEquals(".()m3^*&V*EN", uploadFile0.getFileName());
      assertEquals(".()m3^*&V*EN", uploadFile0.getUploadPath());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile("", "", (String) null, (String) null, (String) null);
      File file0 = uploadFile0.getFile();
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile((String) null, (String) null, (String) null, (String) null, (String) null);
      File file0 = uploadFile0.getFile();
      assertNull(file0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile("", "", (String) null, (String) null, (String) null);
      String string0 = uploadFile0.getOriginalFileName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile("", "", (String) null, (String) null, (String) null);
      String string0 = uploadFile0.getContentType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile("*<:.:e/JEjOv8tjq8jU", "*<:.:e/JEjOv8tjq8jU", "*<:.:e/JEjOv8tjq8jU", "*<:.:e/JEjOv8tjq8jU", "*<:.:e/JEjOv8tjq8jU");
      String string0 = uploadFile0.getParameterName();
      assertEquals("*<:.:e/JEjOv8tjq8jU", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile("*<:.:e/JEjOv8tjq8jU", "*<:.:e/JEjOv8tjq8jU", "*<:.:e/JEjOv8tjq8jU", "*<:.:e/JEjOv8tjq8jU", "*<:.:e/JEjOv8tjq8jU");
      String string0 = uploadFile0.getUploadPath();
      assertEquals("*<:.:e/JEjOv8tjq8jU", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UploadFile uploadFile0 = new UploadFile("*<:.:e/JEjOv8tjq8jU", "*<:.:e/JEjOv8tjq8jU", "*<:.:e/JEjOv8tjq8jU", "*<:.:e/JEjOv8tjq8jU", "*<:.:e/JEjOv8tjq8jU");
      String string0 = uploadFile0.getFileName();
      assertEquals("*<:.:e/JEjOv8tjq8jU", string0);
  }
}
