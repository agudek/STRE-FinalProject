/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 15:42:14 GMT 2018
 */

package com.jfinal.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.config.Plugins;
import com.jfinal.plugin.IPlugin;
import com.jfinal.plugin.hikaricp.HikariCpPlugin;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class Plugins_ESTest extends Plugins_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Plugins plugins0 = new Plugins();
      HikariCpPlugin hikariCpPlugin0 = new HikariCpPlugin("", "", "n$@", "n$@");
      plugins0.add(hikariCpPlugin0);
      List<IPlugin> list0 = plugins0.getPluginList();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Plugins plugins0 = new Plugins();
      // Undeclared exception!
      try { 
        plugins0.add((IPlugin) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // plugin can not be null
         //
         verifyException("com.jfinal.config.Plugins", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Plugins plugins0 = new Plugins();
      List<IPlugin> list0 = plugins0.getPluginList();
      assertTrue(list0.isEmpty());
  }
}
