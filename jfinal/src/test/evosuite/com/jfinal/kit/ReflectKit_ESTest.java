/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 18:02:58 GMT 2018
 */

package com.jfinal.kit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.kit.ReflectKit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class ReflectKit_ESTest extends ReflectKit_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Object object0 = ReflectKit.newInstance(class0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        ReflectKit.newInstance(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.InstantiationException: java.lang.Integer
         //
         verifyException("com.jfinal.kit.ReflectKit", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ReflectKit reflectKit0 = new ReflectKit();
  }
}
