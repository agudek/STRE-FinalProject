/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 13:47:57 GMT 2018
 */

package com.jfinal.render;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;
import com.jfinal.render.QrCodeRender;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class QrCodeRender_ESTest extends QrCodeRender_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QrCodeRender qrCodeRender0 = null;
      try {
        qrCodeRender0 = new QrCodeRender((String) null, (-360), 76, 'L');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // content \u4E0D\u80FD\u4E3A\u7A7A
         //
         verifyException("com.jfinal.render.QrCodeRender", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QrCodeRender qrCodeRender0 = new QrCodeRender("EofException", 72, 3337, 'M');
      assertFalse(qrCodeRender0.getDevMode());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QrCodeRender qrCodeRender0 = new QrCodeRender("DATA_MATRIX", 0, 47, 'H');
      assertFalse(qrCodeRender0.getDevMode());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QrCodeRender qrCodeRender0 = null;
      try {
        qrCodeRender0 = new QrCodeRender("", 3, 0, '\"');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // errorCorrectionLevel \u7EA0\u9519\u7EA7\u522B\u53C2\u6570\u503C\uFF0C\u4ECE\u9AD8\u5230\u4F4E\u5FC5\u987B\u4E3A\uFF1A 'H'\u3001'Q'\u3001'M'\u3001'L'
         //
         verifyException("com.jfinal.render.QrCodeRender", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QrCodeRender qrCodeRender0 = new QrCodeRender("%pq\u0001So", 0, 0);
      assertFalse(qrCodeRender0.getDevMode());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ErrorCorrectionLevel errorCorrectionLevel0 = ErrorCorrectionLevel.M;
      QrCodeRender qrCodeRender0 = new QrCodeRender("\"_-Y5wUzT.#}", 0, 0, errorCorrectionLevel0);
      // Undeclared exception!
      try { 
        qrCodeRender0.render();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.render.QrCodeRender", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      QrCodeRender qrCodeRender0 = null;
      try {
        qrCodeRender0 = new QrCodeRender("e", (-360), (-360), 'L');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width \u4E0E height \u4E0D\u80FD\u5C0F\u4E8E 0
         //
         verifyException("com.jfinal.render.QrCodeRender", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QrCodeRender qrCodeRender0 = null;
      try {
        qrCodeRender0 = new QrCodeRender("", 52, 'Q', 'Q');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // content \u4E0D\u80FD\u4E3A\u7A7A
         //
         verifyException("com.jfinal.render.QrCodeRender", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QrCodeRender qrCodeRender0 = null;
      try {
        qrCodeRender0 = new QrCodeRender("L|.U:", (-2805), 924);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width \u4E0E height \u4E0D\u80FD\u5C0F\u4E8E 0
         //
         verifyException("com.jfinal.render.QrCodeRender", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ErrorCorrectionLevel errorCorrectionLevel0 = ErrorCorrectionLevel.L;
      QrCodeRender qrCodeRender0 = null;
      try {
        qrCodeRender0 = new QrCodeRender("com.google.zxing.BarcodeFormat", 70, (-3887), errorCorrectionLevel0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // width \u4E0E height \u4E0D\u80FD\u5C0F\u4E8E 0
         //
         verifyException("com.jfinal.render.QrCodeRender", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QrCodeRender qrCodeRender0 = null;
      try {
        qrCodeRender0 = new QrCodeRender("", 0, 0, '^');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // errorCorrectionLevel \u7EA0\u9519\u7EA7\u522B\u53C2\u6570\u503C\uFF0C\u4ECE\u9AD8\u5230\u4F4E\u5FC5\u987B\u4E3A\uFF1A 'H'\u3001'Q'\u3001'M'\u3001'L'
         //
         verifyException("com.jfinal.render.QrCodeRender", e);
      }
  }
}
