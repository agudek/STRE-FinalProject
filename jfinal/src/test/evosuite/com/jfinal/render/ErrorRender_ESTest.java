/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 18 14:45:27 GMT 2018
 */

package com.jfinal.render;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.jfinal.render.ErrorRender;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class ErrorRender_ESTest extends ErrorRender_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ErrorRender errorRender0 = new ErrorRender((-1333), "U._%.dWNi#j|/$");
      String string0 = errorRender0.getErrorHtml();
      assertEquals("U._%.dWNi#j|/$", errorRender0.getView());
      assertEquals("<html><head><title>-1333 Error</title></head><body bgcolor='white'><center><h1>-1333 Error</h1></center><hr><center><a href='http://www.jfinal.com?f=ev-3.4' target='_blank'><b>Powered by JFinal 3.4</b></a></center></body></html>", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ErrorRender errorRender0 = new ErrorRender(0, "");
      int int0 = errorRender0.getErrorCode();
      assertEquals("", errorRender0.getView());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ErrorRender errorRender0 = new ErrorRender(3600, "");
      int int0 = errorRender0.getErrorCode();
      assertEquals("", errorRender0.getView());
      assertEquals(3600, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ErrorRender errorRender0 = new ErrorRender(0, "");
      // Undeclared exception!
      try { 
        errorRender0.render();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.jfinal.render.ErrorRender", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ErrorRender errorRender0 = new ErrorRender((-304), (String) null);
      int int0 = errorRender0.getErrorCode();
      assertEquals((-304), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ErrorRender errorRender0 = new ErrorRender(403, "");
      String string0 = errorRender0.getErrorHtml();
      assertEquals("", errorRender0.getView());
      assertEquals("<html><head><title>403 Forbidden</title></head><body bgcolor='white'><center><h1>403 Forbidden</h1></center><hr><center><a href='http://www.jfinal.com?f=ev-3.4' target='_blank'><b>Powered by JFinal 3.4</b></a></center></body></html>", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ErrorRender errorRender0 = new ErrorRender(401, "</body></html>");
      String string0 = errorRender0.getErrorHtml();
      assertEquals("<html><head><title>401 Unauthorized</title></head><body bgcolor='white'><center><h1>401 Unauthorized</h1></center><hr><center><a href='http://www.jfinal.com?f=ev-3.4' target='_blank'><b>Powered by JFinal 3.4</b></a></center></body></html>", string0);
      assertEquals("</body></html>", errorRender0.getView());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ErrorRender errorRender0 = new ErrorRender(500, "com.jfinal.render.ErrorRender");
      String string0 = errorRender0.getErrorHtml();
      assertEquals("<html><head><title>500 Internal Server Error</title></head><body bgcolor='white'><center><h1>500 Internal Server Error</h1></center><hr><center><a href='http://www.jfinal.com?f=ev-3.4' target='_blank'><b>Powered by JFinal 3.4</b></a></center></body></html>", string0);
      assertEquals("com.jfinal.render.ErrorRender", errorRender0.getView());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ErrorRender errorRender0 = new ErrorRender(404, "o");
      String string0 = errorRender0.getErrorHtml();
      assertEquals("o", errorRender0.getView());
      assertEquals("<html><head><title>404 Not Found</title></head><body bgcolor='white'><center><h1>404 Not Found</h1></center><hr><center><a href='http://www.jfinal.com?f=ev-3.4' target='_blank'><b>Powered by JFinal 3.4</b></a></center></body></html>", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ErrorRender errorRender0 = new ErrorRender(2773, "m'?M?/");
      String string0 = errorRender0.getErrorHtml();
      assertEquals("m'?M?/", errorRender0.getView());
      assertEquals("<html><head><title>2773 Error</title></head><body bgcolor='white'><center><h1>2773 Error</h1></center><hr><center><a href='http://www.jfinal.com?f=ev-3.4' target='_blank'><b>Powered by JFinal 3.4</b></a></center></body></html>", string0);
  }
}
