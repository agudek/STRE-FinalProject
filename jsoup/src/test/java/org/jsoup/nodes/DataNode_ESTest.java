/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 23 09:07:50 GMT 2018
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.StringWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Node;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DataNode_ESTest extends DataNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DataNode dataNode0 = DataNode.createFromEncoded("9c$YK}kv", "0");
      MockFile mockFile0 = new MockFile("#data", "");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      Document.OutputSettings document_OutputSettings0 = dataNode0.getOutputSettings();
      dataNode0.outerHtmlHead(mockPrintStream0, 1526, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DataNode dataNode0 = new DataNode("");
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      dataNode0.outerHtmlTail(stringBuffer0, 1, document_OutputSettings0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DataNode dataNode0 = DataNode.createFromEncoded("-->", "-->");
      dataNode0.toString();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DataNode dataNode0 = DataNode.createFromEncoded("9c$YK}kv", "0");
      dataNode0.setSiblingIndex(1526);
      dataNode0.setWholeData("9c$YK}kv");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DataNode dataNode0 = DataNode.createFromEncoded("", "y~l-Bzlx_VG>Z2j.ZM");
      dataNode0.setSiblingIndex((-1286));
      dataNode0.setWholeData("");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DataNode dataNode0 = new DataNode((String) null);
      dataNode0.setParentNode(dataNode0);
      dataNode0.setWholeData((String) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DataNode dataNode0 = new DataNode("M<+", "U");
      DataNode dataNode1 = dataNode0.setWholeData((String) null);
      dataNode1.getWholeData();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DataNode dataNode0 = DataNode.createFromEncoded("qQ", "extended");
      dataNode0.getWholeData();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DataNode dataNode0 = new DataNode((String) null);
      dataNode0.reparentChild(dataNode0);
      // Undeclared exception!
      dataNode0.toString();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DataNode dataNode0 = new DataNode((String) null);
      Node node0 = dataNode0.shallowClone();
      dataNode0.setParentNode(node0);
      // Undeclared exception!
      try { 
        dataNode0.toString();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Leaf Nodes do not have child nodes.
         //
         verifyException("org.jsoup.nodes.LeafNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DataNode dataNode0 = DataNode.createFromEncoded("!&ij~F'85P)", "n,^e{?");
      dataNode0.value = (Object) dataNode0;
      // Undeclared exception!
      try { 
        dataNode0.toString();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.jsoup.nodes.DataNode cannot be cast to java.lang.String
         //
         verifyException("org.jsoup.nodes.LeafNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DataNode dataNode0 = DataNode.createFromEncoded("", "kA%KVv;]+x");
      Document.OutputSettings document_OutputSettings0 = dataNode0.getOutputSettings();
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        dataNode0.outerHtmlHead(pipedWriter0, 2125, document_OutputSettings0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        DataNode.createFromEncoded((String) null, "y~l-Bzlx_VG>Z2j.ZM");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DataNode dataNode0 = DataNode.createFromEncoded("", "kA%KVv;]+x");
      dataNode0.nodeName();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DataNode dataNode0 = DataNode.createFromEncoded("", "kA%KVv;]+x");
      dataNode0.getWholeData();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DataNode dataNode0 = new DataNode((String) null, (String) null);
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        dataNode0.outerHtmlHead((Appendable) null, 2524, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.DataNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DataNode dataNode0 = DataNode.createFromEncoded("", "kA%KVv;]+x");
      dataNode0.toString();
  }
}
