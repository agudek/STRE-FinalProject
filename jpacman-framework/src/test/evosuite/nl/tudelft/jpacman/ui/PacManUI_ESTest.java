/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 12 11:10:14 GMT 2018
 */

package nl.tudelft.jpacman.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.HeadlessException;
import java.util.HashMap;
import java.util.Hashtable;
import nl.tudelft.jpacman.game.Game;
import nl.tudelft.jpacman.ui.Action;
import nl.tudelft.jpacman.ui.PacManUI;
import nl.tudelft.jpacman.ui.ScorePanel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PacManUI_ESTest extends PacManUI_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Game game0 = mock(Game.class, new ViolatedAssumptionAnswer());
      HashMap<String, Action> hashMap0 = new HashMap<String, Action>();
      Hashtable<Integer, Action> hashtable0 = new Hashtable<Integer, Action>();
      ScorePanel.ScoreFormatter scorePanel_ScoreFormatter0 = mock(ScorePanel.ScoreFormatter.class, new ViolatedAssumptionAnswer());
      PacManUI pacManUI0 = null;
      try {
        pacManUI0 = new PacManUI(game0, hashMap0, hashtable0, scorePanel_ScoreFormatter0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.GraphicsEnvironment", e);
      }
  }
}
