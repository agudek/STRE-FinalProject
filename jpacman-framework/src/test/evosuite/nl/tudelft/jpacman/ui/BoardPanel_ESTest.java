/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 12 11:11:29 GMT 2018
 */

package nl.tudelft.jpacman.ui;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import nl.tudelft.jpacman.board.Board;
import nl.tudelft.jpacman.game.Game;
import nl.tudelft.jpacman.level.Level;
import nl.tudelft.jpacman.ui.BoardPanel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BoardPanel_ESTest extends BoardPanel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Level level0 = mock(Level.class, new ViolatedAssumptionAnswer());
      doReturn((Board) null).when(level0).getBoard();
      Game game0 = mock(Game.class, new ViolatedAssumptionAnswer());
      doReturn(level0).when(game0).getLevel();
      BoardPanel boardPanel0 = null;
      try {
        boardPanel0 = new BoardPanel(game0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("nl.tudelft.jpacman.ui.BoardPanel", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BoardPanel boardPanel0 = null;
      try {
        boardPanel0 = new BoardPanel((Game) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
