/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 12 11:24:22 GMT 2018
 */

package nl.tudelft.jpacman.level;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import nl.tudelft.jpacman.board.Direction;
import nl.tudelft.jpacman.board.Unit;
import nl.tudelft.jpacman.level.DefaultPlayerInteractionMap;
import nl.tudelft.jpacman.level.Player;
import nl.tudelft.jpacman.npc.ghost.Blinky;
import nl.tudelft.jpacman.sprite.AnimatedSprite;
import nl.tudelft.jpacman.sprite.Sprite;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultPlayerInteractionMap_ESTest extends DefaultPlayerInteractionMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DefaultPlayerInteractionMap defaultPlayerInteractionMap0 = new DefaultPlayerInteractionMap();
      HashMap<Direction, Sprite> hashMap0 = new HashMap<Direction, Sprite>();
      Blinky blinky0 = new Blinky(hashMap0);
      defaultPlayerInteractionMap0.collide(blinky0, blinky0);
      assertFalse(blinky0.hasSquare());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DefaultPlayerInteractionMap defaultPlayerInteractionMap0 = new DefaultPlayerInteractionMap();
      HashMap<Direction, Sprite> hashMap0 = new HashMap<Direction, Sprite>();
      AnimatedSprite animatedSprite0 = mock(AnimatedSprite.class, new ViolatedAssumptionAnswer());
      Player player0 = new Player(hashMap0, animatedSprite0);
      // Undeclared exception!
      try { 
        defaultPlayerInteractionMap0.collide(player0, (Unit) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("nl.tudelft.jpacman.level.CollisionInteractionMap", e);
      }
  }
}
