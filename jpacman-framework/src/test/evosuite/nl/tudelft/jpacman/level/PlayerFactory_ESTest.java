/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 12 11:23:27 GMT 2018
 */

package nl.tudelft.jpacman.level;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.HeadlessException;
import nl.tudelft.jpacman.level.PlayerFactory;
import nl.tudelft.jpacman.sprite.PacManSprites;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PlayerFactory_ESTest extends PlayerFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PlayerFactory playerFactory0 = new PlayerFactory((PacManSprites) null);
      PacManSprites pacManSprites0 = playerFactory0.getSprites();
      assertNull(pacManSprites0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PacManSprites pacManSprites0 = new PacManSprites();
      PlayerFactory playerFactory0 = new PlayerFactory(pacManSprites0);
      PacManSprites pacManSprites1 = playerFactory0.getSprites();
      assertSame(pacManSprites0, pacManSprites1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PlayerFactory playerFactory0 = new PlayerFactory((PacManSprites) null);
      // Undeclared exception!
      try { 
        playerFactory0.createPacMan();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("nl.tudelft.jpacman.level.PlayerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PacManSprites pacManSprites0 = new PacManSprites();
      PlayerFactory playerFactory0 = new PlayerFactory(pacManSprites0);
      // Undeclared exception!
      try { 
        playerFactory0.createPacMan();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
      }
  }
}
