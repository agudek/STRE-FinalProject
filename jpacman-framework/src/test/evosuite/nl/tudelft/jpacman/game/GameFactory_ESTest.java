/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 12 11:22:46 GMT 2018
 */

package nl.tudelft.jpacman.game;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.HeadlessException;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Vector;
import nl.tudelft.jpacman.board.Board;
import nl.tudelft.jpacman.board.Square;
import nl.tudelft.jpacman.game.GameFactory;
import nl.tudelft.jpacman.level.CollisionMap;
import nl.tudelft.jpacman.level.DefaultPlayerInteractionMap;
import nl.tudelft.jpacman.level.Level;
import nl.tudelft.jpacman.level.PlayerFactory;
import nl.tudelft.jpacman.npc.NPC;
import nl.tudelft.jpacman.sprite.PacManSprites;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GameFactory_ESTest extends GameFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GameFactory gameFactory0 = new GameFactory((PlayerFactory) null);
      PlayerFactory playerFactory0 = gameFactory0.getPlayerFactory();
      assertNull(playerFactory0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PacManSprites pacManSprites0 = new PacManSprites();
      PlayerFactory playerFactory0 = new PlayerFactory(pacManSprites0);
      GameFactory gameFactory0 = new GameFactory(playerFactory0);
      LinkedList<NPC> linkedList0 = new LinkedList<NPC>();
      Vector<Square> vector0 = new Vector<Square>();
      Level level0 = new Level((Board) null, linkedList0, vector0, (CollisionMap) null);
      // Undeclared exception!
      try { 
        gameFactory0.createSinglePlayerGame(level0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PlayerFactory playerFactory0 = new PlayerFactory((PacManSprites) null);
      GameFactory gameFactory0 = new GameFactory(playerFactory0);
      Vector<NPC> vector0 = new Vector<NPC>();
      ArrayList<Square> arrayList0 = new ArrayList<Square>();
      DefaultPlayerInteractionMap defaultPlayerInteractionMap0 = new DefaultPlayerInteractionMap();
      Level level0 = new Level((Board) null, vector0, arrayList0, defaultPlayerInteractionMap0);
      // Undeclared exception!
      try { 
        gameFactory0.createSinglePlayerGame(level0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("nl.tudelft.jpacman.level.PlayerFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PlayerFactory playerFactory0 = new PlayerFactory((PacManSprites) null);
      GameFactory gameFactory0 = new GameFactory(playerFactory0);
      PlayerFactory playerFactory1 = gameFactory0.getPlayerFactory();
      assertSame(playerFactory0, playerFactory1);
  }
}
