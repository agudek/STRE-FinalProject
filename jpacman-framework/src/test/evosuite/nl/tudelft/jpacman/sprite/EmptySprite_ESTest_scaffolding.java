/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Apr 12 11:25:45 GMT 2018
 */

package nl.tudelft.jpacman.sprite;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class EmptySprite_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "nl.tudelft.jpacman.sprite.EmptySprite"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/agudek/Documents/STRE/final_project/jpacman-framework"); 
    java.lang.System.setProperty("user.home", "/home/agudek"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "agudek"); 
    java.lang.System.setProperty("user.timezone", "Europe/Amsterdam"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(EmptySprite_ESTest_scaffolding.class.getClassLoader() ,
      "com.github.javaparser.ast.expr.ArrayAccessExpr",
      "com.github.javaparser.ast.stmt.ContinueStmt",
      "com.github.javaparser.ast.nodeTypes.NodeWithIdentifier",
      "com.github.javaparser.ast.expr.ClassExpr",
      "com.github.javaparser.ast.stmt.WhileStmt",
      "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPrivateModifier",
      "com.github.javaparser.ast.expr.InstanceOfExpr",
      "com.github.javaparser.ast.stmt.UnparsableStmt",
      "com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt",
      "com.github.javaparser.ast.type.IntersectionType",
      "com.github.javaparser.ast.nodeTypes.NodeWithTraversableScope",
      "com.github.javaparser.ast.expr.NullLiteralExpr",
      "com.github.javaparser.ast.expr.LiteralExpr",
      "com.github.javaparser.ast.type.Type",
      "com.github.javaparser.ast.expr.CharLiteralExpr",
      "com.github.javaparser.ast.expr.ObjectCreationExpr",
      "com.github.javaparser.ast.Node$ObserverRegistrationMode",
      "com.github.javaparser.ast.expr.Expression",
      "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers",
      "com.github.javaparser.ast.nodeTypes.NodeWithRange",
      "com.github.javaparser.ast.modules.ModuleOpensStmt",
      "com.github.javaparser.ast.expr.SimpleName",
      "com.github.javaparser.ast.stmt.LabeledStmt",
      "com.github.javaparser.ast.expr.ArrayCreationExpr",
      "com.github.javaparser.ast.body.TypeDeclaration",
      "com.github.javaparser.ast.type.VoidType",
      "com.github.javaparser.ast.expr.MethodCallExpr",
      "com.github.javaparser.ast.stmt.AssertStmt",
      "com.github.javaparser.ast.expr.VariableDeclarationExpr",
      "com.github.javaparser.ast.stmt.ThrowStmt",
      "com.github.javaparser.ast.visitor.Visitable",
      "com.github.javaparser.ast.modules.ModuleExportsStmt",
      "com.github.javaparser.ast.modules.ModuleUsesStmt",
      "com.github.javaparser.ast.modules.ModuleRequiresStmt",
      "com.github.javaparser.ast.stmt.SwitchEntryStmt",
      "com.github.javaparser.ast.visitor.GenericVisitor",
      "com.github.javaparser.ast.expr.UnaryExpr",
      "com.github.javaparser.ast.stmt.BlockStmt",
      "com.github.javaparser.ast.comments.Comment",
      "com.github.javaparser.HasParentNode",
      "com.github.javaparser.ast.expr.ArrayInitializerExpr",
      "com.github.javaparser.ast.nodeTypes.NodeWithOptionalBlockStmt",
      "com.github.javaparser.metamodel.BodyDeclarationMetaModel",
      "com.github.javaparser.ast.Node$BreadthFirstIterator",
      "com.github.javaparser.ast.stmt.ExpressionStmt",
      "com.github.javaparser.ast.modules.ModuleProvidesStmt",
      "com.github.javaparser.ast.expr.LambdaExpr",
      "com.github.javaparser.ast.PackageDeclaration",
      "com.github.javaparser.ast.expr.ConditionalExpr",
      "com.github.javaparser.ast.expr.Name",
      "com.github.javaparser.ast.expr.AnnotationExpr",
      "com.github.javaparser.ast.body.EnumDeclaration",
      "com.github.javaparser.ast.Node$Parsedness",
      "com.github.javaparser.ast.nodeTypes.NodeWithTypeArguments",
      "com.github.javaparser.ast.expr.CastExpr",
      "com.github.javaparser.ast.body.AnnotationMemberDeclaration",
      "com.github.javaparser.ast.nodeTypes.NodeWithAnnotations",
      "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStaticModifier",
      "com.github.javaparser.ast.nodeTypes.NodeWithOptionalScope",
      "com.github.javaparser.ast.comments.JavadocComment",
      "com.github.javaparser.ast.expr.MarkerAnnotationExpr",
      "com.github.javaparser.ast.StubUnit",
      "com.github.javaparser.ast.stmt.SwitchStmt",
      "com.github.javaparser.ast.expr.SingleMemberAnnotationExpr",
      "com.github.javaparser.ast.stmt.SynchronizedStmt",
      "com.github.javaparser.ast.comments.BlockComment",
      "com.github.javaparser.ast.nodeTypes.NodeWithConstructors",
      "com.github.javaparser.ast.Node$TreeTraversal",
      "com.github.javaparser.printer.PrettyPrinterConfiguration",
      "com.github.javaparser.metamodel.StatementMetaModel",
      "com.github.javaparser.ast.visitor.VoidVisitor",
      "com.github.javaparser.ast.stmt.IfStmt",
      "com.github.javaparser.ast.expr.NameExpr",
      "com.github.javaparser.ast.body.CallableDeclaration",
      "com.github.javaparser.ast.expr.NormalAnnotationExpr",
      "com.github.javaparser.ast.body.InitializerDeclaration",
      "com.github.javaparser.ast.body.MethodDeclaration",
      "com.github.javaparser.ast.type.WildcardType",
      "com.github.javaparser.ast.nodeTypes.NodeWithScope",
      "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAbstractModifier",
      "nl.tudelft.jpacman.sprite.Sprite",
      "com.github.javaparser.ast.nodeTypes.NodeWithCondition",
      "com.github.javaparser.metamodel.BlockStmtMetaModel",
      "com.github.javaparser.ast.stmt.LocalClassDeclarationStmt",
      "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithFinalModifier",
      "com.github.javaparser.ast.type.ClassOrInterfaceType",
      "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithProtectedModifier",
      "com.github.javaparser.ast.body.ReceiverParameter",
      "com.github.javaparser.ast.observer.AstObserver",
      "com.github.javaparser.ast.nodeTypes.NodeWithExpression",
      "com.github.javaparser.ast.stmt.EmptyStmt",
      "com.github.javaparser.ast.Node$DirectChildrenIterator",
      "com.github.javaparser.metamodel.InitializerDeclarationMetaModel",
      "com.github.javaparser.ast.stmt.ForeachStmt",
      "com.github.javaparser.ast.expr.ThisExpr",
      "com.github.javaparser.ast.expr.LiteralStringValueExpr",
      "com.github.javaparser.resolution.SymbolResolver",
      "com.github.javaparser.ast.ImportDeclaration",
      "com.github.javaparser.ast.DataKey",
      "com.github.javaparser.ast.body.ConstructorDeclaration",
      "com.github.javaparser.ast.type.UnionType",
      "com.github.javaparser.ast.observer.Observable",
      "com.github.javaparser.ast.nodeTypes.NodeWithParameters",
      "com.github.javaparser.ast.nodeTypes.NodeWithSimpleName",
      "com.github.javaparser.ast.nodeTypes.NodeWithStatements",
      "com.github.javaparser.metamodel.NodeMetaModel",
      "com.github.javaparser.ast.Node$ParentsVisitor",
      "com.github.javaparser.ast.expr.BinaryExpr",
      "com.github.javaparser.ast.CompilationUnit",
      "com.github.javaparser.ast.Node",
      "com.github.javaparser.ast.nodeTypes.NodeWithType",
      "com.github.javaparser.ast.NodeList",
      "com.github.javaparser.Range",
      "com.github.javaparser.ast.type.ReferenceType",
      "com.github.javaparser.ast.type.UnknownType",
      "com.github.javaparser.ast.Node$PostOrderIterator",
      "nl.tudelft.jpacman.sprite.EmptySprite",
      "com.github.javaparser.ast.nodeTypes.NodeWithDeclaration",
      "com.github.javaparser.ast.Node$1",
      "com.github.javaparser.ast.expr.StringLiteralExpr",
      "com.github.javaparser.ast.stmt.ExplicitConstructorInvocationStmt",
      "com.github.javaparser.ast.expr.EnclosedExpr",
      "com.github.javaparser.ast.ArrayCreationLevel",
      "com.github.javaparser.ast.stmt.ForStmt",
      "com.github.javaparser.ast.Node$PreOrderIterator",
      "com.github.javaparser.ast.nodeTypes.NodeWithJavadoc",
      "com.github.javaparser.ast.nodeTypes.NodeWithVariables",
      "com.github.javaparser.ast.stmt.TryStmt",
      "com.github.javaparser.utils.Utils",
      "com.github.javaparser.ast.visitor.NoCommentHashCodeVisitor",
      "com.github.javaparser.ast.expr.LongLiteralExpr",
      "com.github.javaparser.resolution.Resolvable",
      "com.github.javaparser.ast.expr.TypeExpr",
      "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithStrictfpModifier",
      "com.github.javaparser.ast.expr.FieldAccessExpr",
      "com.github.javaparser.ast.body.ClassOrInterfaceDeclaration",
      "com.github.javaparser.ast.nodeTypes.NodeWithArguments",
      "com.github.javaparser.TokenRange",
      "com.github.javaparser.ast.observer.ObservableProperty$Type",
      "com.github.javaparser.ast.stmt.ReturnStmt",
      "com.github.javaparser.ast.body.Parameter",
      "com.github.javaparser.ast.stmt.DoStmt",
      "com.github.javaparser.ast.stmt.CatchClause",
      "com.github.javaparser.metamodel.BaseNodeMetaModel",
      "com.github.javaparser.ast.nodeTypes.NodeWithBody",
      "com.github.javaparser.ast.nodeTypes.NodeWithExtends",
      "com.github.javaparser.ast.body.VariableDeclarator",
      "com.github.javaparser.ast.modules.ModuleStmt",
      "com.github.javaparser.ast.nodeTypes.NodeWithName",
      "com.github.javaparser.ast.expr.DoubleLiteralExpr",
      "com.github.javaparser.ast.nodeTypes.NodeWithTokenRange",
      "com.github.javaparser.ast.expr.SuperExpr",
      "com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters",
      "com.github.javaparser.ast.nodeTypes.NodeWithOptionalLabel",
      "com.github.javaparser.printer.PrettyPrinter",
      "com.github.javaparser.ast.nodeTypes.NodeWithImplements",
      "com.github.javaparser.ast.nodeTypes.NodeWithModifiers",
      "com.github.javaparser.ast.type.ArrayType",
      "com.github.javaparser.ast.expr.BooleanLiteralExpr",
      "com.github.javaparser.ast.type.TypeParameter",
      "com.github.javaparser.ast.body.EnumConstantDeclaration",
      "com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions",
      "com.github.javaparser.ast.expr.AssignExpr",
      "com.github.javaparser.ast.body.BodyDeclaration",
      "com.github.javaparser.ast.stmt.Statement",
      "com.github.javaparser.ast.stmt.BreakStmt",
      "com.github.javaparser.ast.expr.MethodReferenceExpr",
      "com.github.javaparser.ast.nodeTypes.NodeWithMembers",
      "com.github.javaparser.ast.observer.ObservableProperty",
      "com.github.javaparser.ast.type.VarType",
      "com.github.javaparser.ast.comments.LineComment",
      "com.github.javaparser.ast.body.FieldDeclaration",
      "com.github.javaparser.ast.expr.MemberValuePair",
      "com.github.javaparser.ast.type.PrimitiveType",
      "com.github.javaparser.ast.modules.ModuleDeclaration",
      "com.github.javaparser.ast.nodeTypes.modifiers.NodeWithPublicModifier",
      "com.github.javaparser.ast.body.AnnotationDeclaration",
      "com.github.javaparser.ast.expr.IntegerLiteralExpr"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(EmptySprite_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "nl.tudelft.jpacman.sprite.EmptySprite",
      "com.github.javaparser.ast.visitor.NoCommentHashCodeVisitor",
      "com.github.javaparser.printer.PrettyPrinter",
      "com.github.javaparser.printer.PrettyPrinterConfiguration",
      "com.github.javaparser.utils.Utils",
      "com.github.javaparser.ast.DataKey",
      "com.github.javaparser.ast.Node$1",
      "com.github.javaparser.ast.Node",
      "com.github.javaparser.ast.stmt.Statement",
      "com.github.javaparser.ast.stmt.BlockStmt",
      "com.github.javaparser.ast.NodeList",
      "com.github.javaparser.ast.Node$Parsedness",
      "com.github.javaparser.ast.observer.ObservableProperty$Type",
      "com.github.javaparser.ast.observer.ObservableProperty",
      "com.github.javaparser.ast.body.BodyDeclaration",
      "com.github.javaparser.ast.body.InitializerDeclaration"
    );
  }
}
