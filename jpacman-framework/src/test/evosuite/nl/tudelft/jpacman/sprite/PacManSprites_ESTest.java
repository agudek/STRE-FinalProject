/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 12 11:22:04 GMT 2018
 */

package nl.tudelft.jpacman.sprite;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.HeadlessException;
import nl.tudelft.jpacman.npc.ghost.GhostColor;
import nl.tudelft.jpacman.sprite.PacManSprites;
import nl.tudelft.jpacman.sprite.Sprite;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PacManSprites_ESTest extends PacManSprites_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PacManSprites pacManSprites0 = new PacManSprites();
      Sprite sprite0 = pacManSprites0.loadSprite("");
      assertNotNull(sprite0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PacManSprites pacManSprites0 = new PacManSprites();
      // Undeclared exception!
      try { 
        pacManSprites0.loadSprite((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PacManSprites pacManSprites0 = new PacManSprites();
      // Undeclared exception!
      try { 
        pacManSprites0.loadSprite("edLgSV_UwWk4@&");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to load sprite: edLgSV_UwWk4@&
         //
         verifyException("nl.tudelft.jpacman.sprite.PacManSprites", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PacManSprites pacManSprites0 = new PacManSprites();
      // Undeclared exception!
      try { 
        pacManSprites0.getGhostSprite((GhostColor) null);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PacManSprites pacManSprites0 = new PacManSprites();
      GhostColor ghostColor0 = GhostColor.ORANGE;
      // Undeclared exception!
      try { 
        pacManSprites0.getGhostSprite(ghostColor0);
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PacManSprites pacManSprites0 = new PacManSprites();
      // Undeclared exception!
      try { 
        pacManSprites0.getPacManDeathAnimation();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      PacManSprites pacManSprites0 = new PacManSprites();
      Sprite sprite0 = pacManSprites0.getWallSprite();
      assertEquals(16, sprite0.getHeight());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PacManSprites pacManSprites0 = new PacManSprites();
      Sprite sprite0 = pacManSprites0.getPelletSprite();
      assertEquals(16, sprite0.getWidth());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PacManSprites pacManSprites0 = new PacManSprites();
      // Undeclared exception!
      try { 
        pacManSprites0.getPacmanSprites();
        fail("Expecting exception: HeadlessException");
      
      } catch(HeadlessException e) {
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      PacManSprites pacManSprites0 = new PacManSprites();
      Sprite sprite0 = pacManSprites0.getGroundSprite();
      assertEquals(16, sprite0.getWidth());
  }
}
